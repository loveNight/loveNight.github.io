<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[虚靖天师《明真破妄章颂》]]></title>
      <url>http://lovenight.github.io/2017/08/02/%E8%99%9A%E9%9D%96%E5%A4%A9%E5%B8%88%E3%80%8A%E6%98%8E%E7%9C%9F%E7%A0%B4%E5%A6%84%E7%AB%A0%E9%A2%82%E3%80%8B/</url>
      <content type="html"><![CDATA[<p><strong>tips:参照几个版本，改了些错别字。</strong></p>
<p>明真破妄章颂<br>经名：明真破妄章颂。北宋张继先着。一卷。底本出处：《正统道藏》洞神部赞颂类。</p>
<p>虚靖张真君着</p>
<p>道生天地<br>混沌未分先有道，道无形色亦无情。<br>自然化育生天地，天道轻清地道宁。</p>
<p>天地生人<br>道生天地始无名，分判阴阳立五行。<br>人位其中灵万物，人从天地道生成。</p>
<p>人禀阴阳<br>三才天地人同炁，人禀先天一炁灵。<br>一炁具身名日道，感通天地及神明。<br><a id="more"></a><br>一炁生三<br>一真真外更无真，祖炁通灵具此身。<br>道一生三生妙用，元精元炁与元神。</p>
<p>人身三宝<br>元精元炁与元神，三者无形亦有形。<br>运用得传真可见，光明无极是分明。</p>
<p>一无相关<br>雷乃先天炁化成，诸天仙圣总同真。<br>我身一炁相关召，同祖同宗贴骨亲。</p>
<p>以心合神<br>真心动处是雷机，神合神兮妙更奇。<br>只此更无差别处，如磁吸铁不相违。</p>
<p>法即是心<br>此心心外元无法，咒诀符图少合真。<br>心真将何为妙用，灵光一点运元神。</p>
<p>神可通天<br>元神直捧一封书，一道寒光射太虚。<br>径达玉京金阙去，玄恩星火下天衢。</p>
<p>呼天叱吒<br>叱叱望空将令打，不识元神召使者。<br>天高星远岂能闻，从便之乎并也者。</p>
<p>金光召雷<br>金光灼灼照雷城，百万雷兵禀令行。<br>不用符图并咒诀，旱天能雨雨能晴。</p>
<p>妄想行持<br>不悟阴阳阖辟机，想存作用总成痴。<br>雷符烧尽千千道，雨泽何曾一点施。</p>
<p>真念降魔<br>降魔何处是工夫，中有元神静定居。<br>慧剑挥时神鬼伏，便教祸害自然除。</p>
<p>心妄鬼欺<br>妄念纷纷且失真，符图咒诀费精神。<br>鬼神一见嘻嘻笑，打石抛砖更害人。</p>
<p>祖炁阳晶<br>先天祖炁至阳晶，炼尽阴魂一性灵。<br>九转玄功成顷刻，阴阳交媾结胎婴。</p>
<p>辩真阴阳<br>真阴真阳既不识，水可浴兮火可炙。<br>灵光一点不分明，受度亡魂有何益。</p>
<p>南昌非心<br>玄关一窍有阴阳，心肾元非水火乡。<br>寄语炼师高着眼，莫将心府作南昌。</p>
<p>普度有法<br>普度工夫又不同，金光灼灼照罗酆。<br>黍珠一颗空悬处，太极还归无极中。</p>
<p>取炁不同<br>昧却自家元气主，妄想天罡对空取。<br>恰似骑牛去觅牛，此等之人何足语。</p>
<p>不识元神<br>召将先轰令一声，令声惊起我元神。<br>缘何不见元神面，只为时人昧本真。</p>
<p>印须心印<br>心印相传付有绿，今人印木不知玄。<br>祖师心印相同处，颗颗光明彻九天。</p>
<p>灵光一点<br>书符道妙起工夫，委聚毫端篆作符。<br>着相想存行呎诀，将来只是墨和朱。</p>
<p>先天字号<br>号头用处须天篆，元是皇人按笔书。<br>苍颉后天尘世字，用之总是惑迷愚。</p>
<p>妄想阴阳<br>阴阳吞啖运符中，心肾盈亏黑与红。<br>一个乾坤如许大，这些伎俩岂能通。</p>
<p>肾中一点<br>两肾中间一点明，痴人守此欲通灵。<br>谁知此处皆阴气，若比阳晶隔万程。</p>
<p>心下元神<br>人言心下一包空，精气元神聚此中。<br>何似痴人容易惑，盖缘不识主人翁。</p>
<p>胆非雷府<br>妄将脏腑作雷霆，怒气膨膨起震惊。<br>击破琉璃瓶子后，何曾闻得有雷声。</p>
<p>误指雷霆<br>一阳生处地雷复，外肾应非雷所居。<br>秽浊圣贤难忏悔，将来必定被雷诛。</p>
<p>不辨真阳<br>心肝脾肺肾胆府，嘘呵咽嘻呼吹取。<br>父母后天阴阳气，如何可以祈晴雨。</p>
<p>七事纯阴<br>涕唾津精气血液，七件皆阴总无益。<br>身中只有一阴阳，江湖多少无人识。</p>
<p>秽气触真<br>有言脐下寸三分，作用金光此处存。<br>岂识此中阴浊气，运成秽浊不堪闻。</p>
<p>似是而非<br>妄言一窍在眉心，直入三分可许深。<br>误杀世人真可笑，如将「石俞」石作黄金。<br>注：「石俞」是一字</p>
<p>错认后天<br>脐轮后与肾相连，两处空空总后天。<br>若问先天玄妙处，除非得遇至人传。</p>
<p>雷动无时<br>雷动有用雷霆煞，又等停星日月时。<br>如此天机容易测，雨旸何用法来祈。</p>
<p>邪能惑正<br>几多道眼不曾明，役将祛神辄现形。<br>只为身中无主宰，阴魂假托姓名灵。</p>
<p>当明真要<br>一员神将数家法，多是宗师撰造成。<br>更过几年多是假，行符咒水岂能灵。</p>
<p>作用两全<br>道法难忘咒与符，必须道妙两相扶。<br>先天玄妙工夫到，咒诀符图可有无。</p>
<p>道本法体<br>法行大道合先天，咒诀符图总是玄。<br>至道杳然无所得，符图咒诀也徒然。</p>
<p>万法归一<br>道生于一复何疑，可以无为可有为。<br>万法本来归一处，何分正一与清微。</p>
<p>造化在我<br>本质虽殊炁不殊，当於亲处下工夫。<br>人身大抵同天地，造化阴阳总属吾。</p>
<p>兀坐顽空<br>无心兀兀坐多年，将谓神仙已有绿。<br>不解龙昤并虎啸，但知空坐也徒然。</p>
<p>阴阳互根<br>顽石中空藏白玉，纵饶见得光生目。<br>太阴元受太阳精，初八上弦圆十六。</p>
<p>因法生谤<br>本为同门共指迷，上根一览悟玄微。<br>若将此向愚痴说，生谤生瞋总是非。</p>
<p>明真破妄章颂竟</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python 3 根据模板生成Word文档]]></title>
      <url>http://lovenight.github.io/2017/07/19/Python-3-%E6%A0%B9%E6%8D%AE%E6%A8%A1%E6%9D%BF%E7%94%9F%E6%88%90Word%E6%96%87%E6%A1%A3/</url>
      <content type="html"><![CDATA[<h1 id="缘起">缘起</h1><p>有朋友拜托写段程序，根据系统导出的txt文件和Word模板生成文档。</p>
<p>txt部分内容：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ersonInfo:</span><br><span class="line">id=<span class="number">3</span>XXXXXXXXXX</span><br><span class="line">accountUid=XXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">createDate=<span class="number">2017</span>-<span class="number">01</span>-<span class="number">16</span> <span class="number">14</span>:<span class="number">44</span>:<span class="number">37.0</span></span><br><span class="line">name=王XX</span><br><span class="line">idNo=<span class="number">61</span>XXXXXXXXXXXXXXX</span><br><span class="line"></span><br><span class="line">Project:</span><br><span class="line">id=<span class="number">1</span>XX</span><br><span class="line">name=XX</span><br><span class="line">projectId=<span class="number">1</span>XXXXXXXXXXXX</span><br><span class="line">createDate=<span class="number">2015</span>-<span class="number">12</span>-<span class="number">14</span> <span class="number">17</span>:<span class="number">39</span>:<span class="number">50.0</span></span><br></pre></td></tr></table></figure></p>
<p>把Word中相关字段替换成txt中的值。</p>
<h1 id="思路">思路</h1><ul>
<li>txt的格式很像INI文件，把以冒号结尾的项处理成方括号，另存为.ini，再用Python自带的configparser读取。</li>
<li>使用docx库操作Word文档</li>
</ul>
<h1 id="难题">难题</h1><p>1.<code>pip install docx</code>装好包后，运行代码提示：<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">File <span class="string">"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/docx-0.2.4-py3.3.egg/docx.py"</span>, line <span class="number">30</span>, <span class="keyword">in</span> &lt;<span class="built_in">module</span>&gt;</span><br><span class="line">        <span class="keyword">from</span> exceptions <span class="keyword">import</span> PendingDeprecationWarning</span><br><span class="line">    <span class="attribute">ImportError</span>: No <span class="built_in">module</span> named <span class="string">'exceptions'</span></span><br></pre></td></tr></table></figure></p>
<p>在<a href="https://stackoverflow.com/questions/22765313/when-import-docx-in-python3-3-i-have-error-importerror-no-module-named-excepti" target="_blank" rel="external">爆栈</a>找到解决方案：docx包不兼容Python 3，卸载后，改用<code>pip install python-docx</code>安装即可正常使用</p>
<a id="more"></a>
<p>2.生成的新Word文档中，原有的图片丢失。</p>
<p>翻了<a href="http://python-docx.readthedocs.io/en/latest/" target="_blank" rel="external">docx的API文档</a>，它把文件中的每一段作为一个paragraph，每个paragraph分为许多不同的run，同一句话中，如果字体、大小、粗细等不同，也算不同的run。不知道这图片是怎么算的。只要操作过一次文字，图片就会丢失。</p>
<p>替换之后再用代码插入图片。</p>
<p>3.先if再替换，有许多地方没有替换成功。</p>
<p>没想明白怎么回事，去掉if，不管有没有字段，全部替换。</p>
<h1 id="代码">代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: LoveNight</span></span><br><span class="line"><span class="comment"># @Date:   2017-07-18 13:13:26</span></span><br><span class="line"><span class="comment"># @Last Modified by:   LoveNight</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2017-07-26 13:39:29</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> docx <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> configparser</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span><br><span class="line">下面是参数配置，可以根据实际情况修改</span><br><span class="line">'''</span></span><br><span class="line"></span><br><span class="line">templateFile = <span class="string">"data\\模版.docx"</span>  <span class="comment"># 模板文件</span></span><br><span class="line">newFile = <span class="string">r"&#123;0&#125;.docx"</span>  <span class="comment"># 生成的文件名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 六张图</span></span><br><span class="line">pic1 = <span class="string">"data\\1.png"</span></span><br><span class="line">pic2 = <span class="string">"data\\2.jpg"</span></span><br><span class="line">pic3 = <span class="string">"data\\3.jpg"</span></span><br><span class="line">pic4 = <span class="string">"data\\4.jpg"</span></span><br><span class="line">pic5 = <span class="string">"data\\5.jpg"</span></span><br><span class="line">pic6 = <span class="string">"data\\6.jpg"</span></span><br><span class="line">picTuple = (pic1, pic2, pic3, pic4, pic5, pic6)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模板中的替换图片用占位符</span></span><br><span class="line">PLACE = (<span class="string">"AAAAAA"</span>, <span class="string">"BBBBBB"</span>, <span class="string">"CCCCCC"</span>, <span class="string">"DDDDDD"</span>, <span class="string">"EEEEEE"</span>, <span class="string">"FFFFFF"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############配置完毕###################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换脚本所在目录为工作目录，后面可以使用相对路径</span></span><br><span class="line">os.chdir(sys.path[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建temp文件夹</span></span><br><span class="line"><span class="keyword">if</span> os.path.isdir(<span class="string">"temp"</span>):</span><br><span class="line">    shutil.rmtree(<span class="string">"temp"</span>)</span><br><span class="line">os.mkdir(<span class="string">"temp"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出此脚本目录下所有的txt文件</span></span><br><span class="line">txtList = [x <span class="keyword">for</span> x <span class="keyword">in</span> os.listdir(</span><br><span class="line">    sys.path[<span class="number">0</span>]) <span class="keyword">if</span> os.path.splitext(x)[<span class="number">1</span>] == <span class="string">".txt"</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先处理成INI文件，存到temp文件夹下</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> txtList:</span><br><span class="line">    <span class="keyword">with</span> open(x, <span class="string">"r"</span>, encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        content = f.read()</span><br><span class="line">        content = content.replace(<span class="string">"PersonInfo:"</span>, <span class="string">"[PersonInfo]"</span>)</span><br><span class="line">        content = content.replace(<span class="string">"Project:"</span>, <span class="string">"[Project]"</span>)</span><br><span class="line">        content = content.replace(<span class="string">"AccountCertInfo:"</span>, <span class="string">"[AccountCertInfo]"</span>)</span><br><span class="line">        content = content.replace(<span class="string">"Signlog:"</span>, <span class="string">"[Signlog]"</span>)</span><br><span class="line">        content = content.replace(<span class="string">"EvidenceInfo:"</span>, <span class="string">"[EvidenceInfo]"</span>)</span><br><span class="line">    <span class="keyword">with</span> open(os.path.join(sys.path[<span class="number">0</span>], <span class="string">"temp"</span>, os.path.splitext(x)[<span class="number">0</span>] + <span class="string">".ini"</span>), <span class="string">"w"</span>, encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面开始生成Word文件</span></span><br><span class="line">iniList = os.listdir(<span class="string">"temp"</span>)</span><br><span class="line"></span><br><span class="line">now = datetime.now()</span><br><span class="line">year = now.year</span><br><span class="line">month = now.month</span><br><span class="line">day = now.day</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> iniList:</span><br><span class="line">    config = configparser.ConfigParser()</span><br><span class="line">    config.read(os.path.join(sys.path[<span class="number">0</span>], <span class="string">"temp"</span>, x), encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">    accountUid = config.get(<span class="string">"PersonInfo"</span>, <span class="string">"accountUid"</span>)</span><br><span class="line">    namePerson = config.get(<span class="string">"PersonInfo"</span>, <span class="string">"name"</span>)</span><br><span class="line">    idNo = config.get(<span class="string">"PersonInfo"</span>, <span class="string">"idNo"</span>)</span><br><span class="line">    nameProject = config.get(<span class="string">"Project"</span>, <span class="string">"name"</span>)</span><br><span class="line">    nameAccount = config.get(<span class="string">"AccountCertInfo"</span>, <span class="string">"certName"</span>)</span><br><span class="line">    sn = config.get(<span class="string">"AccountCertInfo"</span>, <span class="string">"sn"</span>)</span><br><span class="line">    issuer = config.get(<span class="string">"AccountCertInfo"</span>, <span class="string">"issuer"</span>)</span><br><span class="line">    endDate = config.get(<span class="string">"AccountCertInfo"</span>, <span class="string">"endDate"</span>)</span><br><span class="line">    startDate = config.get(<span class="string">"AccountCertInfo"</span>, <span class="string">"startDate"</span>)</span><br><span class="line">    certBase64 = config.get(<span class="string">"AccountCertInfo"</span>, <span class="string">"certBase64"</span>)</span><br><span class="line">    signDate = config.get(<span class="string">"Signlog"</span>, <span class="string">"signDate"</span>)</span><br><span class="line">    idSign = config.get(<span class="string">"Signlog"</span>, <span class="string">"id"</span>)</span><br><span class="line">    fileDigist = config.get(<span class="string">"Signlog"</span>, <span class="string">"fileDigist"</span>)</span><br><span class="line"></span><br><span class="line">    eidFlag = <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">"EvidenceInfo"</span> <span class="keyword">in</span> config:</span><br><span class="line">        eidFlag = <span class="keyword">True</span></span><br><span class="line">        eid = config.get(<span class="string">"EvidenceInfo"</span>, <span class="string">"eid"</span>)</span><br><span class="line"></span><br><span class="line">    doc = Document(templateFile)</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> doc.paragraphs:</span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> p.runs:</span><br><span class="line">            <span class="keyword">if</span> eidFlag:</span><br><span class="line">                r.text = r.text.replace(<span class="string">"EvidenceInfo.eid"</span>, eid)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                r.text = r.text.replace(<span class="string">"（存证编号EvidenceInfo.eid）"</span>, <span class="string">""</span>)</span><br><span class="line">            <span class="keyword">if</span> issuer.startswith(<span class="string">"ZJCA"</span>):</span><br><span class="line">                r.text = r.text.replace(</span><br><span class="line">                    <span class="string">"中国金融认证中心（CFCA）"</span>, <span class="string">"浙江省数字安全证书管理有限公司(ZJCA)"</span>)</span><br><span class="line"></span><br><span class="line">            r.text = r.text.replace(<span class="string">"PersonInfo.accountUid"</span>, accountUid)</span><br><span class="line">            r.text = r.text.replace(</span><br><span class="line">                <span class="string">"2017年XX 月 XX 日（当天日期）"</span>, <span class="string">"&#123;0&#125;年&#123;1&#125;月&#123;2&#125;日"</span>.format(year, month, day))</span><br><span class="line">            r.text = r.text.replace(<span class="string">"PersonInfo.name"</span>, namePerson)</span><br><span class="line">            r.text = r.text.replace(<span class="string">"PersonInfo.idNo"</span>, idNo)</span><br><span class="line">            r.text = r.text.replace(<span class="string">"Project.name"</span>, nameProject)</span><br><span class="line">            r.text = r.text.replace(<span class="string">"AccountCertInfo.name"</span>, nameAccount)</span><br><span class="line">            r.text = r.text.replace(<span class="string">"AccountCertInfo.sn"</span>, sn)</span><br><span class="line">            r.text = r.text.replace(<span class="string">"AccountCertInfo.issuer"</span>, issuer)</span><br><span class="line">            r.text = r.text.replace(<span class="string">"AccountCertInfo.issuer"</span>, endDate)</span><br><span class="line">            r.text = r.text.replace(<span class="string">"AccountCertInfo.startDate"</span>, startDate)</span><br><span class="line">            r.text = r.text.replace(<span class="string">"AccountCertInfo.endDate"</span>, endDate)</span><br><span class="line">            r.text = r.text.replace(<span class="string">"AccountCertInfo.certBase64"</span>, certBase64)</span><br><span class="line">            r.text = r.text.replace(<span class="string">"Signlog.signDate"</span>, signDate)</span><br><span class="line">            r.text = r.text.replace(<span class="string">"Signlog.id"</span>, idSign)</span><br><span class="line">            r.text = r.text.replace(<span class="string">"Project.fileDigist"</span>, fileDigist)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重新来一次，下面添加图片</span></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> doc.paragraphs:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">            <span class="keyword">if</span> PLACE[i] <span class="keyword">in</span> p.text:</span><br><span class="line">                <span class="keyword">for</span> r <span class="keyword">in</span> p.runs:</span><br><span class="line">                    r.text = r.text.replace(PLACE[i], <span class="string">""</span>)</span><br><span class="line">                p.runs[<span class="number">0</span>].add_picture(picTuple[i])</span><br><span class="line">                <span class="comment"># p.runs[0].add_picture(pic1)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># for p in doc.paragraphs:</span></span><br><span class="line">    <span class="comment">#     for r in p.runs:</span></span><br><span class="line">    <span class="comment">#         if r.text.find("PersonInfo.accountUid"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("PersonInfo.accountUid", accountUid)</span></span><br><span class="line">    <span class="comment">#         if r.text.find("2017年XX 月 XX 日（当天日期）"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("2017年XX 月 XX 日（当天日期）", "&#123;0&#125;年&#123;1&#125;月&#123;2&#125;日".format(year,month,day))</span></span><br><span class="line">    <span class="comment">#         if r.text.find("PersonInfo.name"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("PersonInfo.name", namePerson)</span></span><br><span class="line">    <span class="comment">#         if r.text.find("PersonInfo.idNo"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("PersonInfo.idNo", idNo)</span></span><br><span class="line">    <span class="comment">#         if r.text.find("Project.name平台自身"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("Project.name", nameProject)</span></span><br><span class="line">    <span class="comment">#         if r.text.find("AccountCertInfo.name"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("AccountCertInfo.name", nameAccount)</span></span><br><span class="line">    <span class="comment">#         if r.text.find("AccountCertInfo.sn"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("AccountCertInfo.sn", sn)</span></span><br><span class="line">    <span class="comment">#         if r.text.find("AccountCertInfo.issuer"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("AccountCertInfo.issuer", issuer)</span></span><br><span class="line">    <span class="comment">#         if r.text.find("AccountCertInfo.issuer"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("AccountCertInfo.issuer", endDate)</span></span><br><span class="line">    <span class="comment">#         if r.text.find("AccountCertInfo.startDate"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("AccountCertInfo.startDate", startDate)</span></span><br><span class="line">    <span class="comment">#         if r.text.find("AccountCertInfo.certBase64"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("AccountCertInfo.certBase64", certBase64)</span></span><br><span class="line">    <span class="comment">#         if r.text.find("Signlog.signDate"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("Signlog.signDate", signDate)</span></span><br><span class="line">    <span class="comment">#         if r.text.find("Signlog.id"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("Signlog.id", idSign)</span></span><br><span class="line">    <span class="comment">#         if r.text.find("Project.fileDigist"):</span></span><br><span class="line">    <span class="comment">#             r.text = r.text.replace("Project.fileDigist", fileDigist)</span></span><br><span class="line">    doc.save(newFile.format(nameProject + namePerson))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">shutil.rmtree(<span class="string">"temp"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># doc = Document("test.docx")</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for p in doc.paragraphs:</span></span><br><span class="line"><span class="comment">#     for r in p.runs:</span></span><br><span class="line"><span class="comment">#         if r.text.find(r"我"):</span></span><br><span class="line"><span class="comment">#             r.text = r.text.replace(r"我", r"测试成功")</span></span><br><span class="line"><span class="comment">#             print(r.text)</span></span><br><span class="line"><span class="comment"># newFileName = "测试.docx"</span></span><br><span class="line"><span class="comment"># doc.save(newFileName)</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2016中秋苏州三日游]]></title>
      <url>http://lovenight.github.io/2017/03/07/2016%E4%B8%AD%E7%A7%8B%E8%8B%8F%E5%B7%9E%E4%B8%89%E6%97%A5%E6%B8%B8/</url>
      <content type="html"><![CDATA[<p>下图是去年去苏州之前做的行程规划。查了周边各古镇，要么太远，要么商业气息太重。而且江南各古镇大同小异，就只选择在苏州市区游玩。图中行程安排得太满，后来虎丘和苏州大学都没去。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/3/7/20/26/22/%E8%8B%8F%E5%B7%9E%E6%B8%B8%E6%97%A5%E7%A8%8B.png" alt="苏州游日程.png"></p>
<a id="more"></a>
<p>手机上装了腾讯地图+指南针+GPS，走到哪都不会迷路。驴妈妈上可买到便宜的门票，景点检票处直接刷自己身份证就可以进去。</p>
<p>全程人均花费五百元左右。</p>
<h1 id="Day_1"><strong>Day 1</strong></h1><p>苏州火车站有直接到观前街的公交车。但是当时在网上看到附近一座桥景致不错，就定了走过桥到察院场站坐车。其实是座水泥桥，外围包了一层木结构。当天下雨，附近又在破土修路，桥上被来来往往的车沾了泥，近处车辆马达声、远处机器隆隆声不绝于耳，大煞风景。</p>
<p>坐车到观前街已经十一点多，直接去松鹤楼用餐。每个包厢一张圆桌，大约能坐十五人。如想独占一桌需拿号排队，如与他人共享可立即上楼。</p>
<p>吃完去玄妙观后的布丁酒店，放下行李出门往东直走至平江路。这段路上可以慢慢晃过去，南侧有小桥流水，北侧有旧时代的居民楼，楼道七弯八拐，高处放着农具、杂物，与我们浙中乡下农村不同，有独特的新鲜感。</p>
<p>到平江路后往南逛到头，不要一路直走，多注意岔道，走进去别有洞天。有个外面包着铁皮的艺术馆邪气甚重，馆内陈设、气氛相当诡异，最好别进去。我身体弱，回来后因故萎靡了好一阵子。</p>
<p>原本打算去新市桥码头坐夜游船，但出发前得知当晚下暴雨，遂改去七里山塘。需要先坐地铁1号线，中途换乘2号线，买票时直接买山街塘站即可。华灯初上的山塘街特别美。</p>
<p>找了家羊肉店填了肚子，出来后天降暴雨，雨伞根本挡不住，淋成了落汤鸡。</p>
<h1 id="Day_2"><strong>Day 2</strong></h1><p>早上沿老路从下榻的布丁酒店往东走到平江路，这次拐往北方，路边买早点吃。路上看到块耦园的指示牌，于是拐到东边进去一游。</p>
<p>出来后往北逛到狮子林，附近解决午餐后继续去拙政园、苏州博物馆、忠王府。苏博西侧是有名的朱鸿兴面馆，大肉面（忘了是不是这名）特别美味。</p>
<p>晚上去新市桥码头坐船。回来后休息了一会，再去逛观前街。</p>
<h1 id="Day_3"><strong>Day 3</strong></h1><p>早上在附近找家店吃了油条豆浆，到寒山寺时已经中午。附近找了家店吃完午饭，逛完寒山寺即去火车站赶车回家。</p>
<p>附上规划行程的工具</p>
<ul>
<li>在线流程图：<a href="https://www.processon.com/" target="_blank" rel="external">ProcessOn</a> 可以直接拿我的流程图去修改：<a href="https://www.processon.com/view/link/58b8f877e4b01c0bec9df86e" target="_blank" rel="external">2016中秋苏州三日游</a></li>
<li>游记：<a href="http://www.mafengwo.cn/" target="_blank" rel="external">蚂蜂窝</a></li>
</ul>
<hr>
<h1 id="附图">附图</h1><h2 id="初到苏州">初到苏州</h2><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E8%8B%8F%E5%B7%9E%E6%B8%B8%E4%B9%8B%E4%B8%9C%E7%AB%99%E5%87%BA%E5%8F%91.jpg" alt="苏州游之东站出发.jpg"><br>杭州东站，出发去苏州！</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E8%8B%8F%E5%B7%9E%E7%81%AB%E8%BD%A6%E7%AB%99.jpg" alt="苏州火车站.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E8%8B%8F%E5%B7%9E%E5%8F%A4%E5%9F%8E%E6%A5%BC1.jpg" alt="苏州古城楼1.jpg"><br>苏州火车站南广场隔岸的古城楼</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E4%BC%8D%E5%AD%90%E8%83%A5%E7%AE%80%E4%BB%8B.jpg" alt="伍子胥简介.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E8%8C%83%E4%BB%B2%E6%B7%B9%E5%83%8F.jpg" alt="范仲淹像.jpg"><br>姑苏名人</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E8%8B%8F%E5%B7%9E%E7%81%AB%E8%BD%A6%E7%AB%99%E6%8E%A5%E4%BA%BA%E7%9A%84%E5%B0%8F%E4%BC%99%E5%AD%90.jpg" alt="苏州火车站接人的小伙子.jpg"><br>出站口接人的小伙子</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E6%9D%BE%E9%B9%A4%E6%A5%BC%E4%B9%8B%E7%BA%A2%E7%83%A7%E8%82%89.jpg" alt="松鹤楼之红烧肉.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E6%9D%BE%E9%B9%A4%E6%A5%BC%E4%B9%8B%E5%BF%98%E4%BA%86%E5%90%8D%E5%AD%97.jpg" alt="松鹤楼之忘了名字.jpg"><br>在松鹤楼解决了午饭</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E7%8E%84%E5%A6%99%E8%A7%82.jpg" alt="玄妙观.jpg"><br>玄妙观</p>
<hr>
<h2 id="平江路">平江路</h2><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E6%B0%91%E5%B1%85%E8%BF%87%E9%81%93%E4%BB%B0%E6%9C%9B.jpg" alt="民居过道仰望.jpg"><br>进路边的民居甬道逛逛</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E5%B0%8F%E6%B2%B3%E8%BE%B9%E7%9A%84%E6%B0%91%E5%B1%85.jpg" alt="小河边的民居.jpg"></p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E7%9F%B3%E6%A1%A5%E4%B8%8A.jpg" alt="石桥上.jpg"></p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E6%96%87%E8%89%BA%E5%B0%8F%E5%BA%97.jpg" alt="文艺小店.jpg"></p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E7%8C%AB%E7%9A%84%E5%A4%A9%E7%A9%BA%E4%B9%8B%E5%9F%8E%E8%86%9C%E6%B3%95%E5%B8%88.jpg" alt="猫的天空之城膜法师.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E7%8C%AB%E7%9A%84%E5%A4%A9%E7%A9%BA%E4%B9%8B%E5%9F%8E%E4%B8%80%E8%A7%92.jpg" alt="猫的天空之城一角.jpg"><br>猫的天空之城</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E4%B9%89%E5%BA%84.jpg" alt="义庄.jpg"><br>小巷子里居然有义庄，若不是大门闭，倒想进去瞧瞧</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E5%B9%B3%E6%B1%9F%E8%B7%AF.jpg" alt="平江路.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E5%B9%B3%E6%B1%9F%E8%B7%AF%E4%B9%8B%E8%BD%A6%E7%A5%A8%E4%B8%8E%E6%98%8E%E4%BF%A1%E7%89%87.jpg" alt="平江路之车票与明信片.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E5%B9%B3%E6%B1%9F%E8%B7%AF%E4%B9%8B%E5%AF%84%E6%98%8E%E4%BF%A1%E7%89%87.jpg" alt="平江路之寄明信片.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E5%B9%B3%E6%B1%9F%E8%B7%AF%E4%B9%8B%E5%B0%8F%E8%B5%84%E5%B0%8F%E4%B9%A6.jpg" alt="平江路之小资小书.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E5%B9%B3%E6%B1%9F%E8%B7%AF%E4%B9%8B%E6%9F%90%E7%BA%AA%E5%BF%B5%E5%93%81%E9%A6%86%E7%AB%B9%E7%AE%80.jpg" alt="平江路之某纪念品馆竹简.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E5%B9%B3%E6%B1%9F%E8%B7%AF%E4%B9%8B%E6%B4%AA%E7%99%BB%E8%AE%B0.jpg" alt="平江路之洪登记.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E5%B9%B3%E6%B1%9F%E8%B7%AF%E5%A7%9C%E7%B3%96.jpg" alt="平江路姜糖.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E5%B9%B3%E6%B1%9F%E8%B7%AF%E6%97%97%E8%A2%8D%E5%BA%97.jpg" alt="平江路旗袍店.jpg"></p>
<h2 id=""><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E5%B9%B3%E6%B1%9F%E8%B7%AF%E4%B9%8B%E6%A7%BD%E9%87%8C%E7%9A%84%E5%B0%8F%E9%87%91%E9%B1%BC.jpg" alt="平江路之槽里的小金鱼.jpg"></h2><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E5%B9%B3%E6%B1%9F%E8%B7%AF%E4%B9%8B%E6%9F%90%E8%89%BA%E6%9C%AF%E9%A6%86%EF%BC%8C%E6%AD%A4%E5%A4%84%E6%9C%AC%E6%9C%89%E5%A6%96%E6%80%AA.jpg" alt="平江路之某艺术馆，此处本有妖怪.jpg"><br>平江路某艺术馆，此处本有妖怪。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E5%B9%B3%E6%B1%9F%E8%B7%AF%E4%B9%8B%E8%AF%84%E5%BC%B9%E5%8D%9A%E7%89%A9%E9%A6%86.jpg" alt="平江路之评弹博物馆.jpg"><br>评弹博物馆</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E5%B9%B3%E6%B1%9F%E8%B7%AF%E4%B9%8B%E8%AF%84%E5%BC%B9%E5%8D%9A%E7%89%A9%E9%A6%86%E6%94%BF%E5%BA%9C%E6%89%B9%E6%96%87.jpg" alt="平江路之评弹博物馆政府批文.jpg"></p>
<h2 id="评弹博物馆政府批文">评弹博物馆政府批文</h2><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E5%B7%A7%E5%85%8B%E5%8A%9B%E5%BA%97.jpg" alt="巧克力店.jpg"><br>巧克力店</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E6%9F%90%E5%B0%8F%E5%AD%A6%E7%9A%84%E5%A4%A7%E6%88%90%E6%AE%BF.jpg" alt="某小学的大成殿.jpg"><br>小学里居然有供奉孔子的大成殿</p>
<hr>
<h2 id="七里山塘">七里山塘</h2><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E4%B8%83%E9%87%8C%E5%B1%B1%E5%A1%98%E4%B9%8B%E5%A4%9C%E6%99%AF.jpg" alt="七里山塘之夜景.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E4%B8%83%E9%87%8C%E5%B1%B1%E5%A1%98%E4%B9%8B%E8%A1%97%E6%99%AF.jpg" alt="七里山塘之街景.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E4%B8%83%E9%87%8C%E5%B1%B1%E5%A1%98%E4%B9%8B%E8%87%AD%E8%B1%86%E8%85%90%E5%BA%97.jpg" alt="七里山塘之臭豆腐店.jpg"></p>
<hr>
<h2 id="狮子林">狮子林</h2><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E7%8B%AE%E5%AD%90%E6%9E%97%E9%97%A8%E7%A5%A8.jpg" alt="狮子林门票.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E7%8B%AE%E5%AD%90%E6%9E%97%E4%BD%9B%E5%A0%82.jpg" alt="狮子林佛堂.jpg"><br>佛堂，似是僧人静修室</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E7%8B%AE%E5%AD%90%E6%9E%97%E6%B9%96%E5%B1%B1.jpg" alt="狮子林湖山.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E7%8B%AE%E5%AD%90%E6%9E%97%E5%81%87%E5%B1%B1.jpg" alt="狮子林假山.jpg"><br>假山很大，可以玩半天，可惜当时下雨，匆匆出来了</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E7%8B%AE%E5%AD%90%E6%9E%97%E6%9F%90%E8%8A%B1.jpg" alt="狮子林某花.jpg"><br>不知道这叫什么花</p>
<hr>
<h2 id="耦园">耦园</h2><p>那天的风很温柔</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E5%B9%B3%E6%B1%9F%E8%B7%AF%E5%B2%94%E8%B7%AF.jpg" alt="平江路岔路.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E5%BE%80%E8%80%A6%E5%9B%AD%E7%9A%84%E8%B7%AF%E4%B8%8A.jpg" alt="往耦园的路上.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E6%89%8B%E5%86%99%E5%9C%B0%E5%9B%BE.jpg" alt="手写地图.jpg"><br>去耦园路上的手写地图</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E8%80%A6%E5%9B%AD%E6%8C%87%E7%A4%BA%E7%89%8C.jpg" alt="耦园指示牌.jpg"></p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E5%8F%A4%E6%84%8F%E7%9A%84%E6%9C%A8%E9%97%A8.jpg" alt="古意的木门.jpg"></p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E8%80%A6%E5%9B%AD%E4%B9%8B%E5%BD%BC%E5%B2%B8%E8%8A%B1.jpg" alt="耦园之彼岸花.jpg"><br>彼岸花</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E8%80%A6%E5%9B%AD%E4%B9%8B%E7%89%A1%E4%B8%B9.jpg" alt="耦园之牡丹.jpg"><br>牡丹，花期已过</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E8%80%A6%E5%9B%AD%E4%B9%8B%E7%9B%86%E6%99%AF.jpg" alt="耦园之盆景.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E8%80%A6%E5%9B%AD%E4%B9%8B%E8%AF%84%E5%BC%B9.jpg" alt="耦园之评弹.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E8%80%A6%E5%9B%AD%E4%B9%8B%E8%BD%BD%E9%85%92%E5%A0%82.jpg" alt="耦园之载酒堂.jpg"></p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E6%8B%B1%E6%A1%A5.jpg" alt="拱桥.jpg"></p>
<hr>
<h2 id="拙政园">拙政园</h2><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E6%8B%99%E6%94%BF%E5%9B%AD%E7%9D%A1%E8%8E%B2.jpg" alt="拙政园睡莲.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E6%8B%99%E6%94%BF%E5%9B%AD%E5%B0%8F%E5%B1%B1.jpg" alt="拙政园小山.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E6%8B%99%E6%94%BF%E5%9B%AD%E8%B5%B0%E5%BB%8A.jpg" alt="拙政园走廊.jpg"></p>
<hr>
<h2 id="寒山寺">寒山寺</h2><p>没怎么拍照</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E6%9E%AB%E6%A1%A5%EF%BC%9F.jpg" alt="枫桥？.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E5%AF%92%E5%B1%B1%E5%AF%BA%E6%99%AE%E6%98%8E%E5%A1%94%E9%99%A2.jpg" alt="寒山寺普明塔院.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E5%AF%92%E5%B1%B1%E5%AF%BA%E8%AF%971.jpg" alt="寒山寺诗1.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E5%AF%92%E5%B1%B1%E5%AF%BA%E8%AF%972.jpg" alt="寒山寺诗2.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E5%AF%92%E5%B1%B1%E5%AF%BA%E5%A1%94%E4%B8%8A%E4%B8%8B%E7%9C%BA.jpg" alt="寒山寺塔上下眺.jpg"></p>
<hr>
<h2 id="其他">其他</h2><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E6%9C%B1%E9%B8%BF%E5%85%B4%E9%9D%A2%E9%A6%86%E5%A4%A7%E8%82%89%E9%9D%A2.jpg" alt="朱鸿兴面馆大肉面.jpg"><br>朱鸿兴面馆大肉面，就在苏州博物馆西边，特别好吃。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E8%8B%8F%E5%B7%9E%E5%8D%9A%E7%89%A9%E9%A6%86%E8%BE%BE%E6%91%A9%E5%83%8F.jpg" alt="苏州博物馆达摩像.jpg"><br>苏州博物馆达摩像</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/29/%E5%BF%A0%E7%8E%8B%E5%BA%9C%E9%BE%99%E6%A4%85.jpg" alt="忠王府龙椅.jpg"><br>忠王府龙椅</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/36/46/%E8%88%B9%E6%B8%B8%E8%8B%8F%E5%B7%9E.jpg" alt="船游苏州.jpg"><br>船游苏州</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[20160827绍兴游]]></title>
      <url>http://lovenight.github.io/2017/03/07/20160827%E7%BB%8D%E5%85%B4%E6%B8%B8/</url>
      <content type="html"><![CDATA[<p>杭州与绍兴很近，动车半个多小时就到了。早起赶车，原本打算在绍兴吃早点的，没想到绍兴高铁站到景区居然坐了一个多小时公交车，到鲁迅故里已经九点半了。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E7%BB%8D%E5%85%B4%E5%8C%97%E7%AB%99%E5%A4%96%E6%9C%9B.jpg" alt="绍兴游之绍兴北站外望.jpg"><br><a id="more"></a><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E5%BF%AB%E9%80%9F%E5%85%AC%E4%BA%A4%E4%B9%98%E8%BD%A6%E5%B8%81%E5%8F%A6%E4%B8%80%E9%9D%A2.jpg" alt="绍兴游之快速公交乘车币另一面.jpg"><br>快速公交乘车币。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E9%B2%81%E8%BF%85%E6%95%85%E9%87%8C%E5%85%A5%E5%8F%A3.jpg" alt="绍兴游之鲁迅故里入口.jpg"></p>
<hr>
<h1 id="从三味书屋到百草园">从三味书屋到百草园</h1><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E4%B9%8C%E7%AF%B7%E8%88%B92.jpg" alt="绍兴游之乌篷船2.jpg"></p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E8%87%AD%E8%B1%86%E8%85%90.jpg" alt="绍兴游之臭豆腐.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E9%BB%84%E9%85%92%E6%A3%92%E5%86%B02.jpg" alt="绍兴游之黄酒棒冰2.jpg"><br>味道不怎么样，贵得要死。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E4%B8%89%E5%91%B3%E4%B9%A6%E5%B1%8B%EF%BC%9A%E8%AF%BB%E7%BB%8F%E5%91%B3%E5%A6%82%E7%A8%BB%E6%A2%81%E3%80%81%E8%AF%BB%E5%8F%B2%E5%91%B3%E5%A6%82%E8%82%B4%E9%A6%94%E3%80%81%E8%AF%B8%E5%AD%90%E7%99%BE%E5%AE%B6%E5%91%B3%E5%A6%82%E9%86%AF%E9%86%A2.jpg" alt="三味书屋：读经味如稻梁、读史味如肴馔、诸子百家味如醯醢.jpg"><br>三味书屋：读经味如稻梁、读史味如肴馔、诸子百家味如醯醢</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E4%B8%89%E5%91%B3%E4%B9%A6%E5%B1%8B%E6%AD%A3%E4%B8%AD.jpg" alt="三味书屋正中.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E4%B8%89%E5%91%B3%E4%B9%A6%E5%B1%8B%E9%B2%81%E8%BF%85%E5%BA%A7%E4%BD%8D.jpg" alt="三味书屋鲁迅座位.jpg"><br>迅哥的座位，当年那篇课文带动了全班课桌刻字的风潮，老师也阻止不了。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E4%B8%89%E5%91%B3%E4%B9%A6%E5%B1%8B%E7%93%B7%E7%94%BB.jpg" alt="绍兴游之三味书屋瓷画.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E4%B8%89%E5%91%B3%E4%B9%A6%E5%B1%8B%E9%A3%9E%E6%AA%90.jpg" alt="绍兴游之三味书屋飞檐.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E4%B8%89%E5%91%B3%E4%B9%A6%E5%B1%8B%E4%BB%8B%E7%BB%8D%E6%9D%BF.jpg" alt="绍兴游之三味书屋介绍板.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E4%B8%89%E5%91%B3%E4%B9%A6%E5%B1%8B%E6%9F%90%E5%A0%82.jpg" alt="绍兴游之三味书屋某堂.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E4%B8%89%E5%91%B3%E4%B9%A6%E5%B1%8B%E4%B9%A6%E6%88%BF.jpg" alt="绍兴游之三味书屋书房.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E4%B8%89%E5%91%B3%E4%B9%A6%E5%B1%8B%E5%8D%A7%E5%AE%A4.jpg" alt="绍兴游之三味书屋卧室.jpg"></p>
<p>古人的生活相较现在「简单」得多。在这一点上挺羡慕他们，这样的环境可以专心做事，不会因为科技带来的便利而分心。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E8%B6%8A%E4%B8%AD%E4%B9%A6%E9%99%A2%E7%AE%80%E4%BB%8B.jpg" alt="越中书院简介.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E8%8C%83%E4%BB%B2%E6%B7%B9%E4%B8%8E%E7%A8%BD%E5%B1%B1%E4%B9%A6%E9%99%A2.jpg" alt="范仲淹与稽山书院.jpg"><br>范仲淹与稽山书院</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E6%B8%85%E4%BB%A3%E4%B9%98%E5%85%B4%E7%AE%80%E8%A1%A8.jpg" alt="绍兴游之清代乘兴简表.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E7%BB%8D%E5%85%B4%E5%BA%9C%E5%AD%A6%E5%AE%AB%E5%9B%BE.jpg" alt="绍兴游之绍兴府学宫图.jpg"><br>绍兴府学宫图</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E7%BB%8D%E5%85%B4%E5%BA%9C%E4%B8%AD%E5%AD%A6%E6%AF%95%E4%B8%9A%E6%96%87%E5%87%AD.jpg" alt="绍兴游之绍兴府中学毕业文凭.jpg"><br>绍兴府中学毕业文凭</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E9%B1%BC%E4%B9%90%E5%9B%AD%E8%BF%91%E6%99%AF.jpg" alt="鱼乐园近景.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E5%AE%9B%E5%9C%A8%E6%B0%B4%E4%B8%AD%E5%A4%AE.jpg" alt="宛在水中央.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E9%87%91%E9%B1%BC%E7%BE%A4.jpg" alt="金鱼群.jpg"><br>这里是戏台，名叫鱼乐园</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E5%BF%98%E4%BA%86%E5%8F%AB%E4%BB%80%E4%B9%88%E5%90%8D%EF%BC%8C%E4%B8%8D%E5%96%9C%E6%AC%A2%E8%BF%99%E5%91%B3%E9%81%93.jpg" alt="忘了叫什么名，不喜欢这味道.jpg"><br>忘了叫什么名，又甜又腻。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E7%99%BE%E8%8D%89%E5%9B%AD.jpg" alt="百草园.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E7%99%BE%E8%8D%89%E5%9B%AD%E4%B8%AD%E7%9A%84%E4%BA%95.jpg" alt="百草园中的井.jpg"><br>百草园</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E5%8F%A4%E4%BB%A3%E9%85%92%E5%9D%8A.jpg" alt="古代酒坊.jpg"><br>农村至今家家都保留了灶台，水缸已经被自来水取代。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E9%85%92%E7%AA%91.jpg" alt="酒窑.jpg"></p>
<h2 id="酒窖">酒窖</h2><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E5%A9%9A%E7%A4%BC%E7%8E%B0%E5%9C%BA.jpg" alt="婚礼现场.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E6%96%B0%E5%A8%98%E5%9D%90%E5%BA%8A.jpg" alt="新娘坐床.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E8%BD%BF%E5%AD%90.jpg" alt="轿子.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E7%BB%8D%E5%85%B4%E6%B8%B8%E4%B9%8B%E5%A5%B3%E5%84%BF%E7%BA%A2%E9%85%92%E5%BA%84.jpg" alt="绍兴游之女儿红酒庄.jpg"></p>
<hr>
<h1 id="沈园遗爱">沈园遗爱</h1><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E6%B2%88%E5%9B%AD%E9%9D%99%E5%9D%90%E5%90%B9%E9%A3%8E.jpg" alt="沈园静坐吹风.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E6%B2%88%E5%9B%AD%E9%A3%8E%E9%93%83.jpg" alt="沈园风铃.jpg"><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E6%B2%88%E5%9B%AD%E5%8D%96%E7%AB%B9%E7%89%8C%E7%9A%84%E5%9C%B0%E6%96%B9.jpg" alt="沈园卖竹牌的地方.jpg"><br>廊上挂满竹牌，正反两面分别写了情侣们的爱情誓愿，也有单身青年祈求缘分。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E6%B2%88%E5%9B%AD%E9%92%97%E5%A4%B4%E5%87%A4%E9%99%86%E6%B8%B8%E7%89%88.jpg" alt="沈园钗头凤陆游版.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/28/%E6%B2%88%E5%9B%AD%E9%92%97%E5%A4%B4%E5%87%A4%E5%94%90%E5%A9%89%E7%89%88.jpg" alt="沈园钗头凤唐婉版.jpg"><br>千古名作，两首《钗头凤》</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E6%B2%88%E5%9B%AD%E5%B0%8F%E6%B2%B3.jpg" alt="沈园小河.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E6%B2%88%E5%9B%AD%E4%B8%80%E8%A7%92.jpg" alt="沈园一角.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E6%A1%A5%E4%B8%8B%E6%98%A5%E6%B3%A2%E7%BB%BF%EF%BC%8C%E4%B8%8D%E8%A7%81%E7%85%A7%E5%BD%B1%E4%BA%BA.jpg" alt="桥下春波绿，不见照影人.jpg"><br>沈园一角</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E6%B2%88%E5%9B%AD%E6%95%85%E4%BA%8B.jpg" alt="沈园故事.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E4%B9%9F%E4%BF%A1%E7%BE%8E%E4%BA%BA%E7%BB%88%E4%BD%9C%E5%9C%9F.jpg" alt="也信美人终作土.jpg"></p>
<hr>
<h1 id="绍兴街头">绍兴街头</h1><p>出沈园后在街头逛了几小时就回去了。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E5%8D%81%E7%A2%97%E5%A4%B4%E4%BB%8B%E7%BB%8D.jpg" alt="十碗头介绍.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E7%9F%B3%E6%A1%A5.jpg" alt="石桥.jpg"></p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E6%97%A0%E4%BA%BA%E7%9A%84%E5%B0%8F%E5%BE%84.jpg" alt="无人的小径.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/8/%E5%B0%8F%E6%A1%A5%E6%B5%81%E6%B0%B4%E4%BA%BA%E5%AE%B6.jpg" alt="小桥流水人家.jpg"></p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E8%B7%AF%E8%BE%B9%E9%93%9C%E5%83%8F.jpg" alt="路边铜像.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E8%B7%AF%E4%B8%8A.jpg" alt="路上.jpg"></p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E6%B2%B3%E8%BE%B9%E4%BA%BA%E5%AE%B6.jpg" alt="河边人家.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/35/42/%E6%B2%B3%E8%BE%B9%E4%B8%80%E6%99%AF.jpg" alt="河边一景.jpg"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2016杭州生活随手拍]]></title>
      <url>http://lovenight.github.io/2017/03/01/2016%E6%9D%AD%E5%B7%9E%E7%94%9F%E6%B4%BB%E9%9A%8F%E6%89%8B%E6%8B%8D/</url>
      <content type="html"><![CDATA[<p>去年因故荒废了博客和学习编程近一年，最近刚缓过劲来，重新拾起。今天先把手机上的照片压缩上传整理出来。</p>
<h1 id="杭图佛学分馆">杭图佛学分馆</h1><p>走到灵隐寺左拐，路上一排小型精舍，卖各种佛具、茶叶、手工艺品。<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/33/22/%E7%AB%B9%E5%88%B6%E5%93%813.jpg" alt="竹制品3.jpg"></p>
<a id="more"></a>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/33/22/%E7%AB%B9%E5%88%B6%E5%93%811.jpg" alt="竹制品1.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/33/22/%E7%AB%B9%E5%88%B6%E5%93%812.jpg" alt="竹制品2.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/33/22/%E7%AB%B9%E5%88%B6%E5%93%814.jpg" alt="竹制品4.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/33/22/%E7%AB%B9%E5%88%B6%E5%93%816%E4%B9%8B%E7%AD%9B%E7%B3%A0%E9%A3%8E%E8%BD%A6.jpg" alt="竹制品6之筛糠风车.jpg"></p>
<p>农村家家都有这种风车，图上右侧缺了把手。谷子倒入上面的漏斗，摇动风车，谷糠从左侧飞出，谷粒从左下的口落下。</p>
<hr>
<p>踩在水中特别凉快<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/33/22/%E5%B0%8F%E6%B2%B3.jpg" alt="小河.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/33/22/%E5%B0%8F%E6%BA%AA%E8%BE%B9.jpg" alt="小溪边.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/33/22/%E5%B0%8F%E6%BA%AA%E6%B0%B4.jpg" alt="小溪水.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/23/%E7%81%B5%E9%9A%90%E5%A4%96%E7%9A%84%E6%B0%B4%E6%BD%AD.jpg" alt="灵隐外的水潭.jpg"></p>
<hr>
<p>路过中天竺法镜寺，进去转了一圈。<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/33/51/%E5%8B%BF%E4%B9%B0%E9%A6%99.jpg?imageMogr2/thumbnail/500x500" alt="勿买香.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/33/51/%E4%B8%8B%E5%A4%A9%E7%AB%BA%E6%B3%95%E9%95%9C%E5%AF%BA.jpg?imageMogr2/thumbnail/500x500" alt="下天竺法镜寺.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/33/22/%E5%9C%86%E9%80%9A%E6%AE%BF.jpg" alt="圆通殿.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E6%B3%95%E9%95%9C%E5%AF%BA%E5%A4%A7%E9%9B%84%E5%AE%9D%E6%AE%BF.jpg" alt="法镜寺大雄宝殿.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E6%94%BE%E7%94%9F%E6%B1%A0.jpg" alt="放生池.jpg"></p>
<hr>
<p>法镜寺后山即是三生石。前几天看新闻说近来某剧热播导致三生石被游客瞎涂乱刻，甚是可惜。</p>
<p>其实这三生石与男女情侣没有关系。</p>
<blockquote>
<p>僧圆泽传<br>苏轼<br>洛师惠林寺，故光禄卿李登居第。禄山陷东都，登以居守死之。<br>子源，少时以贵游子，豪侈善歌闻于时，及登死，悲愤自誓，不仕、不娶、不食肉，居寺中五十余年。<br>寺有僧圆泽，富而知音，源与之游，甚密，促膝交语竟日，人莫能测。<br>一日相约游青城峨嵋山，源欲自荆州沂峡，泽欲取长安斜谷路，源不可，曰：「行止固不由人。」遂自荆州路。<br>舟次南浦，见妇人锦裆负瓮而汲者，泽望而泣：「吾不欲由此者，为是也。」<br>源惊问之，泽曰：「妇人姓王氏，吾当为之子，孕三岁矣！吾不来，故不得乳。今既见，无可逃者，公当以符咒助我速生。三日浴儿时，愿公临我，以笑为信。后十三年，中秋月夜，杭州天竺寺外，当与公相见。」<br>源悲悔，而为具沐浴易服，至暮，泽亡而妇乳。三日往视之，儿见源果笑，具以告王氏，出家财，葬泽山下。<br>遂不果行，反寺中，问其徒，则既有治命矣！<br>后十三年，自洛适吴，赴其约。至约所，闻葛洪川畔，有牧童，扣牛角而歌之曰：<br>三生石上旧精魂，赏月吟风莫要论。<br>惭愧情人远相访，此身虽异性长存。<br>呼问：「泽公健否？」<br>答曰：「李公真信士。然俗缘未尽，慎勿相近，惟勤修不堕，乃复相见。」<br>又歌曰：<br>身前身后事茫茫，欲话因缘恐断肠。<br>吴越山川寻己遍，却回烟棹上瞿塘。<br>遂去不知所之。<br>后三年，李德裕奏源忠臣子，笃孝。拜谏议大夫，不就。竟死寺中，年八十。</p>
</blockquote>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/10/%E4%B8%89%E7%94%9F%E7%9F%B3%E8%83%8C%E5%90%8E.jpg" alt="三生石背后.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/10/%E4%B8%89%E7%94%9F%E7%9F%B3%E6%AD%A3%E9%9D%A2%E7%85%A7.jpg" alt="三生石正面照.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/10/%E4%B8%89%E7%94%9F%E7%9F%B3%E4%B8%8B%E6%9C%9B.jpg" alt="三生石下望.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/10/%E4%B8%89%E7%94%9F%E7%9F%B3%E4%B8%8B%E7%9A%84%E6%94%BE%E7%94%9F%E6%B1%A0.jpg" alt="三生石下的放生池.jpg"></p>
<hr>
<p>巧的是，几个月后，就在三生石不远，灵隐旁边，我也有一段奇遇。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E5%8C%85%E5%A4%A7%E7%88%B7%E4%B8%8E%E6%9F%B3%E5%A7%91%E5%A8%98%E7%9B%B8%E4%BC%9A%E4%B9%8B%E5%A4%84.jpg" alt="包大爷与柳姑娘相会之处.jpg"></p>
<hr>
<p>继续一路南行，走到杭图佛学分馆</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/33/51/%E5%B1%B1%E8%84%9A%E8%8C%B6%E7%94%B0.jpg" alt="山脚茶田.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E8%8C%B6%E5%86%9C.jpg" alt="茶农.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/33/51/%E5%B1%B1%E9%87%8E%E6%98%A5%E8%89%B2.jpg" alt="山野春色.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/10/%E6%9B%B2%E5%BE%84%E9%80%9A%E4%BD%9B%E5%9B%BE.jpg" alt="曲径通佛图.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E4%BD%9B%E5%9B%BE%E5%A4%96%E7%9A%84%E8%80%81%E5%B1%8B.jpg" alt="佛图外的老屋.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E4%BD%9B%E5%9B%BE%E9%97%A8%E5%8F%A3.jpg" alt="佛图门口.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E4%BD%9B%E5%9B%BE%E4%B8%80%E9%9A%852.jpg" alt="佛图一隅2.jpg"></p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E4%BD%9B%E5%9B%BE%E4%B8%80%E9%9A%853.jpg" alt="佛图一隅3.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E4%BD%9B%E5%9B%BE%E4%B8%80%E9%9A%854.jpg" alt="佛图一隅4.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E4%BD%9B%E5%9B%BE%E4%B8%80%E9%9A%855.jpg" alt="佛图一隅5.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E6%B3%95%E5%8D%8E%E7%BB%8F.jpg" alt="法华经.jpg"></p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E4%BD%9B%E6%95%99%E5%8F%B2%E5%BA%8F%E8%A8%80.jpg" alt="佛教史序言.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E4%BD%9B%E9%81%93%E4%BA%89%E6%96%97%E7%87%83%E5%9C%A3%E5%9D%9B.jpg" alt="佛道争斗燃圣坛.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E4%BD%9B%E5%9B%BE%E7%95%99%E8%A8%80%E6%9C%AC%E4%B9%8B%E5%9F%BA%E7%9D%A3%E5%BE%92%E7%9A%84%E5%BF%83%E5%A3%B0.jpg" alt="佛图留言本之基督徒的心声.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E4%BD%9B%E5%9B%BE%E7%95%99%E8%A8%80%E6%9C%AC%E4%B9%8B%E7%A6%85%E6%84%8F%E5%B0%8F%E8%AF%97.jpg" alt="佛图留言本之禅意小诗.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E4%BD%9B%E5%9B%BE%E7%95%99%E8%A8%80%E6%9C%AC%E4%B9%8B%E6%83%85%E4%BA%BA%E5%BF%83%E8%AF%AD.jpg" alt="佛图留言本之情人心语.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E4%BD%9B%E5%9B%BE%E7%95%99%E8%A8%80%E6%9C%AC%E4%B9%8B%E5%BF%83%E6%9C%89%E6%88%9A%E6%88%9A.jpg" alt="佛图留言本之心有戚戚.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/34/38/%E4%BD%9B%E5%9B%BE%E7%95%99%E8%A8%80%E6%9C%AC%E4%B9%8B%E8%87%AA%E7%94%BB%E5%83%8F.jpg" alt="佛图留言本之自画像.jpg"></p>
<hr>
<h1 id="个性生活">个性生活</h1><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E8%BF%BD%E5%A5%B3%E6%94%BB%E7%95%A5.jpg" alt="追女攻略.jpg"><br>有次在书店翻到的，根据我的经验，对于懒得跟你聊天的人，这三条都是白搭。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E5%B8%AE%E6%9C%8B%E5%8F%8B%E5%88%B7%E5%8D%95%E9%80%81%E7%9A%84.jpg" alt="帮朋友刷单送的.jpg"><br>帮朋友刷单送的</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E5%82%8D%E6%99%9A%E7%9A%84%E8%A5%BF%E6%B9%96.jpg" alt="傍晚的西湖.jpg"></p>
<p>傍晚的西湖</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E6%96%AD%E6%A1%A5%E4%B8%8E%E8%8D%B7%E8%8A%B1.jpg" alt="断桥与荷花.jpg"></p>
<p>断桥与荷花，附近的亭子里有一群人带了音响，轮流唱歌。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E8%BF%9C%E5%A4%84%E4%BF%9D%E4%BF%B6%E5%A1%94.jpg" alt="远处保俶塔.jpg"></p>
<p>另一边是宝石山</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E6%A0%91%E4%B8%8A%E6%9C%89%E9%B8%BD%E5%AD%90.jpg" alt="树上有鸽子.jpg"></p>
<p>西湖边树上的鸽子</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E5%8D%A6%E6%91%8A%EF%BC%8C%E5%90%AC%E4%B8%8D%E6%87%82%E4%BB%96%E7%9A%84%E6%96%B9%E8%A8%80.jpg" alt="卦摊，听不懂他的方言.jpg"></p>
<p>卦摊，听不懂他的方言</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E9%BB%91%E4%BA%91%E5%8E%8B%E5%9F%8E.jpg" alt="黑云压城.jpg"></p>
<p>黑云压城</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E8%BF%9E%E7%8E%AF%E7%94%BB.jpg" alt="连环画.jpg"></p>
<p>小人书！</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E6%B5%81%E6%B5%AA%E7%8C%AB.jpg" alt="流浪猫.jpg"></p>
<p>夜跑归途遇到的流浪猫</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E9%9D%A2%E9%A6%86%E5%A2%99%E4%B8%8A.jpg" alt="面馆墙上.jpg"></p>
<p>楼下的面馆</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E7%83%A7%E9%A5%BC.jpg" alt="烧饼.jpg"></p>
<p>好吃，但是太贵了。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E5%A4%A9%E8%BE%B9%E7%81%AB%E7%83%A7%E4%BA%91.jpg" alt="天边火烧云.jpg"></p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E4%B9%A1%E4%B8%8B%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%8E%89%E7%B1%B3%E6%A3%92.jpg" alt="乡下带来的玉米棒.jpg"><br>乡下带来的嫩玉米</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E6%96%B0%E6%AC%BE%E7%9A%843D%E7%9C%BC%E9%95%9C.jpg" alt="新款的3D眼镜.jpg"></p>
<p>新款的3D眼镜，第一次见到</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E8%BF%90%E6%B2%B3%E8%88%B9%E8%BF%B9.jpg" alt="运河船迹.jpg"></p>
<h2 id="运沙船">运沙船</h2><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/10/%E8%BF%90%E6%B2%B3%E4%B8%80%E8%A7%92.jpg" alt="运河一角.jpg"><br>运河一角</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/30/%E5%9F%8E%E9%9A%8D%E9%98%81%E9%A1%B6%E7%9C%8B%E8%A5%BF%E6%B9%96.jpg" alt="城隍阁顶看西湖.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/30/%E5%9F%8E%E9%9A%8D%E9%98%81%E9%A1%B6%E7%9C%8B%E5%BB%B6%E5%AE%89%E8%B7%AF.jpg" alt="城隍阁顶看延安路.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/30/%E5%9F%8E%E9%9A%8D%E9%98%81%E9%A1%B6%E6%9C%9B%E5%9F%8E%E9%9A%8D%E5%BA%99.jpg" alt="城隍阁顶望城隍庙.jpg"><br>城隍阁顶看西湖、延安路、城隍庙</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/30/%E5%9F%8E%E9%9A%8D%E9%98%81%E5%90%8D%E4%BA%BA%E7%94%BB%E5%83%8F.jpg" alt="城隍阁名人画像.jpg"><br>城隍阁中名人画像</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/30/%E6%B2%B3%E5%9D%8A%E8%A1%97%E5%BE%A1%E4%B9%90%E5%A0%821.jpg" alt="河坊街御乐堂1.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/14/17/37/30/%E6%B2%B3%E5%9D%8A%E8%A1%97%E5%BE%A1%E4%B9%90%E5%A0%822.jpg" alt="河坊街御乐堂2.jpg"></p>
<p>河坊街御乐堂</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[电影《降临》观后感]]></title>
      <url>http://lovenight.github.io/2017/01/22/%E7%94%B5%E5%BD%B1%E3%80%8A%E9%99%8D%E4%B8%B4%E3%80%8B%E8%A7%82%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">我能深入于未来，尽一切劫为一念，三世所有一切劫，为一念际我皆入。<br>我于一念见三世，所有一切人师子，亦常入佛境界中，如幻解脱及威力。<br>——《华严经》</blockquote>

<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2017/1/22/16/52/26/%E3%80%8A%E9%99%8D%E4%B8%B4%E3%80%8B%E6%B5%B7%E6%8A%A5.jpg" alt="《降临》海报.jpg"></p>
<p>年前看了电影《降临》，讲述了一群学者与造访地球的外星人沟通的故事。女主角在接触、学习外星语言的过程中，渐渐获得预知未来的能力，陆陆续续看到自己的一生。自己将会与现在一位同事步入婚姻，生下女儿，被丈夫抛弃，女儿早夭……</p>
<p>电影的结尾，女主角对未来的老公，一个尚无预知能力的物理学家，问道：「<strong>If you could see your whole life, from start to finish. Would you change thing?</strong>」</p>
<a id="more"></a>
<p>这个问题非常有趣。我们每个人，对自己的未来，都有不同程度的预知。近如手头的工作任务啥时做完，晚饭几点吃，吃什么；远如自己和身边的人亲人将会经历老、病、死……只是不知道这些事情发生的确切时间点罢了。</p>
<p>正因为不知道，未来的每一天都是新鲜、刺激、有趣的，尽情地生命，体验新经历，品尝新食物，玩新游戏，看新书，发现新世界……</p>
<p>也正因为不知道，生命充满了随时会暴发的苦。口渴肚饥是轻微的苦，生病受伤是剧烈的苦。世事无常，欢聚会结束，美食会变质，衣物会褪色破烂，高楼会倒塌，富豪会变穷人，爱人会变心，亲人会衰老死亡，生命每时每刻都在不停地流失，也许下一刻灾难就降临到自己头上。</p>
<p>该以怎样的态度面对这些迟早会发生的意外？该以怎样的态度面对已经遭受的不幸？</p>
<p>去年看过不少抑郁症病人写的内心独白，不少人的想法是：「我没做什么坏事，为什么是我！」能成功走出抑郁症的人，无一例外都抛弃了这种消极的想法。过去已经无法改变，怨天尤人没有任何意义。把做坏事与生病联系出因果关系，更是愚昧无知的表现。</p>
<p>人做任何事，都是先有想法再有行为，有行为才有变化。这想法可能是潜意识，也可能是细微到很难察觉的心识。倘若思想打成了死结，放弃自立自救自强，人就只能随波逐流，看天吃饭。甚至情绪也取决于外部环境，尝到甜高兴，吃到苦悲伤，这与动物、植物、死物有什么分别？</p>
<p>人和它们最关键的区别在于有思想、会思考，能用理智超越欲望和情绪。这种灵性，即是儒家所谓的「命」。子曰：「不知命，无以为君子也；不知礼，无以立也；不知言，无以知人也。」如果没有意识到自己身上相对于禽兽有这么独特的优势，又如何能修身炼己、行义达道，成为一名君子呢？</p>
<p>但许多人放弃了这一优势，每天所思所想所作，无非是如何满足自己的各种感官和口腹之欲，不如意则难过、恼火、埋怨、慎恨。一生的情绪注定起起落落，得不到解脱。这样的心态，面对女主角的抉择，只会痛苦地过会后半生。</p>
<p>Despite knowing the journey and where it leads, I embrace it. And I welcome every moment of it.</p>
<p>女主角的自白瞬间升华了电影主题，深感共鸣。兜兜转转这么多年，直到前段时间才真正明白这既是生活应有的态度，也是修道当秉持的心法。根器愚钝，这么简单的道理，从「会说」到「明白」，花了近八年。也体会到老子「吾言甚易知，甚易行；天下莫能知，莫能行」诚非虚言。</p>
<p>电影中还有句台词，解开了我一个心结：</p>
<p>Trust me, you can be very good at communication, but still end up single.</p>
<p>确实是这样。</p>
<p>事后看影评得知还有原著小说：<a href="https://www.douban.com/group/topic/27007597/" target="_blank" rel="external">特德·姜《你一生的故事》</a>，读来别有一番精彩。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[金品黄传略]]></title>
      <url>http://lovenight.github.io/2016/12/06/%E9%87%91%E5%93%81%E9%BB%84%E4%BC%A0%E7%95%A5/</url>
      <content type="html"><![CDATA[<p>前言：近来看到高祖父金品黄先生的一些文字资料，珍贵难得，遂手打整理放上网，以便后人查阅。原文有四条注释（第五、八、九、二十五），不少典故读来颇吃力，增补为二十七条。录之如下：</p>
<p>金品黄传略</p>
<p>李仲先</p>
<p>清末，东阳士人月旦①，有「八骏」②之目，金品黄先生居其一焉。先生原名国清，品黄乃其庠名，字菊丞（晚年改丞为存），号少陶。同治庚午（1870年）岁正生于邑东之瑞象头。瑞，一依山之小聚落耳，家亦不中赀③，旦夕辛勤，仅堪温饱。其尊翁云美公初令入塾，不过望其略晓文字为他日外出谋生之用耳。而先生聪慧善读，塾师嘉其颖悟，学必有成，劝其父令读勿辍，乃得专心向学。光绪十八年（1892年）掇芹④，廿一年补增，翌年补廪⑤。廿九年应省试，房考官以文优荐其卷于主司，文中「忠君非忠，忠国为忠；忠国非忠，忠民为忠」之语，有干时忌，为主考所摈。</p>
<a id="more"></a>
<p>先生自进学后即在东、在金训蒙以自给，积有年所，复以己束修⑥所蓄，就读于金华丽正书院。光绪三十二年，入浙江官立法政学堂学习法律，先生之毕生业法实由此发剏⑦，其秘密加入同盟会亦在斯校时。宣统元年（1909年），以优行贡⑧，廷试二等，以府经历⑨签分江苏。时国事日非，复不乐为吏，未就，仍回法政卒业。民国肇建，初任职于浙江省财政司支应科，兼监狱学校教习；不一年，旋任金华推事，代理监督，时法制草创，新旧扞格，遇事多所掣肘，居半载，辞去。乃于金华地方审判厅管区内行律师职务。法院改制，金华审判厅裁撤，改指杭州。约可二岁，法院复其旧，遂又归金华，直至抗日军兴。其在金华执律师业盖凡廿有余年，任金华律师公会会长亦自创直至金华陷敌时止。</p>
<p>昔之律师，不乏以皂为白，枉法谋利之辈。人或目为讼棍。先生独抑强扶弱，伸义护法，不为势屈，不为利动。理亏而欲涉讼求为诉状者，酬以重金所不为；蒙冤者不取分毫亦为之。尝有武义乡农，田为豪强占夺，涉讼经年不得直。先生阅其县讼案牍，详询颠末，愤其冤屈，允即为撰词上诉。而其人已因讼倾家，在金无所得食，则令居己家，供其衣食几半载，至胜诉而后已。铭感之余，其人请为佣以偿值，先生拒之，并不责其衣食之费，于此可想见先生之为人。律师多因人争论而渔利，先生则好排难解纷，遇有因细故欲讼而干先生者，辄晓之利害，劝令罢讼，间或为召争执双方而调停之，以息事宁人为旨。其尤为时人所重者，厥为调解金、赵两族纠纷事。东阳金姓其蕃而巍山赵姓素为望族，金姓祖坟在东嵊接境处，置有祀田，子孙聚居者夥，而赵姓也多田产在彼。东嵊公路之始建（先修东阳至长乐段，称东长路），路经两姓田，定线中纠葛甚多，纷争弥久，至有欲谋聚众械斗以取胜者。先生在金闻悉，急往东调解。人或泥其行，谓积怨既深，非仓卒可解，且汝亦金姓，避嫌为上。先生为之不顾，至东细行勘察，竭诚秉公，往返两间，奔波劝说，终得弭平事端。人无不称道先生之诚、之能、之惠及桑梓⑩者。</p>
<p>先生平素行事，大率类是。故不数年间，誉日益著，业日益兴，「道德律师」之名，随在口碑。浸至南面执法者亦惮先生之严正，审美其所辩护之案件不敢有所枉纵。先生亦以平冤抑、张正义而自喜，与他人之业律师惧有玷令名而自馁者迥不相侔，是以垂老预营寿域⑾，迳书墓碑曰「律师金品黄之墓」，曾不讳言律师之名。</p>
<p>匪特执业如斯，复颇多急公益、拯贫弱之举。东阳地瘠人稠，外出谋生者众，泥木工匠之在杭垣⑿者无虑万人。执业低微，被目为乡愚，每受欺凌；且终岁胼胝⒀，所入戋戋⒁，一旦失业或罹疾患，即衣食不周，困顿落魄。先生深谙乡人流离之苦，在杭执业时与邑之在杭闻人共创立东阳同乡会，俾能缓急相助，免人鱼肉。其在金，复为首创建东阳会馆于东市街，设置床榻，雇人爨炊⒂，利邑人来金膳宿之需，节客邸旅食之费，阖邑称便。1922年东阳大水，历时且久，田禾凡四度被淹，遂大饥馑，粮价腾贵，饥民嗷嗷。先生急同身受，四处筹措款项，疏通富户粜⒃粮，筏运至东平价出售凡数十万斤，灾民之赖以全活者甚众。先生之乐善利众，亦不独于故乡为然。在金华八咏门外筑停厝⒄所，旌孝门、通远门外分购荒山作义冢地，为羁旅无力归葬与夫家贫无地者停柩、殡葬之所，皆独力为之。复筹组施药局于东岳殿，夏则施药；筹组救济处，冬则施衣米。他如救灾会、桥工局等当地善举，几无不与。1927年北伐战起，孙传芳部驻金华军颇滋骚扰，复忧战乱殃及黎庶，先生乃倡议组织红十字会。及战事逼近，即于舍前立长竿揭红十字旗，收容妇孺，以策安全。先生既以好公益著在人口中，其时兴办实业如电灯、织业公司等人多邀共襄其事。第⒅先生志在兴业而不专以图利，乃发起办林木公司，于金、汤县界内外植树六十余万苗，盖亦今之绿化意也。迨抗日战起，木已拱把⒆，顾尽毁于日寇。</p>
<p>先生善举不一端，然厥功最伟、费力最勤，则在兴办八婺女中。先生雅重女权，民国初年，金华乡人有一子一女者，女既嫁而子死，乡人身殁，女归掌父业，族人共攻之。女愬⒇之先生。先生主男女平等女可继父业为立词讼，终经判决而维女权。此在当时，纵不被视为异端，亦诧为异事。本此一贯之主张，因当时金华中学堂不收女生，虽有教会办之成美女中，取费昂贵，非常人所能企及，遂拟创建女中。兹事体大，故与友好讨论再三，并尝就商诸钱兆鹏（后任中共金华支部书记）等人。始于1924年着手筹备，请三五知己分头集款得千余元，遂在次夏开办。由石镜湖任董事会主任，公推先生为校长。初无校舍，借用火神庙作教室，腾迁其酒坊巷私宅为师生宿舍；无教师，情恳金中教员兼课，不给束修，惟于学期末暨端午、中秋等节，邀教师至家一宴，外籍教师则假其宅以寓家小而已。然权宜非久计，乃自周历府属八县，劝募捐款，各邑明达，素仰先生声誉，复感其诚毅，乐于输将(21)；又商请官绅，出邑之公产为校产，八县咸与，故初定校名为旧金华府属八县立女子初级中学。集腋成裘，众擎易举，基金既集，即鸠工庀材(22)，兴建校舍于四眼井。惨淡经营，逐年建设，学校渐具规模，基础于是奠立。抗日军兴，为避敌轰炸，迁校琐园，先生随迁。金华沦陷，学校中辍，复风闻敌伪正探寻其所在，拟胁迫其出任维持会长，遂遄归东阳故里。时先生亦垂垂老矣，然犹不甘心于学校之辍办。终经乃婿东阳中学校长卢绶青之助，1943年秋于东中左近之村落（时东中避敌迁县南鄙之石门）马鞍山赁民居重行招生在东阳办学。傍近东中，俾便该校教员前来兼课，先生自主校务。明年9月，再迁张宅。东西颠簸，校务烦冗，兼以高龄，生活清苦，体日以衰，终于1944年之12月卒于校内，享年七十有五。诚亦可谓与八婺同其始而以学校终其生者矣。</p>
<p>先生生当清季，游泮水，食廪饩，贡优行，授经历，人方以为行且扶摇直上矣。乃薄仕宦而不为，复投身革命党，观其早年省试文中「忠君非忠、忠民为忠」诸语，盖素禀民主意识者也，且终其生不渝。晚逢战乱，僻处乡隅，道途梗阴，鲜闻外事，间亦吟咏以寄情志。尝偶有外省间关(23)归者，与道及寇氛日炽，生民涂炭及当道者官贪兵懦等情事，与述「前方吃紧、后方紧吃」诸民谣。先生闻后愤慨不平，吟哦时则以手作势，口道「该杀、该杀」至成诗方已，具见其忧国疾恶之情。其于家事私事则颇随和，与子侄言，辄曰「凡事只求过得去」，以己之不事家产而勖(24)家人不多事聚敛也。自奉则廉，夫人持家则俭，先生优贡之捷鸣锣报到时(25)，夫人方在村后林中扒松毛以为薪，此事士子中传为谈资，其勤俭可以想知。第举公益则曾无少吝，其金华宅旁县体育场（今红军巷转角处）之场地即为先生所捐赠，原购入欲建居宅者。以平生好施，遂家鲜余财，舍遗宅一区外，身后亦颇萧条云。</p>
<p>已上(26)先生事略中，太半得诸哲嗣(27)曾任杭县副县长之凤悟先生。殆由秉「子不言父之过」之训，少及乃父之短。傥以为容有溢美之辞而招求全之毁，则非所敢知矣。唯于先生行状，或当无讹。今则凤悟先生亦已作古，噫！</p>
<hr>
<p>整理者附注：</p>
<ul>
<li>①<strong>月旦</strong>：原意每月初一，引申为品评人物。典出《后汉书·卷六十八·郭符许列传·许劭》：「初，劭与靖俱有高名，好共核论乡党人物，每月辄更其品题，故汝南俗有“月旦评”焉。」</li>
<li>②<strong>八骏</strong>： 吴映白（吴良南庵房四份头人）、邵飘萍（紫溪人）、郑文礼（塘西新下郑人）、金品黄（瑞象头人）、陈备三（石塔山人）、陈天儒（南乡人，村名不详）、李昂青（凤仪堂人）、张浩（玉山人），被誉为辛亥革命时期东阳「吴宁八骏」。</li>
<li>③<strong>中赀</strong>：亦作「中訾」，谓资产达到豪富的数额。</li>
<li>④<strong>掇芹</strong>：旧时指考取秀才。典出《诗经·鲁颂·泮水》：「思乐泮水，薄采其芹。」古代诸侯的学宫，称为「泮宫」，学宫之水池为「泮水」。采集泮水的芹菜，意谓入学。</li>
<li>⑤<strong>补增、补廪</strong>：清制，秀才岁考，奖优罚劣，「一等补廪，二等补增，三等平平过，四等打手心」故有「讨饭怕狗咬，秀才怕岁考」之谚。廪为粮仓，廪生全称是廪膳生员，意即可领学粮之生员（秀才）。廪生各县有定额，即考一等，需有缺额才补，故称补廪。考二等可补増，为増广生员，简称増生，意即増广名额之候补廪生。</li>
<li>⑥<strong>束修</strong>：古代入学敬师的礼物，引申为学费。《论语·述而》：「子曰：自行束脩以上，吾未尝无诲焉。」束修到底指什么，历来解释不同，有人认为是十条腊肉，有人认为是穷人也拿得出的薄礼，有人认为是年龄十五岁。</li>
<li>⑦<strong>剏</strong>：同「创」</li>
<li>⑧<strong>以优行贡</strong>：各省提督学政（主管各府、州、县学、书院及有关教化、文物等事，大略相当于后之教育、文化厅，但地位与巡抚平行，简称学政）三年任满前，命各府、州、县学推选秀才中学行俱优者上报，会同巡抚进行考试，按额定人数选优贡入国子监学习者称为优贡。实则并不学习，多在廷试（朝考）合格后以教职（教谕、训导）、佐贰官员等分发各省任用。分发何省，抽签决定。</li>
<li>⑨<strong>经历</strong>：藩、臬台及府、道衙门中职掌出纳文牍之官吏</li>
<li>⑩<strong>桑梓</strong>：乡亲父老，典出《诗·小雅·小弁》：「维桑与梓，必恭敬止。」《朱熹集传》：「桑、梓二木。古者五亩之宅，树之墻下，以遗子孙给蚕食、具器用者也……桑梓父母所植。」东汉 以来一直以「桑梓」借指故乡或乡亲父老。</li>
<li>⑾<strong>寿域</strong>：寿穴、坟茔。典出《汉书·卷七十二·王贡两龚鲍列传·王吉》：「驱一世之民济之仁寿之域」。以仁义礼制治理天下，使百姓沐浴陛下之恩泽，安逸而长寿。后遂以「寿域」指人人得尽天年的太平盛世。后亦有指寿穴、坟茔之义。</li>
<li>⑿<strong>杭垣</strong>：垣者城也，杭垣即杭城、杭州。</li>
<li>⒀<strong>胼胝</strong>：原意是手掌或脚底因长期摩擦而生的厚皮，引申为辛勤劳作。</li>
<li>⒁<strong>戋戋</strong>：浅小之意。</li>
<li>⒂<strong>爨炊</strong>：爨cuàn者灶也。爨炊即烧火做饭。</li>
<li>⒃<strong>粜</strong>：tiào，卖粮食</li>
<li>⒄<strong>厝</strong>：cuò，停柩，把棺材停放待葬，或浅埋以待改葬。</li>
<li>⒅<strong>第</strong>：但，此为古义。</li>
<li>⒆<strong>拱把</strong>：拱，兩手合围。把，一手所握。拱把表示物体不粗。语出《孟子·告子上》：「拱把之桐梓，人苟欲生之，皆知所以養之者。」</li>
<li>⒇<strong>愬</strong>：同「诉」</li>
<li>(21)<strong>输将</strong>：捐献、输送。语出《汉书·卷四十九·晁错传》：「陛下幸募民相徙以实塞下，使屯戍之事益省，输将之费益寡，甚大惠也。」</li>
<li>(22)<strong>鸠工庀材</strong>：招集工匠，准备材料。鸠，聚集。庀pǐ，准备、具备。语出唐·李方郁《修中岳庙记》：「岂可不成耶？遂鸠工庀材，四旬而就。」</li>
<li>(23)<strong>间关</strong>：形容旅途的艰辛，崎岖、辗转。《汉书·王莽传》：「间关至渐台。」</li>
<li>(24)<strong>勖</strong>：勉励</li>
<li>(25)<strong>优贡之捷鸣锣报到</strong>：明清时，考试中选、官吏升迁等例有报人报喜。报人进其村即鸣锣，入其户则更见高必上，登桌、登楼甚或登屋，取「步步高升」之采。并张贴报单，单用全幅泥金红纸书写。书写也有定式，除所报考试名称、名次等外，并有连中三元等吉利语，必须用扁仿宋体书，张贴于中堂等显眼处。不仅报其本家，且遍及亲故，乡人皆以家贴报单多为荣。此风山僻乡村沿至民国不衰。</li>
<li>(26)<strong>已上</strong>：以上。已通「以」</li>
<li>(27)<strong>哲嗣</strong>：对别人儿子的敬称</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[云游歌二首、道学自勉文]]></title>
      <url>http://lovenight.github.io/2016/09/28/%E4%BA%91%E6%B8%B8%E6%AD%8C%E4%BA%8C%E9%A6%96%E3%80%81%E9%81%93%E5%AD%A6%E8%87%AA%E5%8B%89%E6%96%87/</url>
      <content type="html"><![CDATA[<p>作者：紫清真人白玉蟾</p>
<h2 id="云游歌（二首）">云游歌（二首）</h2><p>云游难，云游难，万里水烟四海宽，说著这般滋味苦，教人怎不鼻头酸。<br>初别家山辞骨肉，腰下有钱三百足，思量寻思访道难，今夜不知何处宿。<br>不觉行行三两程，人言此地是漳城，身上衣裳典卖尽，路上何曾见一人。<br>初到江村宿孤馆，鸟啼花落千林晚，明朝早膳又起行，只有随身一柄伞。<br>渐渐来来兴化军，风雨潇潇欲送春，惟有一身赤？？，囊中尚有三两文。<br>行得艰辛脚无力，满身瘙痒都生虱，茫茫到此赤条条，思欲归乡归不得。<br>争奈旬余守肚饥，埋名隐姓有谁知，来到罗源兴福寺，遂乃捐身作仆儿。<br>初作仆时未半月，复与主僧时作别，火云飞上攴提峰，路上石头如火热。<br>炎炎畏日正烧空，不堪赤脚走途中，一块肉山流出水，岂曾有扇可摇风。<br>且喜过除三伏暑，踪迹于今复剑浦，真个彻骨彻髓贫，荒郊一夜梧桐雨。<br>黄昏四顾泪珠流，无笠无蓑愁不愁，偎傍茅檐待天晓，村翁不许茅檐头。<br>闻说建宁人好善，特来此地求衣饭，耳边且闻惭愧声，阿谁肯具慈悲眼。<br>忆著从前富贵时，低头看鼻皱双眉，家家门前空舒手，那有一人怜乞儿。<br>福建出来到龙虎，上清宫中谒宫主，未相识前求挂搭，知堂嫌我身滥缕。<br>恰似先来到武夷，黄冠道士叱骂时，些儿馊饭冷熟水，道我孤寒玷辱伊。<br>江之东西湖南北，浙之左右接西蜀，广闽淮海数万里，千山万水空碌碌。<br>云游不觉已多年，道友笑我何风颠，旧游经复再去来，大事匆匆莫怨天。<br>我生果有神仙分，前程有人可师问，于今历练已颟顸，胸中不著一点闷。<br>记得兵火起淮西，凄凉数里皆横尸，幸而天与残生活，受此饥渴不堪悲。<br>记得武林天雨雪，衣衫破碎风刮骨，何况身中精气全，犹自冻得皮迸血。<br>又思古庙风雨时，香炉无火纸钱飞，神号鬼哭天惨惨，露冷云寥猿夜啼。<br>又思草履卧岩霜，月照苍苔落叶黄，未得些儿真受用，如何禁得不凄凉。<br>偶然一日天开眼，陈泥丸公知我懒，癸酉中秋野外晴，独坐松阴说长短。<br>元来家里有真金，前日辛勤枉用心，记得长生留命诀，结茅静坐白云深。<br>炼金丹，亦容易，或在山中或在市，等闲作些云游歌，恐人不识云游意</p>
<a id="more"></a>
<p>又</p>
<p>尝记得，洞庭一夜雨。无蓑无笠处，偎傍茅檐待天明，村翁不许檐头住。<br>又记得，武林七日雪。衣衫破又裂，不是白玉蟾教他，冻得皮迸血，只是寒彻骨。<br>又记得，江东夏热时。路上石头如火热，教我何处歇？无扇可摇风，赤脚走不辍。<br>又记得，青城秋月夜。独自松阴下，步虚一阙罢，口与心说话，寒烟漠漠万籁静，彼时到山方撮乍。<br>又记得，潇湘些小风吹转，华胥梦衔，山日正红，一声老鸦鸣鸦鸣，过耳寻无踪，这些子，欢喜消息与谁通。<br>又记得，淮西兵马起，枯骨排数里，欲餐又无粮，欲渴复无水。<br>又记得，一年到村落，瘟黄正作恶，人来请符水，无处堪摸索，神将也显灵，乱把鬼神捉。<br>又记得，北邙山下行，古墓秋草生，纸钱雨未干，白杨风萧萧，荒苔月盈盈，一夜鬼神哭不止，赖得度人一卷经。<br>又记得，通衢展手处，千家说惭愧，万家说调数，倚门眼看鼻，频频道且过，满面看尽笑，喝骂教吾去。<br>又记得，入堂求挂搭，嫌我太滥缕，直堂与单位，知堂言不合，未得两日间，街头行得匝，复入悲田院，乞儿相混杂。<br>又记得，几年霜天卧荒草，几夜月明自绝倒，几日淋漓雨，古庙之中独自坐，受尽寒，忍尽饥，未见些子禅，未见些子道。贤哉翠虚翁，一见便怜我，说一句，痛处针便住，教我行持，片晌间，骨毛寒心化结成，一粒红，渠言只此是金丹，万卷经总是闲。道人千万个，岂识真常道。这些无蹊跷，不用暗旗号，也是难，八十老翁咬铁盘；也是易，一下新竹刀又利。说与君，云游今几春，蓬头赤？？，那肯教人识。</p>
<h2 id="道学自勉文">道学自勉文</h2><p>司马子微初学仙时，以元砾百片置于案前，每读一卷度人经则移瓦一片于案下。每日百刻，课经百卷，如此勤苦，久而行之，位至上清。定箓太霄丹元真人又如葛孝先，初炼丹时，常以念珠持于手中，每日坐丹炉边，常念玉帝全号一万遍，如是勤苦，久而行之，位至玉虚紫灵普化玄静真人。</p>
<p><strong>我辈何人，生于中华，诞于良家，六根既圆，性识聪慧，宜生勤苦之念，早臻太上之阶，乌跃于扶桑，兔飞于广寒，燕归于乌衣，雁度于衡山。羲和驱日月，日月催百年，人生如梦幻，视死如夜眠，几度空搔首，溺志在诗酒。浑不念道业，心猿无所守，吾今划自兹，回首前程路，青春不再来，光阴莫虚度，他日决视人寰，眼卑宇宙，骑白云，步紫极，始自今日，勉之，勉之。</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Windows下 Python 2 与 Python 3 共存]]></title>
      <url>http://lovenight.github.io/2016/09/27/Windows%E4%B8%8B-Python-2-%E4%B8%8E-Python-3-%E5%85%B1%E5%AD%98/</url>
      <content type="html"><![CDATA[<p>一向用Python 3，最近研究微信公众号开发，各云平台只支持Python 2.7，想用其他版本需要自己搭建环境。而网上又搜不到Python 3开发微信公众号的资料。暂打算先使用Python 2.7，有空学习Docker后再迁移到Python 3。</p>
<p>安装Python 2.7后，本来在3.4下能正常使用的脚本无法运行。网上有的方法是把两个版本的主程序分别改名为python2和python3，人眼判断脚本，手输命令行执行脚本。像我这样喜欢双击、拖拽的懒人当然不会满足，找到了更智能的解决方案。</p>
<a id="more"></a>
<h1 id="Python_2_与_Python_3_共存">Python 2 与 Python 3 共存</h1><p>安装 Python 3.3 以上的版本时，Python会在<code>C:\Windows</code>文件夹下安装启动器<code>py.exe</code>。双击脚本调用的就是这个程序：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/9/27/17/59/21/Python%E8%BF%90%E8%A1%8C%E7%AA%97%E5%8F%A3.jpg" alt="Python运行窗口.jpg"></p>
<p>如果系统中同时存在 Python 2 和 Python 3，可用它指定版本来运行代码：</p>
<pre><code><span class="keyword">py</span> -<span class="number">2</span> helloworld.<span class="keyword">py</span>
<span class="keyword">py</span> -<span class="number">3</span> helloworld.<span class="keyword">py</span>
</code></pre><p>2和3即是版本。</p>
<p>每次都添加参数太麻烦，直接在Python脚本第一行指定版本：</p>
<pre><code><span class="shebang">#! python3</span>
</code></pre><p>可以双击，也可以命令行运行：</p>
<pre><code><span class="keyword">py</span> helloworld.<span class="keyword">py</span>
</code></pre><p>如果没有在首行指定版本而用上述命令运行或双击，则默认调用Python 2</p>
<p>使用pip：</p>
<pre><code>py -2 -m pip <span class="operator"><span class="keyword">install</span> requests
py -<span class="number">3</span> -<span class="keyword">m</span> pip <span class="keyword">install</span> requests</span>
</code></pre><p><code>-m pip</code> 表示运行 pip 模块</p>
<p>原有的<code>python</code>和<code>pip</code>命令仍然有效，默认执行哪一个版本呢？看环境变量中路径的先后次序。</p>
<pre><code><span class="attribute">C</span>:\Python34\;<span class="attribute">C</span>:\Python34\Scripts;<span class="attribute">C</span>:\Python27\;<span class="attribute">C</span>:\Python27\Scripts;
</code></pre><p>如上则调用Python 3</p>
<h1 id="参考资料">参考资料</h1><ul>
<li><a href="https://www.zhihu.com/question/21653286" target="_blank" rel="external">同时装了Python3和Python2，怎么用pip？</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo报错Template render error: tag name expected]]></title>
      <url>http://lovenight.github.io/2016/09/27/Hexo%E6%8A%A5%E9%94%99Template-render-error-tag-name-expected/</url>
      <content type="html"><![CDATA[<h1 id="问题">问题</h1><p>在发上一篇《<a href="http://lovenight.github.io/2016/09/25/Python-3-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">Python 3 学习笔记</a>》时，每次执行<code>hexo s</code>或<code>hexo g</code>，都会报错：</p>
<pre><code>FATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html
Template render error: tag name expected
    at Error.exports.TemplateError (E:<span class="command">\hexo</span><span class="command">\node</span>_modules<span class="command">\hexo</span><span class="command">\node</span>_modules<span class="command">\nunjucks</span><span class="command">\src</span><span class="command">\lib</span>.js:51:19)
    at Object.extend.fail (E:<span class="command">\hexo</span><span class="command">\node</span>_modules<span class="command">\hexo</span><span class="command">\node</span>_modules<span class="command">\nunjucks</span><span class="command">\src</span><span class="command">\parser</span>.js:64:15)
    at Object.extend.parseStatement (E:<span class="command">\hexo</span><span class="command">\node</span>_modules<span class="command">\hexo</span><span class="command">\node</span>_modules<span class="command">\nunjucks</span><span class="command">\src</span><span class="command">\parser</span>.js:510:18)
.......其余省略
</code></pre><a id="more"></a>
<hr>
<h1 id="原因">原因</h1><p>文中有这句话：</p>
<blockquote>
<p>在Jinja2中，用<code>{% ... %}</code>表示指令</p>
</blockquote>
<p>其中{%和%}被当成hexo模板中的标签，解析出错。</p>
<hr>
<h1 id="解决">解决</h1><p>将它用如下代码包住：<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="var_expand">% raw %</span>&#125;</span><br><span class="line">&#123;<span class="var_expand">% endraw %</span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>修改后的Markdown原文：</p>
<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在Jinja2中，用<span class="escape">`&#123;</span><span class="var_expand">% raw %</span>&#125;&#123;<span class="var_expand">% ... %</span>&#125;&#123;<span class="var_expand">% endraw %</span>&#125;<span class="escape">`表</span>示指令</span><br></pre></td></tr></table></figure>
<p>效果：<br>在Jinja2中，用<code>{% ... %}</code>表示指令</p>
<hr>
<h1 id="补充">补充</h1><p>用```包住的代码块不需要这样特殊处理。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python 3 学习笔记]]></title>
      <url>http://lovenight.github.io/2016/09/25/Python-3-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>初学Python的时候整理的学习笔记。</p>
<h2 id="常用网址">常用网址</h2><ul>
<li><a href="https://docs.python.org/3/library/functions.html#abs" target="_blank" rel="external">官方文档</a></li>
<li><a href="http://old.sebug.net/paper/books/dive-into-python3/" target="_blank" rel="external">深入Python3</a></li>
<li><a href="http://www.cnblogs.com/rollenholt/category/313456.html" target="_blank" rel="external">某Python学习博客</a></li>
<li><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external">廖雪峰Python教程</a></li>
</ul>
<hr>
<h2 id="安装与配置">安装与配置</h2><p><a href="https://www.python.org/downloads/" target="_blank" rel="external">官网下载</a></p>
<a id="more"></a>
<h3 id="Python_Shell">Python Shell</h3><p>安装后可在程序菜单中找到IDLE</p>
<p>进入交互帮助模式：<code>help()</code><br>退出：<code>quit</code></p>
<h3 id="库的搜索路径：">库的搜索路径：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path <span class="comment"># 返回一个list，第一个是py文件所在的目录</span></span><br></pre></td></tr></table></figure>
<p>添加新路径<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sys<span class="class">.path</span><span class="class">.insert</span>(<span class="number">0</span>, <span class="string">'新路径'</span>)</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="内置数据类型">内置数据类型</h2><ul>
<li>Booleans 布尔型：True 或者False。0，空list、tuple、set、dict，None 都为False。</li>
<li>Numbers 数值型：Integers、Floats、Fractions 分数、Complex Number 复数。</li>
<li>Strings 字符串：Unicode 字符序列</li>
<li>Bytes 字节 和 Byte Arrays 字节数组：例如 一份 jpeg 图像文件。用带<code>b</code>前缀的单引号或双引号表示，如<code>b&#39;abc&#39;</code>，每个字符都只占一个字节</li>
<li>Lists 列表：值的有序序列，变长</li>
<li>Tuples 元组：值的有序序列，定长</li>
<li>Sets 集合：装满无序值的包裹。</li>
<li>Dictionaries 字典：键值对的无序包裹。</li>
</ul>
<hr>
<h3 id="常量">常量</h3><p>Python中，通常用全部大写的变量名表示常量。但是Python根本没有任何机制保证该常量不会被改变，所以，用全部大写的变量名表示常量只是一个习惯上的用法</p>
<hr>
<h3 id="浮点数">浮点数</h3><p>可以用科学计数法，如<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1.2e-5</span></span><br></pre></td></tr></table></figure></p>
<p>Python的整数没有大小限制<br>Python的浮点数也没有大小限制，但是超出一定范围就直接表示为inf（无限大</p>
<hr>
<h3 id="运算符">运算符</h3><ul>
<li>/ 浮点除法，结果一律float （在Python 2 中表示整数除法）</li>
<li>// 古怪的整数除法，向下取整，如 11//2为5， -11//2为-6，如果分子或分母中有float，则结果也取整后的float。否则为整数</li>
<li>** 幂</li>
<li>% 余数</li>
</ul>
<hr>
<h3 id="分数">分数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fractions</span><br><span class="line"><span class="comment"># 下面定义一个分数 1/3，可以进行常规数学运算</span></span><br><span class="line">x = fractions.Fraction(<span class="number">1</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<p>会自动进行约分</p>
<hr>
<h3 id="list">list</h3><p>列表，元素可变。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">a_list = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'mpilgrim'</span>, <span class="string">'z'</span>, <span class="string">'example'</span>]</span><br><span class="line"><span class="comment"># 可以如下调用</span></span><br><span class="line">a_list[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切片 左闭右开区间</span></span><br><span class="line">a_list[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">a_list[<span class="number">1</span>:-<span class="number">1</span>]</span><br><span class="line">a_list[<span class="number">0</span>:<span class="number">3</span>]</span><br><span class="line">a_list[:<span class="number">3</span>]</span><br><span class="line">a_list[<span class="number">3</span>:]</span><br><span class="line">a_list[:]  <span class="comment"># 返回元素与a_list相同的新表，复制的捷径</span></span><br><span class="line">a_list[:<span class="number">3</span>:<span class="number">2</span>] <span class="comment"># 前3个元素，每两个取一个</span></span><br><span class="line">a_list[::<span class="number">2</span>] <span class="comment"># 所有数，每2个取一个</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加元素</span></span><br><span class="line">a_list = a_list + [<span class="number">2.0</span>, <span class="number">3</span>] <span class="comment"># 先连接，后赋值</span></span><br><span class="line">a_list.append([<span class="string">'g'</span>, <span class="string">'h'</span>, <span class="string">'i'</span>])   <span class="comment"># 只接受一个参数，可以是任何数据类型。参数会被作为一个list元素放入原来的list中</span></span><br><span class="line">a_list.extend([<span class="string">'four'</span>, <span class="string">'Ω'</span>])  <span class="comment"># 只接受一个list参数，list中每个元素都会分别被添加到list中</span></span><br><span class="line">a_list.insert(<span class="number">0</span>, <span class="string">'Ω'</span>)  <span class="comment"># 指定位置插入</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除元素</span></span><br><span class="line"><span class="keyword">del</span> a_list[<span class="number">1</span>]</span><br><span class="line">a_list.remove(<span class="string">'new'</span>)</span><br><span class="line">a_list.pop() <span class="comment"># 返回并删除最后一个元素</span></span><br><span class="line">a_list.pop(<span class="number">1</span>) <span class="comment"># 返回并删除指定元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检索值</span></span><br><span class="line">a_list = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'new'</span>, <span class="string">'mpilgrim'</span>, <span class="string">'new'</span>]</span><br><span class="line">a_list.count(<span class="string">'new'</span>)       <span class="comment"># 2</span></span><br><span class="line"><span class="string">'new'</span> <span class="keyword">in</span> a_list           <span class="comment"># True</span></span><br><span class="line"><span class="string">'c'</span> <span class="keyword">in</span> a_list             <span class="comment"># False</span></span><br><span class="line">a_list.index(<span class="string">'new'</span>)       <span class="comment"># 2</span></span><br><span class="line">a_list.index(<span class="string">'c'</span>)         <span class="comment"># 报错</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="tuple">tuple</h3><p>元组，元素不可变</p>
<p>引用、切片（会创建新tuple）等方法与list相同<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a_tuple = (<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"mpilgrim"</span>, <span class="string">"z"</span>, <span class="string">"example"</span>)  <span class="comment"># 也可以用单引号</span></span><br></pre></td></tr></table></figure></p>
<p>如果创建单元素元组，需要在值后加一个逗号</p>
<p>好处：</p>
<ul>
<li>元组的速度比列表更快。</li>
<li>对不需要改变的数据进行“写保护”将使得代码更加安全。使用元组替代列表就像是有一条隐含的 assert 语句显示该数据是常量，特别的想法（及特别的功能）必须重写。（？？）</li>
<li>一些元组可用作字典键（特别是包含字符串、数值和其它元组这样的不可变数据的元组）。列表永远不能当做字典键使用，因为列表不是不可变的。</li>
</ul>
<hr>
<h3 id="一次赋多值">一次赋多值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用元组，下面的括号都可以省略</span></span><br><span class="line">v = (<span class="string">'a'</span>, <span class="number">2</span>, <span class="keyword">True</span>)</span><br><span class="line">(x, y, z) = v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用迭代器</span></span><br><span class="line">(MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY) = range(<span class="number">7</span>)</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="set">set</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建set</span></span><br><span class="line">a_set = &#123;<span class="number">1</span>, <span class="number">2</span>&#125; <span class="comment"># 单值set不需要加逗号</span></span><br><span class="line">a_set = set(a_list)</span><br><span class="line"><span class="comment"># 创建空set</span></span><br><span class="line">a_set = set()</span><br><span class="line"><span class="comment"># 创建空字典</span></span><br><span class="line">a_set = &#123;&#125;  <span class="comment">#由于从 Python 2 沿袭而来历史的古怪规定，不能使用两个花括号来创建空集合</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加值</span></span><br><span class="line">a_set.add(<span class="number">4</span>) <span class="comment"># 接受单个参数</span></span><br><span class="line">a_set.update(&#123;<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>&#125;)</span><br><span class="line">a_set.update([<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>])</span><br><span class="line">a_set.update(&#123;<span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>&#125;, &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">13</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除值</span></span><br><span class="line">a_set.discard(<span class="number">10</span>)  <span class="comment"># 若元素不存在则什么也不做</span></span><br><span class="line">a_set.remove(<span class="number">21</span>) <span class="comment"># 若元素不存在则报错</span></span><br><span class="line">a_set.pop() <span class="comment"># 随机删除值（set无序），若集合为空则报错</span></span><br><span class="line">a_set.clear() <span class="comment"># 清空set，等价于a_set = set()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测值</span></span><br><span class="line"><span class="number">30</span> <span class="keyword">in</span> a_set</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并set</span></span><br><span class="line">a_set.union(b_set)   <span class="comment"># 返回一个新set</span></span><br><span class="line">a = a | b <span class="comment"># 与上一条等效，下同</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 两个set的交集</span></span><br><span class="line">a_set.intersection(b_set)   <span class="comment"># 返回一个新set</span></span><br><span class="line">a = a &amp; b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 剔除set</span></span><br><span class="line">a_set.difference(b_set)  <span class="comment"># 返回a_set中不包含b_set值的新set</span></span><br><span class="line">a = a - b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 非交集</span></span><br><span class="line">a_set.symmetric_difference(b_set)  <span class="comment"># 返回仅在其中一个set中出现的值的新set</span></span><br><span class="line">a = a ^ b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对称性， 结果都为true</span></span><br><span class="line"><span class="comment"># 集合是无序的。任何两个包含所有同样值（无一遗漏）的集合可认为是相等的</span></span><br><span class="line">b_set.symmetric_difference(a_set) == a_set.symmetric_difference(b_set)</span><br><span class="line">b_set.union(a_set) == a_set.union(b_set)</span><br><span class="line">b_set.intersection(a_set) == a_set.intersection(b_set)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测子集</span></span><br><span class="line">a_set.issubset(b_set) <span class="comment"># 前者是否是后者的子集</span></span><br><span class="line">b_set.issuperset(a_set) <span class="comment"># 前者是否是后者的父集</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="dict">dict</h3><p>dict是键值对的无序集合。向dict添加一个键的同时，必须为该键增添一个值</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建dict</span></span><br><span class="line">a_dict = &#123;<span class="string">'name'</span>: <span class="string">'allen'</span>, <span class="string">'age'</span>: <span class="number">40</span>&#125;</span><br><span class="line">a_dict = dict()</span><br><span class="line">a_dict = dict(name=<span class="string">'allen'</span>,age=<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询</span></span><br><span class="line">a_dict[<span class="string">'server'</span>]  <span class="comment"># 若key不存在则报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加值</span></span><br><span class="line">a_dict[<span class="string">'user'</span>] = <span class="string">'mark'</span>  <span class="comment"># 若key已存在则覆盖旧值，key区分大小写</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 迭代</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> d <span class="comment"># 迭代key</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> d.values() <span class="comment"># 迭代value</span></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> d.items() <span class="comment"># 迭代key和value</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 交换key和value</span></span><br><span class="line">&#123;value:key <span class="keyword">for</span> key, value <span class="keyword">in</span> a_dict.items()&#125;</span><br></pre></td></tr></table></figure>
<p>值为list时<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">SUFFIXES = &#123;<span class="number">1000</span>: [<span class="string">'KB'</span>, <span class="string">'MB'</span>, <span class="string">'GB'</span>, <span class="string">'TB'</span>, <span class="string">'PB'</span>, <span class="string">'EB'</span>, <span class="string">'ZB'</span>, <span class="string">'YB'</span>],</span><br><span class="line">            <span class="number">1024</span>: [<span class="string">'KiB'</span>, <span class="string">'MiB'</span>, <span class="string">'GiB'</span>, <span class="string">'TiB'</span>, <span class="string">'PiB'</span>, <span class="string">'EiB'</span>, <span class="string">'ZiB'</span>, <span class="string">'YiB'</span>]&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 长度</span></span><br><span class="line">len(SUFFIXES) <span class="comment"># 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测值</span></span><br><span class="line"><span class="number">1000</span> <span class="keyword">in</span> SUFFIXES</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询值</span></span><br><span class="line">SUFFIXES[<span class="number">1000</span>] <span class="comment"># ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']</span></span><br><span class="line">SUFFIXES[<span class="number">1000</span>][<span class="number">3</span>] <span class="comment"># 'TB'</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="None">None</h3><p>None 是 Python 的一个特殊常量。 它是唯一的空值。None 与 False 不同。None 不是 0 。None 不是空字符串。将 None 与任何非 None 的东西进行比较将总是返回 False 。</p>
<p>None 是唯一的空值。它有着自己的数据类型（NoneType）。可将 None 赋值给任何变量，但不能创建其它 NoneType 对象。所有值为 None 变量是相等的。</p>
<hr>
<h2 id="函数">函数</h2><h3 id="数据类型转换">数据类型转换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int(), float(), bool(), str()</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="函数别名">函数别名</h3><p>把函数名赋给一个变量，相当于给这个函数起了一个“别名”<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = abs</span><br><span class="line">a(-<span class="number">1</span>)</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="定义函数">定义函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> isinstance(x, (int, float)): <span class="comment"># 数据类型检查</span></span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">'bad operand type'</span>)</span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br></pre></td></tr></table></figure>
<p>如果没有<code>return</code>语句，函数执行完毕后也会返回结果，只是结果为<code>None</code>。<br><code>return None</code>可以简写为<code>return</code>。<br>也可以返回多个值：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(x, y, step, angle = <span class="number">0</span>)</span>:</span> <span class="comment"># angel=0是默认参数，必须写在后</span></span><br><span class="line">    nx = x + step * math.cos(angle)</span><br><span class="line">    ny = y - step * math.sin(angle)</span><br><span class="line">    <span class="keyword">return</span> nx, ny</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line">x, y = move(<span class="number">100</span>, <span class="number">100</span>, <span class="number">60</span>, math.pi / <span class="number">6</span>)</span><br><span class="line"><span class="comment"># 也可以缺少angle</span></span><br><span class="line">x, y = move(<span class="number">100</span>, <span class="number">100</span>, <span class="number">60</span>)</span><br></pre></td></tr></table></figure></p>
<p>实际上是返回一个tuple</p>
<p>如果想定义一个什么事也不做的空函数，可以用<code>pass</code>语句。<code>pass</code>可以用来作为占位符，比如现在还没想好怎么写函数的代码，就可以先放一个<code>pass</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nop</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p>
<p><code>pass</code>还可以用在其他语句里，比如：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 缺少了pass，代码运行就会有语法错误。</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="参数">参数</h3><h4 id="默认参数">默认参数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enroll</span><span class="params">(name, gender, age=<span class="number">6</span>, city=<span class="string">'Beijing'</span>)</span>:</span></span><br><span class="line">    print(<span class="string">'name:'</span>, name)</span><br><span class="line">    print(<span class="string">'gender:'</span>, gender)</span><br><span class="line">    print(<span class="string">'age:'</span>, age)</span><br><span class="line">    print(<span class="string">'city:'</span>, city)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line">enroll(<span class="string">'Sarah'</span>, <span class="string">'F'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 多个默认参数时按位置分配</span></span><br><span class="line">enroll(<span class="string">'Bob'</span>, <span class="string">'M'</span>, <span class="number">7</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以指定参数名</span></span><br><span class="line">enroll(<span class="string">'Adam'</span>, <span class="string">'M'</span>, city=<span class="string">'Tianjin'</span>)</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_end</span><span class="params">(L=[])</span>:</span> <span class="comment"># 默认参数指向[]，[]会变改变</span></span><br><span class="line">    L.append(<span class="string">'END'</span>)</span><br><span class="line">    <span class="keyword">return</span> L</span><br></pre></td></tr></table></figure></p>
<p>这里的默认参数<code>L</code>也是一个变量，指向对象<code>[]</code>，每次调用该参数，如果改变了<code>L</code>所指向对象的内容，则下次调用时，默认参数的内容就变了。上面函数多次执行<code>add_end()</code>（不传入参数）结果分别为：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">['<span class="operator"><span class="keyword">END</span><span class="string">']</span><br><span class="line">['</span><span class="keyword">END</span><span class="string">', '</span><span class="keyword">END</span><span class="string">']</span><br><span class="line">['</span><span class="keyword">END</span><span class="string">', '</span><span class="keyword">END</span><span class="string">', '</span><span class="keyword">END</span><span class="string">']</span><br><span class="line">....</span></span></span><br></pre></td></tr></table></figure></p>
<p>定义默认参数要牢记一点：默认参数必须指向不变对象！比如<code>None</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_end</span><span class="params">(L=None)</span>:</span> <span class="comment"># 默认参数指向None，None无法被改变</span></span><br><span class="line">    <span class="keyword">if</span> L <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        L = []</span><br><span class="line">    L.append(<span class="string">'END'</span>)</span><br><span class="line">    <span class="keyword">return</span> L</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="可变参数">可变参数</h4><p>允许传入0个或任意个参数，这些可变参数在函数调用时自动组装为一个tuple<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数前加*号即可，在函数内部，参数numbers接收到的是一个tuple</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(*numbers)</span>:</span></span><br><span class="line">    sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> numbers:</span><br><span class="line">        sum = sum + n * n</span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用时可以传入任意个参数</span></span><br><span class="line">calc()</span><br><span class="line">calc(<span class="number">1</span>)</span><br><span class="line">calc(<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把list或tuple的元素变成可变参数，也是加*号</span></span><br><span class="line">nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">calc(*nums)</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="关键字参数">关键字参数</h4><p>允许传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个dict。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 两个*号定义</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span><span class="params">(name, age, **kw)</span>:</span></span><br><span class="line">    print(<span class="string">'name:'</span>, name, <span class="string">'age:'</span>, age, <span class="string">'other:'</span>, kw)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用时可以只传入必选参数</span></span><br><span class="line">person(<span class="string">'Michael'</span>, <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以传入任意个数的关键字参数</span></span><br><span class="line">person(<span class="string">'Bob'</span>, <span class="number">35</span>, city=<span class="string">'Beijing'</span>)</span><br><span class="line">person(<span class="string">'Adam'</span>, <span class="number">45</span>, gender=<span class="string">'M'</span>, job=<span class="string">'Engineer'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以先组装出一个dict，然后，把该dict转换为关键字参数传进去</span></span><br><span class="line"><span class="comment"># kw获得的dict是extra的一份拷贝，对kw的改动不会影响到函数外的extra</span></span><br><span class="line">extra = &#123;<span class="string">'city'</span>: <span class="string">'Beijing'</span>, <span class="string">'job'</span>: <span class="string">'Engineer'</span>&#125;</span><br><span class="line">person(<span class="string">'Jack'</span>, <span class="number">24</span>, **extra)</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="命名关键字参数">命名关键字参数</h4><p>要限制关键字参数的名字，就可以用命名关键字参数。<br>命名关键字参数需要一个特殊分隔符<em>，</em>后面的参数被视为命名关键字参数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可以有默认值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span><span class="params">(name, age, *, city=<span class="string">'Beijing'</span>, job)</span>:</span></span><br><span class="line">    print(name, age, city, job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用时必须传入参数名，否则将报错。</span></span><br><span class="line"><span class="comment"># 和位置参数一样不能省略</span></span><br><span class="line">person(<span class="string">'Jack'</span>, <span class="number">24</span>, city=<span class="string">'Beijing'</span>, job=<span class="string">'Engineer'</span>)</span><br></pre></td></tr></table></figure></p>
<p><code>*</code>不是参数，而是特殊分隔符。如果缺少<code>*</code>，Python解释器将无法识别位置参数和命名关键字参数</p>
<hr>
<h4 id="参数组合">参数组合</h4><p>可以用必选参数、默认参数、可变参数、关键字参数和命名关键字参数，这5种参数都可以组合使用，除了可变参数无法和命名关键字参数混合。但是请注意，参数定义的顺序必须是：<strong>必选参数、默认参数、可变参数/命名关键字参数和关键字参数</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(a, b, c=<span class="number">0</span>, *args, **kw)</span>:</span></span><br><span class="line">    print(<span class="string">'a ='</span>, a, <span class="string">'b ='</span>, b, <span class="string">'c ='</span>, c, <span class="string">'args ='</span>, args, <span class="string">'kw ='</span>, kw)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">(a, b, c=<span class="number">0</span>, *, d, **kw)</span>:</span></span><br><span class="line">    print(<span class="string">'a ='</span>, a, <span class="string">'b ='</span>, b, <span class="string">'c ='</span>, c, <span class="string">'d ='</span>, d, <span class="string">'kw ='</span>, kw)</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用</span></span><br><span class="line">f1(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="comment"># a = 1 b = 2 c = 0 args = () kw = &#123;&#125;</span></span><br><span class="line"></span><br><span class="line">f1(<span class="number">1</span>, <span class="number">2</span>, c=<span class="number">3</span>)</span><br><span class="line"><span class="comment"># a = 1 b = 2 c = 3 args = () kw = &#123;&#125;</span></span><br><span class="line"></span><br><span class="line">f1(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'a'</span>, <span class="string">'b'</span>)</span><br><span class="line"><span class="comment"># a = 1 b = 2 c = 3 args = ('a', 'b') kw = &#123;&#125;</span></span><br><span class="line"></span><br><span class="line">f1(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, x=<span class="number">99</span>)</span><br><span class="line"><span class="comment"># a = 1 b = 2 c = 3 args = ('a', 'b') kw = &#123;'x': 99&#125;</span></span><br><span class="line"></span><br><span class="line">f2(<span class="number">1</span>, <span class="number">2</span>, d=<span class="number">99</span>, ext=<span class="keyword">None</span>)</span><br><span class="line"><span class="comment"># a = 1 b = 2 c = 0 d = 99 kw = &#123;'ext': None&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过一个tuple和dict，也可以调用上述函数</span></span><br><span class="line">args = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">kw = &#123;<span class="string">'d'</span>: <span class="number">99</span>, <span class="string">'x'</span>: <span class="string">'#'</span>&#125;</span><br><span class="line">f1(*args, **kw)</span><br><span class="line"><span class="comment"># a = 1 b = 2 c = 3 args = (4,) kw = &#123;'d': 99, 'x': '#'&#125;</span></span><br><span class="line"></span><br><span class="line">args = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">kw = &#123;<span class="string">'d'</span>: <span class="number">88</span>, <span class="string">'x'</span>: <span class="string">'#'</span>&#125;</span><br><span class="line">f2(*args, **kw)</span><br><span class="line"><span class="comment"># a = 1 b = 2 c = 3 d = 88 kw = &#123;'x': '#'&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>所以，对于任意函数，都可以通过类似func(<em>args, *</em>kw)的形式调用它，无论它的参数是如何定义的</p>
<hr>
<h3 id="递归函数">递归函数</h3><h4 id="尾递归">尾递归</h4><p>解决递归调用栈溢出的方法是通过尾递归优化，事实上尾递归和循环的效果是一样的，所以，把循环看成是一种特殊的尾递归函数也是可以的。</p>
<p>尾递归是指在函数返回的时候，调用自身本身，并且，return语句不能包含表达式。这样，编译器或者解释器就可以把尾递归做优化，使递归本身无论调用多少次，都只占用一个栈帧，不会出现栈溢出的情况。</p>
<p>遗憾的是，大多数编程语言没有针对尾递归做优化，Python解释器也没有做优化，所以，即使把上面的fact(n)函数改成尾递归方式，也会导致栈溢出<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 非尾递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> n * fact(n - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 尾递归：</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> fact_iter(n, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact_iter</span><span class="params">(num, product)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> product</span><br><span class="line">    <span class="keyword">return</span> fact_iter(num - <span class="number">1</span>, num * product)</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="循环与迭代Iteration">循环与迭代Iteration</h2><h3 id="for…in循环">for…in循环</h3><p>用于迭代<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    print(name)</span><br></pre></td></tr></table></figure></p>
<p>对list实现下标循环，<code>enumerate</code>函数可以把一个list变成索引-元素对：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i, value <span class="keyword">in</span> enumerate([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]):</span><br><span class="line">    print(i, value)</span><br></pre></td></tr></table></figure></p>
<h3 id="while循环">while循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sum = <span class="number">0</span></span><br><span class="line">n = <span class="number">99</span></span><br><span class="line"><span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">    sum = sum + n</span><br><span class="line">    n = n - <span class="number">2</span></span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="列表生成式">列表生成式</h2><p>List Comprehensions<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成[1x1, 2x2, 3x3, ..., 10x10]</span></span><br><span class="line">[x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加上判断，筛选出仅偶数的平方</span></span><br><span class="line">[x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用两层循环，生成全排列</span></span><br><span class="line">[m + n <span class="keyword">for</span> m <span class="keyword">in</span> <span class="string">'ABC'</span> <span class="keyword">for</span> n <span class="keyword">in</span> <span class="string">'XYZ'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用多个变量</span></span><br><span class="line">d = &#123;<span class="string">'x'</span>: <span class="string">'A'</span>, <span class="string">'y'</span>: <span class="string">'B'</span>, <span class="string">'z'</span>: <span class="string">'C'</span> &#125;</span><br><span class="line">[k + <span class="string">'='</span> + v <span class="keyword">for</span> k, v <span class="keyword">in</span> d.items()]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出当前目录下的所有文件和目录名</span></span><br><span class="line"><span class="keyword">import</span> os <span class="comment">#</span></span><br><span class="line">[d <span class="keyword">for</span> d <span class="keyword">in</span> os.listdir(<span class="string">'.'</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把一个list中所有的字符串变成小写：</span></span><br><span class="line">L = [<span class="string">'Hello'</span>, <span class="string">'World'</span>, <span class="string">'IBM'</span>, <span class="string">'Apple'</span>]</span><br><span class="line">[s.lower() <span class="keyword">for</span> s <span class="keyword">in</span> L]</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="生成器">生成器</h3><p>Python中，一边循环一边计算的机制，称为生成器generator。<br>generator保存的是算法，用到时才计算。<br>列表生成式在生成时已经全部计算好。</p>
<h4 id="第一种定义方法">第一种定义方法</h4><p>把一个列表生成式的[]改成()，就创建了一个generator<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">g = (x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过next()函数计算出generator的下一个值，没有更多的元素时，抛出StopIteration的错误。</span></span><br><span class="line">next(g)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以用于迭代，此时不需要next()</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> g</span><br></pre></td></tr></table></figure></p>
<h4 id="第二种定义方法">第二种定义方法</h4><p>如果一个函数定义中包含<code>yield</code>关键字，那么这个函数就不再是一个普通函数，而是一个generator</p>
<p>以斐波拉契数列为例：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(max)</span>:</span></span><br><span class="line">    n, a, b = <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; max:</span><br><span class="line">        print(b)</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'done'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 改成生成器</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(max)</span>:</span></span><br><span class="line">    n, a, b = <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; max:</span><br><span class="line">        <span class="keyword">yield</span> b</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'done'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个新的例子</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">odd</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'step 1'</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    print(<span class="string">'step 2'</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">3</span></span><br><span class="line">    print(<span class="string">'step 3'</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">5</span></span><br></pre></td></tr></table></figure></p>
<p>generator和函数的执行流程不一样。函数是顺序执行，遇到return语句或者最后一行函数语句就返回。而变成generator的函数，在每次调用<code>next()</code>的时候执行，遇到<code>yield</code>语句返回，再次执行时从上次返回的<code>yield</code>语句处继续执行。</p>
<p>用for循环调用这种generator时，发现拿不到generator的return语句的返回值。如果想要拿到返回值，必须捕获StopIteration错误，返回值包含在StopIteration的value中。接上例：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">g = fib(<span class="number">6</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        x = next(g)</span><br><span class="line">        print(<span class="string">'g:'</span>, x)</span><br><span class="line">    <span class="keyword">except</span> StopIteration <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'Generator return value:'</span>, e.value)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure></p>
<h3 id="迭代器">迭代器</h3><p>可以被next()函数调用并不断返回下一个值的对象称为迭代器。<br>可迭代对象Iterable有两类：<br>一类是集合数据类型，如list、tuple、dict、set、str等；<br>一类是generator。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断一个对象是不是可迭代对象，用for in循环迭代</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable</span><br><span class="line">isinstance(<span class="string">'abc'</span>, Iterable) <span class="comment"># True</span></span><br><span class="line">isinstance([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], Iterable) <span class="comment"># True</span></span><br><span class="line">isinstance(<span class="number">123</span>, Iterable) <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断一个对象是否是Iterator对象（迭代器，惰性序列），用next()返回下个值</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterator</span><br><span class="line">isinstance((x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)), Iterator)</span><br></pre></td></tr></table></figure>
<p>生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。可以使用iter()函数把它们变成迭代器<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iter(<span class="string">'abc'</span>)</span><br></pre></td></tr></table></figure></p>
<p><strong>为什么list、dict、str等数据类型不是Iterator？</strong><br>这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。</p>
<hr>
<h2 id="函数式编程">函数式编程</h2><p>Functional Programming<br>函数式编程就是一种抽象程度很高的编程范式，纯粹的函数式编程语言编写的函数没有变量，因此，任意一个函数，只要输入是确定的，输出就是确定的，这种纯函数我们称之为没有副作用。而允许使用变量的程序设计语言，由于函数内部的变量状态不确定，同样的输入，可能得到不同的输出，因此，这种函数是有副作用的。</p>
<p>函数式编程的一个特点就是，允许把函数本身作为参数传入另一个函数，还允许返回一个函数！</p>
<p>Python对函数式编程提供部分支持。由于Python允许使用变量，因此，Python不是纯函数式编程语言</p>
<hr>
<h3 id="高阶函数">高阶函数</h3><p>Higher-order function<br>变量可以指向函数，函数名就是指向函数的变量。对于abs()这个函数，完全可以把函数名abs看成变量，它指向一个可以计算绝对值的函数！<br>既然变量可以指向函数，函数的参数能接收变量，那么一个函数就可以接收另一个函数作为参数，这种函数就称之为<strong>高阶函数</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x, y, f)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> f(x) + f(y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line">add(-<span class="number">5</span>, <span class="number">6</span>, abs)</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="map()和reduce()">map()和reduce()</h4><p>Python内建了map()和reduce()函数<br>map()函数接收两个参数，一个是函数，一个是Iterable，map将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x * x</span><br><span class="line"></span><br><span class="line">r = map(f, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br><span class="line"><span class="comment"># r是一个Iterator，Iterator是惰性序列，因此通过list()函数让它把整个序列都计算出来并返回一个list</span></span><br><span class="line">list(r)</span><br><span class="line"><span class="comment"># 结果为[1, 4, 9, 16, 25, 36, 49, 64, 81]</span></span><br></pre></td></tr></table></figure></p>
<p>reduce函数的参数与map类似。它把一个函数作用在一个可迭代对象Iterable上，这个函数必须接收两个参数，reduce把结果继续和序列的下一个元素做累积计算。效果即：<code>reduce(f, [x1, x2, x3, x4]) = f(f(f(x1, x2), x3), x4)</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对一个序列求和，其实可以用sum()函数，这里仅用于说明reduce的用法</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line"></span><br><span class="line">reduce(add, [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]) <span class="comment"># 结果为25</span></span><br></pre></td></tr></table></figure></p>
<p>map与reduce一起使用，把str转换为int：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2int</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fn</span><span class="params">(x, y)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> x * <span class="number">10</span> + y</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">char2num</span><span class="params">(s)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">'0'</span>: <span class="number">0</span>, <span class="string">'1'</span>: <span class="number">1</span>, <span class="string">'2'</span>: <span class="number">2</span>, <span class="string">'3'</span>: <span class="number">3</span>, <span class="string">'4'</span>: <span class="number">4</span>, <span class="string">'5'</span>: <span class="number">5</span>, <span class="string">'6'</span>: <span class="number">6</span>, <span class="string">'7'</span>: <span class="number">7</span>, <span class="string">'8'</span>: <span class="number">8</span>, <span class="string">'9'</span>: <span class="number">9</span>&#125;[s]</span><br><span class="line">    <span class="keyword">return</span> reduce(fn, map(char2num, s))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 还可以用lambda函数进一步简化成</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">char2num</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">'0'</span>: <span class="number">0</span>, <span class="string">'1'</span>: <span class="number">1</span>, <span class="string">'2'</span>: <span class="number">2</span>, <span class="string">'3'</span>: <span class="number">3</span>, <span class="string">'4'</span>: <span class="number">4</span>, <span class="string">'5'</span>: <span class="number">5</span>, <span class="string">'6'</span>: <span class="number">6</span>, <span class="string">'7'</span>: <span class="number">7</span>, <span class="string">'8'</span>: <span class="number">8</span>, <span class="string">'9'</span>: <span class="number">9</span>&#125;[s]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2int</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> reduce(<span class="keyword">lambda</span> x, y: x * <span class="number">10</span> + y, map(char2num, s))</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="filter()">filter()</h4><p>Python内建的filter()函数用于过滤序列。<br>和map()类似，filter()也接收一个函数和一个序列。和map()不同的时，filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只保留奇数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_odd</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> n % <span class="number">2</span> == <span class="number">1</span></span><br><span class="line"></span><br><span class="line">result = filter(is_odd, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">15</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把一个序列中的空字符串删掉</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">not_empty</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> s <span class="keyword">and</span> s.strip()</span><br><span class="line"></span><br><span class="line">list(filter(not_empty, [<span class="string">'A'</span>, <span class="string">''</span>, <span class="string">'B'</span>, <span class="keyword">None</span>, <span class="string">'C'</span>, <span class="string">'  '</span>]))</span><br></pre></td></tr></table></figure></p>
<p>可见用filter()这个高阶函数，关键在于正确实现一个“筛选”函数。</p>
<p>eg：欧拉筛法找出素数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成器，从3开始的奇数序列</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_odd_iter</span><span class="params">()</span>:</span></span><br><span class="line">    n = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        n = n + <span class="number">2</span></span><br><span class="line">        <span class="keyword">yield</span> n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 筛选函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_not_divisible</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">lambda</span> x: x % n &gt; <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成器，不断返回下一个素数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">primes</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">    it = _odd_iter() <span class="comment"># 初始序列</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        n = next(it) <span class="comment"># 返回序列的第一个数</span></span><br><span class="line">        <span class="keyword">yield</span> n</span><br><span class="line">        it = filter(_not_divisible(n), it) <span class="comment"># 构造新序列</span></span><br></pre></td></tr></table></figure></p>
<p>Iterator是惰性计算的序列，所以我们可以用Python表示“全体自然数”，“全体素数”这样的序列，而代码非常简洁。</p>
<hr>
<h4 id="sorted()">sorted()</h4><p>sorted()函数就可以对list进行排序<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sorted([<span class="number">36</span>, <span class="number">5</span>, -<span class="number">12</span>, <span class="number">9</span>, -<span class="number">21</span>])</span><br></pre></td></tr></table></figure></p>
<p>sorted()函数也是一个高阶函数：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 传入key函数来实现自定义的排序</span></span><br><span class="line">sorted([<span class="number">36</span>, <span class="number">5</span>, -<span class="number">12</span>, <span class="number">9</span>, -<span class="number">21</span>], key=abs)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 传入reverse=True可以反向排序</span></span><br><span class="line">sorted([<span class="string">'bob'</span>, <span class="string">'about'</span>, <span class="string">'Zoo'</span>, <span class="string">'Credit'</span>], key=str.lower, reverse=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="返回函数">返回函数</h3><p>高阶函数除了可以接受函数作为参数外，还可以把函数作为结果值返回<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 返回求和函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lazy_sum</span><span class="params">(*args)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sum</span><span class="params">()</span>:</span></span><br><span class="line">        ax = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> args:</span><br><span class="line">            ax = ax + n</span><br><span class="line">        <span class="keyword">return</span> ax</span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line">f = lazy_sum(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>)</span><br><span class="line">f()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每次调用都会返回一个新的函数</span></span><br><span class="line">f1 = lazy_sum(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>)</span><br><span class="line">f2 = lazy_sum(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>)</span><br><span class="line">f1==f2 <span class="comment"># False</span></span><br></pre></td></tr></table></figure></p>
<p>函数lazy_sum中又定义了函数sum，并且，内部函数sum可以引用外部函数lazy_sum的参数和局部变量，当lazy_sum返回函数sum时，相关参数和变量都保存在返回的函数中，这种称为“闭包（Closure）”的程序结构拥有极大的威力。</p>
<p><strong><em>闭包的注意点</em></strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count</span><span class="params">()</span>:</span></span><br><span class="line">    fs = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">4</span>):</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">()</span>:</span></span><br><span class="line">             <span class="keyword">return</span> i*i</span><br><span class="line">        fs.append(f)</span><br><span class="line">    <span class="keyword">return</span> fs</span><br><span class="line"></span><br><span class="line">f1, f2, f3 = count() <span class="comment"># 三个函数执行结果都是9</span></span><br><span class="line"><span class="comment"># 原因就在于返回的函数引用了变量i，但它并非立刻执行。等到3个函数都返回时，它们所引用的变量i已经变成了3，因此最终结果为9</span></span><br></pre></td></tr></table></figure></p>
<p>返回闭包时牢记的一点就是：<strong>返回函数不要引用任何循环变量，或者后续会发生变化的变量</strong></p>
<p>如果一定要引用循环变量怎么办？方法是再创建一个函数，用该函数的参数绑定循环变量当前的值，无论该循环变量后续如何更改，已绑定到函数参数的值不变：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(j)</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">g</span><span class="params">()</span>:</span></span><br><span class="line">            <span class="keyword">return</span> j*j</span><br><span class="line">        <span class="keyword">return</span> g</span><br><span class="line">    fs = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">4</span>):</span><br><span class="line">        fs.append(f(i)) <span class="comment"># f(i)立刻被执行，因此i的当前值被传入f()</span></span><br><span class="line">    <span class="keyword">return</span> fs</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="匿名函数">匿名函数</h3><p>Python对匿名函数提供了有限支持<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#计算f(x)=x的平方，直接传入匿名函数：</span></span><br><span class="line">map(<span class="keyword">lambda</span> x: x * x, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br></pre></td></tr></table></figure></p>
<p>关键字lambda表示匿名函数，冒号前面的x表示函数参数<br>匿名函数也是一个函数对象，也可以把匿名函数赋值给一个变量，也可以把匿名函数作为返回值返回。</p>
<hr>
<h3 id="装饰器">装饰器</h3><p>本质上，decorator就是一个返回函数的高阶函数。<br>eg：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">now</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'2015-3-25'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个装饰器decorator</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span>:</span></span><br><span class="line">        print(<span class="string">'call %s():'</span> % func.__name__)</span><br><span class="line">        <span class="keyword">return</span> func(*args, **kw)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="comment"># 借助Python的@语法，把decorator置于函数的定义处</span></span><br><span class="line"><span class="comment"># 相当于执行了语句：now = log(now)</span></span><br><span class="line"><span class="decorator">@log</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">now</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'2015-3-25'</span>)</span><br></pre></td></tr></table></figure></p>
<p>如果decorator本身需要传入参数，那就需要编写一个返回decorator的高阶函数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义装饰器</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorator</span><span class="params">(func)</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span>:</span></span><br><span class="line">            print(<span class="string">'%s %s():'</span> % (text, func.__name__))</span><br><span class="line">            <span class="keyword">return</span> func(*args, **kw)</span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line">    <span class="keyword">return</span> decorator</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给原函数加上装饰器</span></span><br><span class="line"><span class="comment"># @语句相当于 now = log('execute')(now)，两层括号，第一对括号返回装饰器，第二对括号使用装饰器进行包装</span></span><br><span class="line"><span class="decorator">@log('execute')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">now</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'2015-3-25'</span>)</span><br></pre></td></tr></table></figure></p>
<p><strong>仍然存在问题</strong><br>经过decorator装饰之后的函数，它们的<strong>name</strong>已经从原来的’now’变成了’wrapper’<br>一个完整的decorator的写法如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不带参数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(func)</span>:</span></span><br><span class="line"><span class="decorator">    @functools.wraps(func)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span>:</span></span><br><span class="line">        print(<span class="string">'call %s():'</span> % func.__name__)</span><br><span class="line">        <span class="keyword">return</span> func(*args, **kw)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="comment"># 带参数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorator</span><span class="params">(func)</span>:</span></span><br><span class="line"><span class="decorator">        @functools.wraps(func)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span>:</span></span><br><span class="line">            print(<span class="string">'%s %s():'</span> % (text, func.__name__))</span><br><span class="line">            <span class="keyword">return</span> func(*args, **kw)</span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line">    <span class="keyword">return</span> decorator</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="偏函数">偏函数</h3><p>偏函数Partial function，和数学意义上的偏函数不一样，用于设定参数的默认值（仍然可以传入其他值）。<br>创建偏函数：<code>new_func = functools.partial(func,*args,**kw)</code><br>eg：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 转换二进制，自定义函数的方法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">int2</span><span class="params">(x, base=<span class="number">2</span>)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> int(x, base)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换二进制，创建偏函数</span></span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line">int2 = functools.partial(int, base=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># 上述代码实际上固定了int()函数的关键字参数base，相当于：</span></span><br><span class="line">kw = &#123; <span class="string">'base'</span>: <span class="number">2</span> &#125;</span><br><span class="line">int(<span class="string">'10010'</span>, **kw)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果传入单个值，如</span></span><br><span class="line">max2 = functools.partial(max, <span class="number">10</span>)</span><br><span class="line"><span class="comment"># 实际上会把10作为*args的一部分自动加到左边，也就是：</span></span><br><span class="line">max2(<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>)</span><br><span class="line"><span class="comment"># 相当于：</span></span><br><span class="line">args = (<span class="number">10</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>)</span><br><span class="line">max(*args)</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="字符串">字符串</h2><p>Python 3，所有的字符串都是使用Unicode编码的字符序列。不再存在以UTF-8或者CP-1252编码的情况。</p>
<hr>
<h3 id="前缀">前缀</h3><p>以r或R开头(代表raw)的python中的字符串表示（非转义的）原始字符串<br>以u或U开头的字符串表示unicode字符串<br>以b或B开头的字符串字节形式表示的字符串bytes</p>
<hr>
<h3 id="切片">切片</h3><p>字符串’xxx’也可以看成是一种list，每个元素就是一个字符。因此，字符串也可以用切片操作，只是操作结果仍是字符串<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'ABCDEFG'</span>[::<span class="number">2</span>] <span class="comment"># 'ACEG'</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="编码">编码</h3><p>详见<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431664106267f12e9bef7ee14cf6a8776a479bdec9b9000" target="_blank" rel="external">字符串和编码</a></p>
<p>计算机系统通用的字符编码工作方式：</p>
<ul>
<li>在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。</li>
<li>用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，编辑完成后，保存的时候再把Unicode转换为UTF-8保存到文件</li>
<li>浏览网页的时候，服务器会把动态生成的Unicode内容转换为UTF-8再传输到浏览器</li>
</ul>
<p>为了避免乱码问题，应当始终坚持使用<code>UTF-8</code>编码对<code>str</code>和<code>bytes</code>进行转换</p>
<h4 id="编码与解码单个字符">编码与解码单个字符</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字符转整数编码</span></span><br><span class="line">ord(<span class="string">'A'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编码转字符</span></span><br><span class="line">chr(<span class="number">65</span>)</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="编码与解码字符串">编码与解码字符串</h4><p>Python的字符串类型是<code>str</code>，在内存中以Unicode表示，一个字符对应若干个字节。如果要在网络上传输，或者保存到磁盘上，就需要把str变为以字节为单位的bytes。<br>反之，如果从网络或磁盘上读取了字节流，那么读到的数据就是bytes。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># str转bytes</span></span><br><span class="line"><span class="comment"># python3中，str没有decode方法</span></span><br><span class="line"><span class="string">'ABC'</span>.encode(<span class="string">'ascii'</span>) <span class="comment"># b'ABC'</span></span><br><span class="line"><span class="string">'中文'</span>.encode(<span class="string">'utf-8'</span>) <span class="comment"># b'\xe4\xb8\xad\xe6\x96\x87'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bytes转str</span></span><br><span class="line"><span class="string">b'\xe4\xb8\xad\xe6\x96\x87'</span>.decode(<span class="string">'utf-8'</span>)</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="保存Python源代码">保存Python源代码</h4><p>Python源代码也是一个文本文件，所以，当你的源代码中包含中文的时候，在保存源代码时，就需要务必指定保存为UTF-8编码。当Python解释器读取源代码时，为了让它按UTF-8编码读取，我们通常在文件开头写上这两行：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br></pre></td></tr></table></figure></p>
<p>第一行注释是为了告诉Linux/OS X系统，这是一个Python可执行程序，Windows系统会忽略这个注释；</p>
<p>第二行注释是为了告诉Python解释器，按照UTF-8编码读取源代码，否则，你在源代码中写的中文输出可能会有乱码。</p>
<hr>
<h3 id="字符串长度_len()">字符串长度 len()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># str统计字符个数</span></span><br><span class="line">len(<span class="string">'中国'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># bytes统计字节数</span></span><br><span class="line">len(<span class="string">b'\xe4\xb8\xad\xe6\x96\x87'</span>)</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="占位符">占位符</h3><p>常见占位符<br>|占位符|数据类型|<br>|–|–|<br>|%d |整数|<br>|%f|浮点数|<br>|%s|字符串|<br>|%x|十六进制整数|</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式化整数和浮点数可以指定是否补0和整数与小数的位数</span></span><br><span class="line">print(<span class="string">'%2d-%02d'</span> % (<span class="number">3</span>, <span class="number">1</span>)) <span class="comment"># '3-01'</span></span><br><span class="line">print(<span class="string">'%.2f'</span> % <span class="number">3.1415926</span>) <span class="comment"># '3.14'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %s永远起作用，它会把任何数据类型转换为字符串</span></span><br><span class="line"><span class="comment"># 用%%来表示一个%</span></span><br><span class="line">print(<span class="string">'growth rate: %d %%'</span> % <span class="number">7</span>) <span class="comment"># 'growth rate: 7 %'</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="格式化字符串">格式化字符串</h3><h4 id="文档字符串">文档字符串</h4><p>文档字符串(docstring)也是字符串。当前的文档字符串占用了多行，所以它使用了相邻的3个引号来标记字符串的起始和终止<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''Convert a file size to human-readable form.</span><br><span class="line">  Keyword arguments:</span><br><span class="line">  size -- file size in bytes</span><br><span class="line">  a_kilobyte_is_1024_bytes -- if True (default), use multiples of 1024</span><br><span class="line">                              if False, use multiples of 1000</span><br><span class="line"></span><br><span class="line">  Returns: string</span><br><span class="line">  '''</span></span><br></pre></td></tr></table></figure></p>
<h4 id="复合字段名">复合字段名</h4><p>Python 3支持把值格式化(format)成字符串。可以有非常复杂的表达式，最基本的用法是使用单个占位符(placeholder)将一个值插入字符串。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="prompt">&gt;&gt;&gt; </span>username = <span class="string">'mark'</span></span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span>password = <span class="string">'PapayaWhip'</span></span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span><span class="string">"&#123;0&#125;'s password is &#123;1&#125;"</span>.format(username, password)</span><br><span class="line"><span class="string">"mark's password is PapayaWhip"</span></span><br></pre></td></tr></table></figure></p>
<p>整型替换字段被当做传给format()方法的参数列表的位置索引。即，{0}会被第一个参数替换（在此例中即username），{1}被第二个参数替换（password）</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="prompt">&gt;&gt;&gt; </span>si_suffixes = [<span class="string">'KB'</span>, <span class="string">'MB'</span>, <span class="string">'GB'</span>, <span class="string">'TB'</span>, <span class="string">'PB'</span>, <span class="string">'EB'</span>, <span class="string">'ZB'</span>, <span class="string">'YB'</span>]</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span><span class="string">'1000&#123;0[0]&#125; = 1&#123;0[1]&#125;'</span>.format(si_suffixes)</span><br><span class="line"><span class="string">'1000KB = 1MB'</span></span><br></pre></td></tr></table></figure>
<p>{0}代表传递给format()方法的第一个参数，即si_suffixes。注意si_suffixes是一个列表。所以{0[0]}指代si_suffixes的第一个元素，即’KB’。同时，{0[1]}指代该列表的第二个元素，即：’MB’。大括号以外的内容 — 包括1000，等号，还有空格等 — 则按原样输出。语句最后返回字符串为’1000KB = 1MB’。</p>
<p>这个例子说明格式说明符可以通过利用（类似）Python的语法访问到对象的元素或属性。这就叫做复合字段名(compound field names)。以下复合字段名都是“有效的”。</p>
<blockquote>
<ul>
<li>使用列表作为参数，并且通过下标索引来访问其元素（跟上一例类似）</li>
<li>使用字典作为参数，并且通过键来访问其值</li>
<li>使用模块作为参数，并且通过名字来访问其变量及函数</li>
<li>使用类的实例作为参数，并且通过名字来访问其方法和属性</li>
</ul>
</blockquote>
<p>以上方法的任意组合</p>
<p>为了使你确信的确如此，下面这个样例就组合使用了上面所有方法：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="prompt">&gt;&gt;&gt; </span><span class="keyword">import</span> humansize</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="prompt">&gt;&gt;&gt; </span><span class="string">'1MB = 1000&#123;0.modules[humansize].SUFFIXES[1000][0]&#125;'</span>.format(sys)</span><br><span class="line"><span class="string">'1MB = 1000KB'</span></span><br></pre></td></tr></table></figure></p>
<p>下面是描述它如何工作的：</p>
<p><code>sys</code>模块保存了当前正在运行的Python实例的信息。由于已经导入了这个模块，因此可以将其作为<code>format()</code>方法的参数。所以替换域<code>{0}</code>指代<code>sys</code>模块。</p>
<p><code>sys.modules</code>是一个保存当前Python实例中所有已经导入模块的字典。模块的名字作为字典的键；模块自身则是键所对应的值。所以<code>{0.modules}</code>指代保存当前己被导入模块的字典。</p>
<p>替换域{0.modules[humansize]}指代humansize模块。</p>
<p>请注意以上两句在语法上轻微的不同。在实际的Python代码中，字典sys.modules的键是字符串类型的；为了引用它们，我们需要在模块名周围放上引号（比如 ‘humansize’）。但是在<strong>使用替换域的时候，我们在省略了字典的键名周围的引号</strong>（比如 humansize）。在此，我们引用PEP 3101：字符串格式化高级用法，“解析键名的规则非常简单。如果名字以数字开头，则它被当作数字使用，其他情况则被认为是字符串。”</p>
<p>sys.modules[‘humansize’].SUFFIXES是在humansize模块的开头定义的一个字典对象。{0.modules[humansize].SUFFIXES}即指向该字典。</p>
<p>sys.modules[‘humansize’].SUFFIXES[1000]是一个si（国际单位制）后缀列表：[‘KB’, ‘MB’, ‘GB’, ‘TB’, ‘PB’, ‘EB’, ‘ZB’, ‘YB’]。所以替换域{0.modules[humansize].SUFFIXES[1000]}指向该列表。</p>
<p>sys.modules[‘humansize’].SUFFIXES[1000][0]即si后缀列表的第一个元素：’KB’。因此，整个替换域{0.modules[humansize].SUFFIXES[1000][0]}最后都被两个字符KB替换。</p>
<hr>
<h4 id="格式说明符">格式说明符</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> size &lt; multiple:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&#123;0:.1f&#125; &#123;1&#125;'</span>.format(size, suffix)</span><br></pre></td></tr></table></figure>
<p>{0:.1f}中的:.1f则不一定了。第二部分（包括冒号及其后边的部分）即格式说明符(format specifier)，它进一步定义了被替换的变量应该如何被格式化。</p>
<p>☞格式说明符的允许你使用各种各种实用的方法来修饰被替换的文本，就像C语言中的printf()函数一样。我们可以添加使用零填充(zero-padding)，衬距(space-padding)，对齐字符串(align strings)，控制10进制数输出精度，甚至将数字转换成16进制数输出。</p>
<p>在替换域中，冒号(:)标示格式说明符的开始。“.1”的意思是四舍五入到保留一们小数点。“f”的意思是定点数（与指数标记法或者其他10进制数表示方法相对应）。因此，如果给定size为698.24，suffix为’GB’，那么格式化后的字符串将是’698.2 GB’，因为698.24被四舍五入到一位小数表示，然后后缀’GB’再被追加到这个串最后。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; <span class="string">'&#123;0:.1f&#125; &#123;1&#125;'</span>.<span class="function"><span class="title">format</span><span class="params">(<span class="number">698.24</span>, <span class="string">'GB'</span>)</span></span></span><br><span class="line"><span class="string">'698.2 GB'</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="模块与包">模块与包</h2><p>模块（Module）：一个.py文件<br>包（package）：一个目录<br>相同名字的函数和变量完全可以分别存在不同的模块中，但是尽量不要与内置函数名字冲突。<br><a href="https://docs.python.org/3/library/functions.html" target="_blank" rel="external">Python的所有内置函数</a></p>
<p>每一个包目录下面都会有一个<code>__init__.py</code>的文件，这个文件是必须存在的，否则，Python就把这个目录当成普通目录，而不是一个包。<code>__init__.py</code>可以是空文件，也可以有Python代码。无论一个包的哪个部分被导入,</p>
<p>import os<br>系统在导入模块时，要做以下三件事：<br>1.为源代码文件中定义的对象创建一个名字空间，通过这个名字空间可以访问到模块中定义的函数及变量。<br>2.在新创建的名字空间里执行源代码文件.<br>3.创建一个名为源代码文件的对象，该对象引用模块的名字空间，这样就可以通过这个对象访问模块中的函数及变量</p>
<p>import os as system<br>模块导入时可以使用 as 关键字来改变模块的引用对象名字。</p>
<p>from socket import gethostname<br>使用from语句可以将模块中的对象直接导入到当前的名字空间。 from语句不创建一个到模块名字空间的引用对象，而是把被导入模块的一个或多个对象直接放入当前的名字空间。可以使用星号<em>代表模块中除下划线开头的所有对象。不过，如果一个模块如果定义有列表<code>__all__</code>，则from module import </em> 语句只能导入<code>__all__</code>列表中存在的对象。</p>
<p>import 语句可以在程序的任何位置使用，你可以在程序中多次导入同一个模块，但模块中的代码<em>仅仅</em>在该模块被首次导入时执行。后面的import语句只是简单的创建一个到模块名字空间的引用而已。sys.modules字典中保存着所有被导入模块的模块名到模块对象的映射。这个字典用来决定是否需要使用import语句来导入一个模块的最新拷贝。<br>from module import <em> 语句只能用于一个模块的最顶层。</em>特别注意*：由于存在作用域冲突，不允许在函数中使用from 语句。</p>
<p>每个模块都拥有<code>__name__</code>属性，它是一个内容为模块名字的字符串。最顶层的模块名称是<code>__main__</code>。命令行或是交互模式下程序都运行在<code>__main__</code>模块内部。利用<code>__name__</code>属性，我们可以让同一个程序在不同的场合（单独执行或被导入)具有不同的行为，象下面这样做：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查是单独执行还是被导入</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">      <span class="comment"># Yes</span></span><br><span class="line">      statements</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">      <span class="comment"># No (可能被作为模块导入)</span></span><br><span class="line">      statements</span><br></pre></td></tr></table></figure></p>
<p>可以被 import 语句导入的模块共有以下四类:</p>
<ul>
<li>使用Python写的程序( .py文件)</li>
<li>C或C++扩展(已编译为共享库或DLL文件)</li>
<li>包(包含多个模块)</li>
<li>内建模块(使用C编写并已链接到Python解释器内)</li>
</ul>
<p>当查询模块 foo 时,解释器按照 sys.path 列表中目录顺序来查找以下文件(目录也是文件的一种):<br>1.定义为一个包的目录 foo<br>2.foo.so, foomodule.so, foomodule.sl,或 foomodule.dll (已编译扩展)<br>3.foo.pyo (只在使用 -O 或 -OO 选项时)<br>4.foo.pyc<br>5.foo.py</p>
<p>对于.py文件，当一个模块第一次被导入时，它就被汇编为字节代码，并将字节码写入一个同名的.pyc文件。后来的导入操作会直接读取.pyc文件而不是.py文件。(除非.py文件的修改日期更新，这种情况会重新生成.pyc文件) 在解释器使用 -O 选项时，扩展名为.pyo的同名文件被使用。pyo文件的内容去掉行号、断言、及其他调试信息的字节码，体积更小，运行速度更快。如果使用-OO选项代替-O，则文档字符串也会在创建.pyo文件时也被忽略。</p>
<p>如果在sys.path提供的所有路径均查找失败，解释器会继续在内建模块中寻找，如果再次失败，则引发 ImportError 异常。</p>
<p>.pyc和.pyo文件的汇编，当且仅当import 语句执行时进行。</p>
<p>当 import 语句搜索文件时，文件名是大小写敏感的。即使在文件系统大小写不敏感的系统上也是如此(Windows等)。</p>
<p>reload(sys)<br>如果更新了一个已经用import语句导入的模块，内建函数reload()可以重新导入并运行更新后的模块代码。在reload()运行之后的针对模块的操作都会使用新导入代码，不过reload()并不会更新使用旧模块创建的对象，因此有可能出现新旧版本对象共存的情况。<br><em>注意</em> 使用C或C++编译的模块不能通过 reload() 函数来重新导入。记住一个原则，除非是在调试和开发过程中，否则不要使用reload()函数。</p>
<p>无论一个包的哪个部分被导入，在文件<code>__init__.py</code>中的代码都会运行。导入过程遇到的所有 <code>__init__.py</code>文件都被运行。</p>
<p>from Graphics.Primitive import *<br>这个语句的原意图是想将Graphics.Primitive包下的所有模块导入到当前的名称空间。然而，由于不同平台间文件名规则不同(比如大小写敏感问题), Python不能正确判定哪些模块要被导入。这个语句只会顺序运行 Graphics 和 Primitive 文件夹下的<code>__init__.py</code>文件。<code>__init__.py</code>中定义一个名字all的列表。<br>这和导入模块不同，类似语句可以正常导入模块下的所有函数。</p>
<p>下面这个语句只会执行Graphics目录下的<code>__init__.py</code>文件，而不会导入任何模块: import Graphics。不过既然 import Graphics 语句会运行 Graphics 目录下的 <code>__init__.py</code>文件，只需要在其中把所有模块都import进去就行了。</p>
<p>sys.modules包含了当前所load的所有的modules的dict（其中包含了builtin的modules）</p>
<p>Python模块的标准文件模板：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="string">'模块的文档注释，任何模块代码的第一个字符串都被视为模块的文档注释 '</span></span><br><span class="line"></span><br><span class="line">__author__ = <span class="string">'作者名'</span></span><br></pre></td></tr></table></figure></p>
<p>通过<code>_</code>前缀定义作用域：</p>
<blockquote>
<ul>
<li>正常的函数和变量名是公开的（public），可以被直接引用。</li>
<li><code>__xxx__</code>：特殊变量，可以被直接引用，但是有特殊用途。模块定义的文档注释也可以用特殊变量<code>__doc__</code>访问，我们自己的变量一般不要用这种变量名</li>
<li><code>_xxx</code>和<code>__xxx</code>：非公开（private），只是一个命名习惯，外部仍然可以访问</li>
</ul>
</blockquote>
<p>Python并没有一种方法可以完全限制访问private函数或变量，但是，从编程习惯上不应该引用private函数或变量。</p>
<hr>
<h3 id="安装第三方模块">安装第三方模块</h3><p>安装Python时确保勾选<code>pip</code>和<code>Add python.exe to Path</code>。<br>一般来说，第三方库都会在Python官方的pypi.python.org网站注册，要安装一个第三方库，必须先知道该库的名称，可以在官网或者pypi上搜索。</p>
<p>以安装<code>Python Imaging Library</code>为例，这是Python下非常强大的处理图像的工具库。<br>运行命令：<code>pip install Pillow</code>即可。<br>简单用法：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">im = Image.open(<span class="string">"d:\\backup\\140591\\桌面\\首页图片\\11.jpg"</span>)</span><br><span class="line">print(im.format, im.size, im.mode)</span><br><span class="line">im.thumbnail((<span class="number">200</span>, <span class="number">100</span>)) <span class="comment"># 缩小图片</span></span><br><span class="line">im.save(<span class="string">'22.jpg'</span>, <span class="string">'JPEG'</span>) <span class="comment"># 保存</span></span><br></pre></td></tr></table></figure></p>
<p>其他常用的第三方库还有MySQL的驱动：<code>mysql-connector-python</code>，用于科学计算的NumPy库：<code>numpy</code>，用于生成文本的模板工具<code>Jinja2</code>，等等。</p>
<p>当我们试图加载一个模块时，Python会在指定的路径下搜索对应的.py文件。默认情况下，Python解释器会搜索当前目录、所有已安装的内置模块和第三方模块，搜索路径存放在sys模块的path变量中。</p>
<p>要添加自己的搜索目录，有两种方法：</p>
<blockquote>
<ol>
<li>直接修改sys.path，添加要搜索的目录：<code>sys.path.append(&#39;/Users/michael/my_py_scripts&#39;)</code>。这种方法是在运行时修改，运行结束后失效。</li>
<li>设置环境变量<code>PYTHONPATH</code>。</li>
</ol>
</blockquote>
<hr>
<h3 id="sys">sys</h3><p>sys模块有一个argv变量，用list存储了命令行的所有参数。argv至少有一个元素，因为第一个参数永远是该.py文件的名称。<br>运行<code>python3 hello.py</code>获得的<code>sys.argv</code>就是<code>[&#39;hello.py&#39;]</code>。<br>在命令行直接运行一个模块文件时，Python解释器把一个特殊变量<code>__name__</code>置为`<strong>main</strong>`，注意带了引号。如果是import一个模块，则此变量值为模块文件名，不带路径或扩展名。</p>
<hr>
<h2 id="面向对象编程">面向对象编程</h2><p>Object Oriented Programming，简称OOP。</p>
<h3 id="类和实例">类和实例</h3><p>面向对象最重要的概念就是类（Class）和实例（Instance），必须牢记类是抽象的模板，而实例是根据类创建出来的一个个具体的“对象”，每个对象都拥有相同的方法，但各自的数据可能不同。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># 限制该class实例在运行期间能添加的属性，可选。对子类无效</span></span><br><span class="line">    __slots__ = (<span class="string">'name'</span>, <span class="string">'age'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 此处定义类属性</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># __init__方法的第一个参数永远是self，表示创建的实例本身</span></span><br><span class="line">    <span class="comment"># 此处定义实例属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, score)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.score = score</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使此class可以适用于系统的len()函数，len('king')，len(obj)...可选</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__len__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 自己实现</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 类似Java的toString方法，打印对象时调用。可选。</span></span><br><span class="line">    <span class="comment"># 返回用户看到的字符串</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Student object (name: %s)'</span> % self.name</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 在解释器中直接输变量，会调用此__repr__()方法。可选</span></span><br><span class="line">    <span class="comment"># 返回程序开发者看到的字符串，此处是偷懒的写法，使两者一样。</span></span><br><span class="line">    __repr__ = __str__</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使此类的对象可以被用于for ... in循环。可选</span></span><br><span class="line">    <span class="comment"># 返回一个迭代对象，该迭代对象必须实现__next__()方法，迭代结束时raise StopIteration()</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 自定义实现</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使此类的对象可以像list那样按照下标取出元素，可选。</span></span><br><span class="line">    <span class="comment"># 如果把对象看成dict，__getitem__()的参数也可能是一个可以作key的object，此处未实现</span></span><br><span class="line">    <span class="comment"># 与此对应的是__setitem__()方法，把对象视作list或dict来对集合赋值；__delitem__()方法，删除某个元素</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(n, int): <span class="comment"># n是索引</span></span><br><span class="line">            <span class="comment"># 取出对象...</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(n, slice): <span class="comment"># n是切片，slice表示切片对象</span></span><br><span class="line">            start = n.start</span><br><span class="line">            stop = n.stop</span><br><span class="line">            <span class="keyword">if</span> start <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">                start = <span class="number">0</span></span><br><span class="line">            <span class="comment"># 取出list...注意要对负数、步长参数作处理</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 调用的属性或方法在类中不存在时，会在此处找，可选。</span></span><br><span class="line">    <span class="comment"># 默认返回None</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span><span class="params">(self, attr)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> attr==<span class="string">'sex'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'man'</span> <span class="comment"># 返回属性</span></span><br><span class="line">        <span class="keyword">if</span> attr==<span class="string">'hisage'</span>: <span class="comment"># 仅作示范，不用在意名字</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">lambda</span>: <span class="number">25</span> <span class="comment"># 返回函数</span></span><br><span class="line">        <span class="keyword">raise</span> AttributeError(<span class="string">'自定义错误信息'</span>) <span class="comment"># 抛出Error，不再返回默认的None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 直接把实例当成方法用，可选。</span></span><br><span class="line">    <span class="comment"># 一般用instance.method()的形式调用方法，但是定义了此方法后，可以用instance()，如：Student('Michael')()。</span></span><br><span class="line">    <span class="comment"># 可添加参数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'My name is %s.'</span> % self.name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 其他方法也和__init__类似</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_score</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'%s: %s'</span> % (self.__name, self.__score))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># @property装饰器把一个getter方法变成属性</span></span><br><span class="line">    <span class="comment"># 此处@property又创建了另一个装饰器@score.setter</span></span><br><span class="line"><span class="decorator">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._score</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果不设置此set方法，则为只读属性</span></span><br><span class="line"><span class="decorator">    @score.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> isinstance(value, int):</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">'score must be an integer!'</span>)</span><br><span class="line">        <span class="keyword">if</span> value &lt; <span class="number">0</span> <span class="keyword">or</span> value &gt; <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">'score must between 0 ~ 100!'</span>)</span><br><span class="line">        self._score = value</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################---使用----#############</span></span><br><span class="line"><span class="comment"># 创建实例</span></span><br><span class="line">s = Student(<span class="string">'Bart Simpson'</span>, <span class="number">59</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># score属性的set与get</span></span><br><span class="line">s.score = <span class="number">60</span> <span class="comment"># 实际转化为s.set_score(60)</span></span><br><span class="line">s.score <span class="comment"># 实际转化为s.get_score()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绑定属性。对象名改成Class名即可对Class绑定</span></span><br><span class="line">s.age = <span class="number">8</span> <span class="comment"># 注意class中并没有定义age变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除属性</span></span><br><span class="line"><span class="keyword">del</span> s.name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绑定方法，注意区别。对象名改成Class名即可对Class绑定</span></span><br><span class="line"><span class="comment"># 第一种方法：</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nono</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'nono'</span>)</span><br><span class="line">s.nono = nono</span><br><span class="line">s.nono()</span><br><span class="line"><span class="comment"># 第二种方法：</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nono</span><span class="params">(self)</span>:</span></span><br><span class="line">    print(<span class="string">'nono'</span>)</span><br><span class="line"><span class="keyword">from</span> types <span class="keyword">import</span> MethodType</span><br><span class="line">s.nono = MethodType(nono, bart)</span><br><span class="line">s.nono()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 例外：slots只能限制添加属性，不能限制通过添加方法来添加属性：</span></span><br><span class="line"><span class="comment"># 绑定下面的方法即可绕过slots限制</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_city</span><span class="params">(self, city)</span>:</span></span><br><span class="line">    self.city=city</span><br></pre></td></tr></table></figure></p>
<p>class后面紧接着是类名，即Student，类名通常是大写开头的单词，紧接着是(object)，表示该类是从哪个类继承下来的。通常，如果没有合适的继承类，就使用object类，这是所有类最终都会继承的类。<br>有了<code>__init__</code>方法，在创建实例的时候，必须传入与<code>__init__</code>方法匹配的参数，但self不需要传，Python解释器自己会把实例变量传进去。</p>
<p>重点提一下<code>__getattr__</code>动态调用的用法。例如很多网站都搞REST API，比如新浪微博、豆瓣啥的，调用API的URL类似<code>http://api.server/user/timeline/list</code>。如果要写SDK，给每个URL对应的API都写一个方法，那得累死，而且，API一旦改动，SDK也要改。利用完全动态的<code>__getattr__</code>，我们可以写出一个链式调用：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chain</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, path=<span class="string">''</span>)</span>:</span></span><br><span class="line">        self._path = path</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span><span class="params">(self, path)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> Chain(<span class="string">'%s/%s'</span> % (self._path, path))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._path</span><br><span class="line"></span><br><span class="line">    __repr__ = __str__</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line">Chain().status.user.timeline.list</span><br><span class="line"><span class="comment"># 结果为：'/status/user/timeline/list'</span></span><br></pre></td></tr></table></figure></p>
<p><code>__call__()</code>使得我们对实例进行直接调用就好比对一个函数进行调用一样，这么一来，我们就模糊了对象和函数的界限。能被调用的对象（也就是可以当成一个函数使用）就是一个<code>Callable</code>对象:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">callable(Student()) <span class="comment"># 对于类来说，必须实现__call__()才能当函数用</span></span><br><span class="line">callable(max) <span class="comment"># True</span></span><br><span class="line">callable([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]) <span class="comment"># False</span></span><br><span class="line">callable(<span class="keyword">None</span>) <span class="comment"># False</span></span><br><span class="line">callable(<span class="string">'str'</span>) <span class="comment"># False</span></span><br><span class="line">callable(str) <span class="comment"># True</span></span><br></pre></td></tr></table></figure></p>
<h3 id="访问控制">访问控制</h3><p>实例的变量名如果以<code>__</code>开头，就变成了一个私有变量（private），只有内部可以访问，外部不能访问。例外：<code>__xxx__</code>是特殊变量，特殊变量是可以直接访问的，不是private变量。</p>
<p>一个下划线开头的实例变量名<code>_xxx</code>，外部是可以访问的，但是，按照约定俗成的规定，当你看到这样的变量时，意思就是，“虽然我可以被访问，但是，请把我视为私有变量，不要随意访问”。</p>
<p>双下划线开头的实例变量是不是一定不能从外部访问呢？其实也不是。不能直接访问<code>__xxx</code>是因为Python解释器对外把<code>__xxx</code>变量改成了<code>_类名__xxx</code>，所以，仍然可以通过<code>_类名__xxx</code>来访问该变量。不同版本的Python解释器可能会把__name改成不同的变量名。</p>
<hr>
<p>###继承和多态<br>多态的好处：调用方只管调用，不管细节。这就是著名的开闭原则：对扩展开放，对修改封闭。</p>
<hr>
<h4 id="静态语言_vs_动态语言">静态语言 vs 动态语言</h4><p>举例说明：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_twice</span><span class="params">(animal)</span>:</span></span><br><span class="line">    animal.run()</span><br></pre></td></tr></table></figure></p>
<p>对于静态语言（例如Java）来说，上述代码传入的对象必须是Animal类型或者它的子类，否则，将无法调用run()方法。<br>对于Python这样的动态语言来说，则不一定需要传入Animal类型。我们只需要保证传入的对象有一个run()方法就可以了。</p>
<hr>
<h3 id="获取对象信息">获取对象信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对象类型，使用type()返回对应的Class类型</span></span><br><span class="line">type(<span class="number">123</span>) <span class="comment"># &lt;class 'int'&gt;</span></span><br><span class="line">type(<span class="keyword">None</span>) <span class="comment"># &lt;type(None) 'NoneType'&gt;</span></span><br><span class="line">type(abs) <span class="comment"># &lt;class 'builtin_function_or_method'&gt;</span></span><br><span class="line">type(<span class="number">123</span>)==int <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断一个对象是否是函数，使用types模块的常量</span></span><br><span class="line"><span class="keyword">import</span> types</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fn</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">type(fn)==types.FunctionType</span><br><span class="line">type(abs)==types.BuiltinFunctionType</span><br><span class="line">type(<span class="keyword">lambda</span> x: x)==types.LambdaType</span><br><span class="line">type((x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)))==types.GeneratorType</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断class的类型，使用isinstance()函数</span></span><br><span class="line">isinstance(h, Dog)</span><br><span class="line"><span class="comment"># 能用type()判断的基本类型也可以用isinstance()判断</span></span><br><span class="line">isinstance(<span class="number">123</span>, int) <span class="comment"># True</span></span><br><span class="line">isinstance(<span class="string">b'a'</span>, bytes) <span class="comment"># True</span></span><br><span class="line"><span class="comment"># 可以判断是否某些类型中的一种</span></span><br><span class="line">isinstance([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], (list, tuple)) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得一个对象的所有属性和方法，使用dir()函数返回一个包含字符串的list</span></span><br><span class="line">dir(<span class="string">'ABC'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 操作一个对象的状态，getattr()、setattr()以及hasattr()</span></span><br><span class="line">hasattr(obj, <span class="string">'y'</span>) <span class="comment"># 有属性或方法'y'吗？</span></span><br><span class="line">setattr(obj, <span class="string">'y'</span>, <span class="number">19</span>) <span class="comment"># 设置一个属性'y'</span></span><br><span class="line">getattr(obj, <span class="string">'y'</span>) <span class="comment"># 获取属性'y'</span></span><br></pre></td></tr></table></figure>
<p>Python中，如果调用<code>len()</code>函数试图获取一个对象的长度，实际上，在<code>len()</code>函数内部，它自动去调用该对象的<code>__len__()</code>方法。自己写的类，如果也想用len(myObj)的话，就自己写一个<code>__len__()</code>方法</p>
<p>要注意的是，只有在不知道对象信息的时候，我们才会去获取对象信息。如：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readImage</span><span class="params">(fp)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> hasattr(fp, <span class="string">'read'</span>):</span><br><span class="line">        <span class="keyword">return</span> readData(fp)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">None</span></span><br></pre></td></tr></table></figure></p>
<p>上述代码从文件流fp中读取图像，首先要判断该fp对象是否存在read方法，如果存在，则该对象是一个流，如果不存在，则无法读取。</p>
<hr>
<h3 id="多重继承">多重继承</h3><p>在设计类的继承关系时，通常，主线都是单一继承下来的。但是，如果需要“混入”额外的功能，通过多重继承就可以实现。这种设计通常称之为MixIn。<br>eg：<br>Python自带了<code>TCPServer</code>和<code>UDPServer</code>这两类网络服务，而要同时服务多个用户就必须使用多进程或多线程模型，这两种模型由<code>ForkingMixIn</code>和<code>ThreadingMixIn</code>提供。通过组合，我们就可以创造出合适的服务来。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编写一个多进程模式的TCP服务</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTCPServer</span><span class="params">(TCPServer, ForkingMixIn)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编写一个多线程模式的UDP服务</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUDPServer</span><span class="params">(UDPServer, ThreadingMixIn)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果你打算搞一个更先进的协程模型，可以编写一个CoroutineMixIn：</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTCPServer</span><span class="params">(TCPServer, CoroutineMixIn)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p>
<p>这样一来，我们不需要复杂而庞大的继承链，只要选择组合不同的类的功能，就可以快速构造出所需的子类。</p>
<hr>
<h3 id="枚举类">枚举类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义方法一</span></span><br><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line">Month = Enum(<span class="string">'Month'</span>, (<span class="string">'Jan'</span>, <span class="string">'Feb'</span>, <span class="string">'Mar'</span>, <span class="string">'Apr'</span>, <span class="string">'May'</span>, <span class="string">'Jun'</span>, <span class="string">'Jul'</span>, <span class="string">'Aug'</span>, <span class="string">'Sep'</span>, <span class="string">'Oct'</span>, <span class="string">'Nov'</span>, <span class="string">'Dec'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 引用</span></span><br><span class="line">Month.Jan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 枚举</span></span><br><span class="line"><span class="comment"># value属性是自动赋给成员的int常量，默认从1开始计数</span></span><br><span class="line"><span class="keyword">for</span> name, member <span class="keyword">in</span> Month.__members__.items():</span><br><span class="line">    print(name, <span class="string">'=&gt;'</span>, member, <span class="string">','</span>, member.value)</span><br><span class="line"></span><br><span class="line"><span class="string">'''输出如下：</span><br><span class="line">Jan =&gt; Month.Jan , 1</span><br><span class="line">Feb =&gt; Month.Feb , 2</span><br><span class="line">Mar =&gt; Month.Mar , 3</span><br><span class="line">Apr =&gt; Month.Apr , 4</span><br><span class="line">May =&gt; Month.May , 5</span><br><span class="line">Jun =&gt; Month.Jun , 6</span><br><span class="line">Jul =&gt; Month.Jul , 7</span><br><span class="line">Aug =&gt; Month.Aug , 8</span><br><span class="line">Sep =&gt; Month.Sep , 9</span><br><span class="line">Oct =&gt; Month.Oct , 10</span><br><span class="line">Nov =&gt; Month.Nov , 11</span><br><span class="line">Dec =&gt; Month.Dec , 12</span><br><span class="line">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义方法二：</span></span><br><span class="line"><span class="comment"># @unique装饰器可以帮助我们检查保证没有重复值</span></span><br><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum, unique</span><br><span class="line"><span class="decorator">@unique</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Weekday</span><span class="params">(Enum)</span>:</span></span><br><span class="line">    Sun = <span class="number">0</span> <span class="comment"># Sun的value被设定为0</span></span><br><span class="line">    Mon = <span class="number">1</span></span><br><span class="line">    Tue = <span class="number">2</span></span><br><span class="line">    Wed = <span class="number">3</span></span><br><span class="line">    Thu = <span class="number">4</span></span><br><span class="line">    Fri = <span class="number">5</span></span><br><span class="line">    Sat = <span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问这些枚举类型的若干种方法：</span></span><br><span class="line">day1 = Weekday.Mon</span><br><span class="line">Weekday.Tue</span><br><span class="line">Weekday[<span class="string">'Tue'</span>]　<span class="comment"># Weekday.Tue</span></span><br><span class="line">Weekday.Tue.value <span class="comment"># 2</span></span><br><span class="line">Weekday(<span class="number">1</span>) <span class="comment"># Weekday.Mon</span></span><br><span class="line">Weekday(<span class="number">7</span>) <span class="comment"># 抛出ValueError: 7 is not a valid Weekday</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name, member <span class="keyword">in</span> Weekday.__members__.items():</span><br><span class="line">    print(name, <span class="string">'=&gt;'</span>, member)</span><br><span class="line"><span class="string">'''</span><br><span class="line">Sun =&gt; Weekday.Sun</span><br><span class="line">Mon =&gt; Weekday.Mon</span><br><span class="line">Tue =&gt; Weekday.Tue</span><br><span class="line">Wed =&gt; Weekday.Wed</span><br><span class="line">Thu =&gt; Weekday.Thu</span><br><span class="line">Fri =&gt; Weekday.Fri</span><br><span class="line">Sat =&gt; Weekday.Sat</span><br><span class="line">'''</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="元类">元类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### type()查看类或变量的类型</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(self, name=<span class="string">'world'</span>)</span>:</span></span><br><span class="line">        print(<span class="string">'Hello, %s.'</span> % name)</span><br><span class="line"></span><br><span class="line">type(Hello) <span class="comment"># 输出&lt;class 'type'&gt;，表示这个class的类型是type</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#### type()创建class</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fn</span><span class="params">(self, name=<span class="string">'world'</span>)</span>:</span> <span class="comment"># 先定义函数</span></span><br><span class="line">    print(<span class="string">'Hello, %s.'</span> % name)</span><br><span class="line"></span><br><span class="line">Hello = type(<span class="string">'Hello'</span>, (object,), dict(hello=fn)) <span class="comment"># 创建Hello class</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># type(类名, 父类的元组（针对继承的情况，可以为空），包含属性、方法的字典（名称和值）)</span></span><br><span class="line">MyShinyClass = type(<span class="string">'MyShinyClass'</span>, (), &#123;&#125;)</span><br><span class="line">Foo = type(<span class="string">'Foo'</span>, (), &#123;<span class="string">'bar'</span>:<span class="keyword">True</span>&#125;) <span class="comment"># 注意这个bar是类属性</span></span><br><span class="line">FooChild = type(<span class="string">'FooChild'</span>, (Foo,),&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以增加方法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">echo_bar</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> self.bar</span><br><span class="line">FooChild = type(<span class="string">'FooChild'</span>, (Foo,), &#123;<span class="string">'echo_bar'</span>: echo_bar&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>str类用来创建字符串对象<br>int类用来创建整数对象<br>type类用来创建类对象</p>
</blockquote>
<p>Python解释器遇到class定义时，仅仅是扫描一下class定义的语法，然后调用type()函数创建出class。<br>除此之外还可以用metaclass动态创建类。<br>eg，给自定义的MyList添加add方法：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># metaclass是类的模板，所以必须从`type`类型派生：</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListMetaclass</span><span class="params">(type)</span>:</span> <span class="comment"># 默认习惯，metaclass的类名总是以Metaclass结尾</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, name, bases, attrs)</span>:</span></span><br><span class="line">        attrs[<span class="string">'add'</span>] = <span class="keyword">lambda</span> self, value: self.append(value)</span><br><span class="line">        <span class="keyword">return</span> type.__new__(cls, name, bases, attrs)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用ListMetaclass来定制类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyList</span><span class="params">(list, metaclass=ListMetaclass)</span>:</span> <span class="comment"># 传入关键字参数metaclass</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Python解释器在创建MyList时，找到metaclass关键字就会通过元类的__new__()来创建类。</span></span><br><span class="line"><span class="comment"># __new__()的参数：新类的对象、新类的名字、新类继承的父类集合、新类的属性方法集合</span></span><br></pre></td></tr></table></figure></p>
<p>创建类的过程：</p>
<ol>
<li>当前类中寻找<code>__metaclass__</code>属性</li>
<li>在父类中寻找该属性</li>
<li>模块层次中寻找该属性</li>
<li>用内置的type来创建这个类对象。<br>前三步中只要找到就用它创建类。</li>
</ol>
<p><strong>模块中添加<code>__metaclass__</code></strong>：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''模块中添加__metaclass__'''</span></span><br><span class="line"><span class="comment"># 元类会自动将你通常传给'type'的参数作为自己的参数传入</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upper_attr</span><span class="params">(future_class_name, future_class_parents, future_class_attr)</span>:</span></span><br><span class="line">    <span class="string">'''返回一个类对象，将属性都转为大写形式'''</span></span><br><span class="line">    <span class="comment">#  选择所有不以'__'开头的属性</span></span><br><span class="line">    attrs = ((name, value) <span class="keyword">for</span> name, value <span class="keyword">in</span> future_class_attr.items() <span class="keyword">if</span> <span class="keyword">not</span> name.startswith(<span class="string">'__'</span>))</span><br><span class="line">     <span class="comment"># 将它们转为大写形式</span></span><br><span class="line">    uppercase_attr = dict((name.upper(), value) <span class="keyword">for</span> name, value <span class="keyword">in</span> attrs)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 通过'type'来做类对象的创建</span></span><br><span class="line">    <span class="keyword">return</span> type(future_class_name, future_class_parents, uppercase_attr)</span><br><span class="line"></span><br><span class="line"><span class="string">'''注意这条语句的位置，它属于整个模块'''</span></span><br><span class="line">__metaclass__ = upper_attr  <span class="comment">#  这会作用到这个模块中的所有类</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># 我们也可以只在这里定义__metaclass__，这样就只会作用于这个类中</span></span><br><span class="line">    bar = <span class="string">'bip'</span></span><br><span class="line"></span><br><span class="line">hasattr(Foo, <span class="string">'bar'</span>) <span class="comment"># 输出: False</span></span><br><span class="line">hasattr(Foo, <span class="string">'BAR'</span>) <span class="comment"># 输出:True</span></span><br></pre></td></tr></table></figure></p>
<p><strong>类定义中添加<code>__metaclass__</code></strong>：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 沿用上面的代码</span></span><br><span class="line"><span class="comment"># 必须传入type或子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpperAttrMetaClass</span><span class="params">(type)</span>:</span></span><br><span class="line">    <span class="comment"># __new__ 是在__init__之前被调用的特殊方法</span></span><br><span class="line">    <span class="comment"># __new__是用来创建对象并返回之的方法</span></span><br><span class="line">    <span class="comment"># 而__init__只是用来将传入的参数初始化给对象</span></span><br><span class="line">    <span class="comment"># 你很少用到__new__，除非你希望能够控制对象的创建</span></span><br><span class="line">    <span class="comment"># 这里，创建的对象是类，我们希望能够自定义它，所以我们这里改写__new__</span></span><br><span class="line">    <span class="comment"># 如果你希望的话，你也可以在__init__中做些事情</span></span><br><span class="line">    <span class="comment"># 还有一些高级的用法会涉及到改写__call__特殊方法，但是我们这里不用</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, name, bases, dct)</span>:</span></span><br><span class="line">        attrs = ((name, value) <span class="keyword">for</span> name, value <span class="keyword">in</span> dct.items() <span class="keyword">if</span> <span class="keyword">not</span> name.startswith(<span class="string">'__'</span>)</span><br><span class="line">        uppercase_attr  = dict((name.upper(), value) <span class="keyword">for</span> name, value <span class="keyword">in</span> attrs)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 复用type.__new__方法</span></span><br><span class="line">    <span class="keyword">return</span> type.__new__(cls, name, bases, uppercase_attr)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 最后一句也可以使用super</span></span><br><span class="line">    <span class="keyword">return</span> super(UpperAttrMetaclass, cls).__new__(cls, name, bases, uppercase_attr)</span><br></pre></td></tr></table></figure></p>
<p>metaclass修改类定义的典型的例子：ORM，全称Object Relational Mapping，即对象-关系映射。就是把关系数据库的一行映射为一个对象，也就是一个类对应一个表，这样，写代码更简单，不用直接操作SQL语句。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个User类来操作对应的数据库表User</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(Model)</span>:</span></span><br><span class="line">    <span class="comment"># 定义类的属性到列的映射：</span></span><br><span class="line">    <span class="comment"># 父类Model和属性类型StringField、IntegerField是由ORM框架提供的</span></span><br><span class="line">    id = IntegerField(<span class="string">'id'</span>)</span><br><span class="line">    name = StringField(<span class="string">'username'</span>)</span><br><span class="line">    email = StringField(<span class="string">'email'</span>)</span><br><span class="line">    password = StringField(<span class="string">'password'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个实例：</span></span><br><span class="line">u = User(id=<span class="number">12345</span>, name=<span class="string">'Michael'</span>, email=<span class="string">'test@orm.org'</span>, password=<span class="string">'my-pwd'</span>)</span><br><span class="line"><span class="comment"># 保存到数据库：</span></span><br><span class="line">u.save()</span><br><span class="line"><span class="comment"># 输出如下：</span></span><br><span class="line"><span class="string">'''</span><br><span class="line">Found model: User</span><br><span class="line">Found mapping: email ==&gt; &lt;StringField:email&gt;</span><br><span class="line">Found mapping: password ==&gt; &lt;StringField:password&gt;</span><br><span class="line">Found mapping: id ==&gt; &lt;IntegerField:uid&gt;</span><br><span class="line">Found mapping: name ==&gt; &lt;StringField:username&gt;</span><br><span class="line">SQL: insert into User (password,email,username,id) values (?,?,?,?)</span><br><span class="line">ARGS: ['my-pwd', 'test@orm.org', 'Michael', 12345]</span><br><span class="line">'''</span></span><br><span class="line"></span><br><span class="line"><span class="string">'''-----------上面是此ORM框架的使用，下面是定义-----------'''</span></span><br><span class="line"><span class="comment"># Field类负责保存数据库表的字段名和字段类型</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Field</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, column_type)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.column_type = column_type</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;%s:%s&gt;'</span> % (self.__class__.__name__, self.name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在Field的基础上，进一步定义各种类型的Field</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StringField</span><span class="params">(Field)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        super(StringField, self).__init__(name, <span class="string">'varchar(100)'</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntegerField</span><span class="params">(Field)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        super(IntegerField, self).__init__(name, <span class="string">'bigint'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编写ModelMetaclass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelMetaclass</span><span class="params">(type)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, name, bases, attrs)</span>:</span></span><br><span class="line">        <span class="comment"># 先排除对Model类对象的修改，则此元类只会影响User类对象的创建</span></span><br><span class="line">        <span class="keyword">if</span> name==<span class="string">'Model'</span>:</span><br><span class="line">            <span class="keyword">return</span> type.__new__(cls, name, bases, attrs)</span><br><span class="line">        <span class="comment"># 显示正在修改的类，调试用</span></span><br><span class="line">        print(<span class="string">'Found model: %s'</span> % name)</span><br><span class="line">        <span class="comment"># 用于存储Field属性映射</span></span><br><span class="line">        mappings = dict()</span><br><span class="line">        <span class="comment"># 遍历类的所有属性，把所有Field属性保存到mappings中</span></span><br><span class="line">        <span class="comment"># 字典attrs中保存属性名称和属性值的映射，如id与IntegerField('id')。</span></span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> attrs.items():</span><br><span class="line">            <span class="keyword">if</span> isinstance(v, Field):</span><br><span class="line">                <span class="comment"># 调试用的输出语句</span></span><br><span class="line">                print(<span class="string">'Found mapping: %s ==&gt; %s'</span> % (k, v))</span><br><span class="line">                <span class="comment"># 存储符合条件的Filed属性</span></span><br><span class="line">                mappings[k] = v</span><br><span class="line">        <span class="comment"># 从类属性中删除该Field属性</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> mappings.keys():</span><br><span class="line">            attrs.pop(k)</span><br><span class="line">        <span class="comment"># 保存属性和列的映射关系</span></span><br><span class="line">        attrs[<span class="string">'__mappings__'</span>] = mappings</span><br><span class="line">        <span class="comment"># 把表名保存到__table__中，假设表名和类名一致</span></span><br><span class="line">        attrs[<span class="string">'__table__'</span>] = name</span><br><span class="line">        <span class="keyword">return</span> type.__new__(cls, name, bases, attrs)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基类Model，可以定义各种操作数据库的方法，比如save()，delete()，find()，update()等等</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Model</span><span class="params">(dict, metaclass=ModelMetaclass)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, **kw)</span>:</span></span><br><span class="line">        super(Model, self).__init__(**kw)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span><span class="params">(self, key)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> self[key]</span><br><span class="line">        <span class="keyword">except</span> KeyError:</span><br><span class="line">            <span class="keyword">raise</span> AttributeError(<span class="string">r"'Model' object has no attribute '%s'"</span> % key)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setattr__</span><span class="params">(self, key, value)</span>:</span></span><br><span class="line">        self[key] = value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 变量名</span></span><br><span class="line">        fields = []</span><br><span class="line">        <span class="comment"># 参数</span></span><br><span class="line">        params = []</span><br><span class="line">        <span class="comment"># 变量值</span></span><br><span class="line">        args = []</span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> self.__mappings__.items():</span><br><span class="line">            <span class="comment"># 这里的v是指字典中的value，阅读前面的代码可知是个Field的子类的实例</span></span><br><span class="line">            <span class="comment"># 该实例一个名为name的属性，创建对象时传入</span></span><br><span class="line">            <span class="comment"># 如StringField('username')，此处`username`即是name属性</span></span><br><span class="line">            fields.append(v.name)</span><br><span class="line">            params.append(<span class="string">'?'</span>)</span><br><span class="line">            args.append(getattr(self, k, <span class="keyword">None</span>))</span><br><span class="line">        <span class="comment"># 'xxx'.join(alist)用xxx为分隔符把列表alist连接成字符串</span></span><br><span class="line">        sql = <span class="string">'insert into %s (%s) values (%s)'</span> % (self.__table__, <span class="string">','</span>.join(fields), <span class="string">','</span>.join(params))</span><br><span class="line">        print(<span class="string">'SQL: %s'</span> % sql)</span><br><span class="line">        print(<span class="string">'ARGS: %s'</span> % str(args))</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="错误、调试和测试">错误、调试和测试</h2><hr>
<h3 id="try_catch">try catch</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(<span class="string">'try...'</span>)</span><br><span class="line">    r = <span class="number">10</span> / int(<span class="string">'2'</span>)</span><br><span class="line">    print(<span class="string">'result:'</span>, r)</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">'ValueError:'</span>, e)</span><br><span class="line">    <span class="keyword">raise</span> <span class="comment"># 此处捕获错误便于后续追踪，但是不知如何处理，继续抛出原错误。可选</span></span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">'ZeroDivisionError:'</span>, e)</span><br><span class="line">    <span class="keyword">raise</span> XxxError <span class="comment"># 同上，把此错误转化为其他类型的错误。可选。</span></span><br><span class="line"><span class="keyword">else</span>:      <span class="comment"># 没有错误发生时，执行else语句。出错则不执行。可选</span></span><br><span class="line">    print(<span class="string">'no error!'</span>)</span><br><span class="line"><span class="keyword">finally</span>:   <span class="comment"># finally如果有，则一定会被执行。可选</span></span><br><span class="line">    print(<span class="string">'finally...'</span>)</span><br><span class="line">print(<span class="string">'END'</span>)</span><br></pre></td></tr></table></figure>
<p>Python中错误类型都继承自<code>BaseException</code>。<br>常见的错误类型和继承关系：<a href="https://docs.python.org/3/library/exceptions.html#exception-hierarchy" target="_blank" rel="external">https://docs.python.org/3/library/exceptions.html#exception-hierarchy</a></p>
<hr>
<h3 id="抛出错误">抛出错误</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FooError</span><span class="params">(ValueError)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在其他地方抛出错误</span></span><br><span class="line"><span class="keyword">raise</span> FooError(<span class="string">'invalid value: %s'</span> % s)</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="调试">调试</h3><hr>
<h4 id="断言assert">断言assert</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(s)</span>:</span></span><br><span class="line">    n = int(s)</span><br><span class="line">    <span class="comment"># 如果断言失败（值为False），则抛出AssertionError，提示信息即下方的n is zero</span></span><br><span class="line">    <span class="keyword">assert</span> n != <span class="number">0</span>, <span class="string">'n is zero!'</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">10</span> / n</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    foo(<span class="string">'0'</span>)</span><br></pre></td></tr></table></figure>
<p>启动解释器时可以用<code>-O</code>参数来关闭assert：<code>python3 -O err.py</code>。注意是大写的英文字母O。</p>
<hr>
<h4 id="调试器pdb">调试器pdb</h4><p>启动Python的调试器pdb，让程序以单步方式运行，可以随时查看运行状态。<br><strong>第一种方法</strong>，命令行启动：<code>python3 -m pdb 调试的文件.py</code><br>此时输入小写字母<code>l</code>查看文件内容。<br><code>n</code>单步执行代码。<br><code>p 变量名</code>查看变量<br><code>q</code>结束调试。</p>
<p><strong>第二种方法</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在需要暂停的地方插入此代码</span></span><br><span class="line"><span class="comment"># 程序运行到这里会暂停并进入pdb调试环境</span></span><br><span class="line">pdb.set_trace()</span><br></pre></td></tr></table></figure></p>
<p>仍然用命令行运行文件<code>python3 调试的文件.py</code>，调试完<code>c</code>继续运行</p>
<hr>
<h4 id="用IDE调试">用IDE调试</h4><p>PyCharm<br>Eclipse加上pydev插件</p>
<hr>
<h3 id="单元测试_unittest模块">单元测试 unittest模块</h3><p>以测试为驱动的开发模式最大的好处就是确保一个程序模块的行为符合我们设计的测试用例。在将来修改的时候，可以极大程度地保证该模块行为仍然是正确的。<br>开发一个Dict类，mydict.py：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dict</span><span class="params">(dict)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, **kw)</span>:</span></span><br><span class="line">        super().__init__(**kw)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span><span class="params">(self, key)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> self[key]</span><br><span class="line">        <span class="keyword">except</span> KeyError:</span><br><span class="line">            <span class="keyword">raise</span> AttributeError(<span class="string">r"'Dict' object has no attribute '%s'"</span> % key)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setattr__</span><span class="params">(self, key, value)</span>:</span></span><br><span class="line">        self[key] = value</span><br></pre></td></tr></table></figure></p>
<p>单元测试模块，包含测试类，mydict_test.py：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> mydict <span class="keyword">import</span> Dict</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试类继承unittest.TestCase</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestDict</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 调用测试方法前执行，可用于打开资源如数据库</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 调用测试方法后执行</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 以test开头的方法就是测试方法，测试时会被自动执行</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_init</span><span class="params">(self)</span>:</span></span><br><span class="line">        d = Dict(a=<span class="number">1</span>, b=<span class="string">'test'</span>)</span><br><span class="line">        self.assertEqual(d.a, <span class="number">1</span>)</span><br><span class="line">        self.assertEqual(d.b, <span class="string">'test'</span>)</span><br><span class="line">        self.assertTrue(isinstance(d, dict))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_key</span><span class="params">(self)</span>:</span></span><br><span class="line">        d = Dict()</span><br><span class="line">        d[<span class="string">'key'</span>] = <span class="string">'value'</span></span><br><span class="line">        self.assertEqual(d.key, <span class="string">'value'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_attr</span><span class="params">(self)</span>:</span></span><br><span class="line">        d = Dict()</span><br><span class="line">        d.key = <span class="string">'value'</span></span><br><span class="line">        self.assertTrue(<span class="string">'key'</span> <span class="keyword">in</span> d)</span><br><span class="line">        self.assertEqual(d[<span class="string">'key'</span>], <span class="string">'value'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_keyerror</span><span class="params">(self)</span>:</span></span><br><span class="line">        d = Dict()</span><br><span class="line">        <span class="keyword">with</span> self.assertRaises(KeyError):</span><br><span class="line">            value = d[<span class="string">'empty'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_attrerror</span><span class="params">(self)</span>:</span></span><br><span class="line">        d = Dict()</span><br><span class="line">        <span class="keyword">with</span> self.assertRaises(AttributeError):</span><br><span class="line">            value = d.empty</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于运行单元测试</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>: <span class="comment"># 直接运行此模块时，判断条件成立</span></span><br><span class="line">    unittest.main() <span class="comment"># 注意是包名和方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不加上述代码，则需要用如下命令运行：</span></span><br><span class="line"><span class="comment"># python3 -m unittest mydict_test</span></span><br><span class="line"><span class="comment"># mydict_test是此文件名</span></span><br><span class="line"><span class="comment"># 推荐用此方法</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="文档测试_doctest模块">文档测试 doctest模块</h3><p>Python内置的“文档测试”（doctest）模块可以直接提取注释中的代码并执行测试。<br>doctest严格按照Python交互式命令行的输入和输出来判断测试结果是否正确。只有测试异常的时候，可以用…表示中间一大段烦人的输出。<br>还可以直接作为示例代码。通过某些文档生成工具，就可以自动把包含doctest的注释提取出来。用户看文档的时候，同时也看到了doctest。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mydict.py</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dict</span><span class="params">(dict)</span>:</span></span><br><span class="line">    <span class="string">'''</span><br><span class="line">    Simple dict but also support access as x.y style.</span><br><span class="line"></span><br><span class="line">    &gt;&gt;&gt; d1 = Dict()</span><br><span class="line">    &gt;&gt;&gt; d1['x'] = 100</span><br><span class="line">    &gt;&gt;&gt; d1.x</span><br><span class="line">    100</span><br><span class="line">    &gt;&gt;&gt; d1.y = 200</span><br><span class="line">    &gt;&gt;&gt; d1['y']</span><br><span class="line">    200</span><br><span class="line">    &gt;&gt;&gt; d2 = Dict(a=1, b=2, c='3')</span><br><span class="line">    &gt;&gt;&gt; d2.c</span><br><span class="line">    '3'</span><br><span class="line">    &gt;&gt;&gt; d2['empty']</span><br><span class="line">    Traceback (most recent call last):</span><br><span class="line">        ...</span><br><span class="line">    KeyError: 'empty'</span><br><span class="line">    &gt;&gt;&gt; d2.empty</span><br><span class="line">    Traceback (most recent call last):</span><br><span class="line">        ...</span><br><span class="line">    AttributeError: 'Dict' object has no attribute 'empty'</span><br><span class="line">    '''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, **kw)</span>:</span></span><br><span class="line">        super(Dict, self).__init__(**kw)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span><span class="params">(self, key)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> self[key]</span><br><span class="line">        <span class="keyword">except</span> KeyError:</span><br><span class="line">            <span class="keyword">raise</span> AttributeError(<span class="string">r"'Dict' object has no attribute '%s'"</span> % key)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setattr__</span><span class="params">(self, key, value)</span>:</span></span><br><span class="line">        self[key] = value</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">import</span> doctest</span><br><span class="line">    doctest.testmod()</span><br></pre></td></tr></table></figure></p>
<p>运行模块<code>python3 mydict.py</code>，没有任何输出说明doctest运行正确</p>
<hr>
<h2 id="IO编程">IO编程</h2><p>同步和异步IO的区别就在于是否等待IO执行的结果。等待=同步IO。<br>本章只介绍同步IO。异步IO复杂度太高暂略过。</p>
<hr>
<h3 id="文件读写">文件读写</h3><p>Python内置了读写文件的函数，用法和C是兼容的。<br>在磁盘上读写文件的功能都是由操作系统提供的，现代操作系统不允许普通的程序直接操作磁盘，所以，读写文件就是请求操作系统打开一个文件对象（通常称为文件描述符），然后，通过操作系统提供的接口从这个文件对象中读取数据（读文件），或者把数据写入这个文件对象（写文件）。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开文件，r表示read，w为write，a为append，b为binary</span></span><br><span class="line"><span class="comment"># 文件不存在则抛出IOError</span></span><br><span class="line">f = open(<span class="string">'E:\Python\myapp.log'</span>, <span class="string">'r'</span>)</span><br><span class="line">f = open(<span class="string">'E:\Python\myapp.log'</span>, <span class="string">'rb'</span>)</span><br><span class="line">f = open(<span class="string">'E:\Python\myapp.log'</span>, <span class="string">'r'</span>, encoding=<span class="string">'gbk'</span>)</span><br><span class="line">f = open(<span class="string">'E:\Python\myapp.log'</span>, <span class="string">'r'</span>, encoding=<span class="string">'gbk'</span>, errors=<span class="string">'ignore'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读文件</span></span><br><span class="line">f.read() <span class="comment"># 一次性读取文件的全部内容到内存</span></span><br><span class="line">f.readline() <span class="comment"># 一次读取一行</span></span><br><span class="line">f.read(size) <span class="comment"># 每次最多读取size个字节</span></span><br><span class="line">f.readlines() <span class="comment"># 一次读取所有内容并按行返回list</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写文件</span></span><br><span class="line">f.write(<span class="string">'Hello, world!'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入数据，清空缓冲区</span></span><br><span class="line">f.flush()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把文件指针归零</span></span><br><span class="line">f.seek(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭文件</span></span><br><span class="line">f.close() <span class="comment"># 调用此方法，系统才保证把数据全写入文件</span></span><br></pre></td></tr></table></figure>
<p>捕捉异常：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f = open(<span class="string">'/path/to/file'</span>, <span class="string">'r'</span>)</span><br><span class="line">    print(f.read())</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="keyword">if</span> f:</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等效的简单写法，不必调用close()</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'/path/to/file'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    print(f.read())</span><br></pre></td></tr></table></figure></p>
<p>有个read()方法的对象，在Python中统称为<code>file-like Object</code></p>
<hr>
<h3 id="StringIO和BytesIO">StringIO和BytesIO</h3><p>StringIO：在内存中读写str<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> StringIO</span><br><span class="line"></span><br><span class="line">f = StringIO()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入</span></span><br><span class="line">f.write(<span class="string">'hello'</span>)</span><br><span class="line">f.write(<span class="string">' '</span>)</span><br><span class="line">f.write(<span class="string">'world!'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得写入后的str</span></span><br><span class="line">f.getvalue() <span class="comment"># hello world!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">####----------------------------------</span></span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> StringIO</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用一个str初始化StringIO</span></span><br><span class="line">f = StringIO(<span class="string">'Hello!\nHi!\nGoodbye!'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    s = f.readline()</span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">''</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(s.strip())</span><br></pre></td></tr></table></figure></p>
<p>BytesIO：在内存中读写bytes<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line">f = BytesIO()</span><br><span class="line">f.write(<span class="string">'中文'</span>.encode(<span class="string">'utf-8'</span>)) <span class="comment"># 写入UTF-8编码的bytes</span></span><br><span class="line">f.getvalue()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用一个bytes初始化BytesIO</span></span><br><span class="line">f = BytesIO(<span class="string">b'\xe4\xb8\xad\xe6\x96\x87'</span>)</span><br><span class="line"><span class="comment"># 读取</span></span><br><span class="line">f.read()</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="操作文件和目录">操作文件和目录</h3><p>os模块，代表 操作系统(operating system)，包含非常多的函数用于获取(和修改)本地目录、文件进程、环境变量等的信息。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 操作系统的类型</span></span><br><span class="line">os.name</span><br><span class="line"><span class="string">'''</span><br><span class="line">posix ====&gt; Linux、Unix或Mac OS X</span><br><span class="line">nt ====&gt; Windows系统</span><br><span class="line">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 环境变量</span></span><br><span class="line">os.environ</span><br><span class="line"><span class="string">'''</span><br><span class="line">environ(&#123;'PSMODULEPATH': 'C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files'.....</span><br><span class="line">'''</span></span><br><span class="line"><span class="comment"># 获取某个环境变量的值</span></span><br><span class="line">os.environ.get(<span class="string">'PATH'</span>)</span><br><span class="line">os.environ.get(<span class="string">'x'</span>, <span class="string">'default'</span>)</span><br><span class="line">s = os.getenv(<span class="string">'PATH'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># -------------------目录操作-------------------#</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前工作目录 get current working directory</span></span><br><span class="line">os.getcwd()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改变当前目录 change directory， 可以用相对路径</span></span><br><span class="line">os.chdir(<span class="string">'/Users/pilgrim/diveintopython3/examples'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前工作目录的绝对路径:</span></span><br><span class="line">os.path.abspath(<span class="string">'.'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拼接路径，此方法可以正确处理不同操作系统的路径分隔符</span></span><br><span class="line"><span class="comment"># 合并、拆分路径的函数并不要求目录和文件要真实存在，它们只对字符串进行操作</span></span><br><span class="line">os.path.join(<span class="string">'F:\\PythonWorkspace'</span>, <span class="string">'NewDir'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># expanduser函数用来将包含~符号（表示当前用户Home目录）的路径扩展为完整的路径</span></span><br><span class="line">os.path.expanduser(<span class="string">"~/.pythonrc"</span>)</span><br><span class="line"><span class="comment"># eg：</span></span><br><span class="line">os.path.join(os.path.expanduser(<span class="string">'~'</span>), <span class="string">'diveintopython3'</span>, <span class="string">'examples'</span>, <span class="string">'humansize.py'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新目录</span></span><br><span class="line">os.mkdir(<span class="string">'F:\\PythonWorkspace\\NewDir'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除目录:</span></span><br><span class="line">os.rmdir(<span class="string">'F:\\PythonWorkspace\\NewDir'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拆分路径，此方法可以正确处理不同操作系统的路径分隔符</span></span><br><span class="line">os.path.split(<span class="string">'F:\\PythonWorkspace\\file.txt'</span>) <span class="comment"># ('F:\\PythonWorkspace', 'file.txt')</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件扩展名</span></span><br><span class="line">os.path.splitext(<span class="string">'F:\\PythonWorkspace\\file.txt'</span>) <span class="comment"># ('F:\\PythonWorkspace\\file', '.txt')</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名文件:</span></span><br><span class="line">os.rename(<span class="string">'test.txt'</span>, <span class="string">'test.py'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删掉文件:</span></span><br><span class="line">os.remove(<span class="string">'test.py'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># os模块中不存在复制文件的函数，原因是复制文件并非由操作系统提供的系统调用。可以使用shutil模块的copyfile()函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出当前工作目录下的所有目录</span></span><br><span class="line"><span class="comment"># listdir()只返回文件名，不包含完整路径</span></span><br><span class="line"><span class="comment"># 不在当前目录下时，isdir必须加上路径，如果只传入文件夹名字，它会在当前工作目录下搜索是否存在此文件夹</span></span><br><span class="line">[x <span class="keyword">for</span> x <span class="keyword">in</span> os.listdir(<span class="string">'.'</span>) <span class="keyword">if</span> os.path.isdir(x)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有的.py文件</span></span><br><span class="line">[x <span class="keyword">for</span> x <span class="keyword">in</span> os.listdir(<span class="string">'.'</span>) <span class="keyword">if</span> os.path.isfile(x) <span class="keyword">and</span> os.path.splitext(x)[<span class="number">1</span>]==<span class="string">'.py'</span>]</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="获取文件元信息">获取文件元信息</h4><p>元信息: 创建时间，最后修改时间，文件大小等等<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># os.stat() 函数返回一个包含多种文件元信息的对象</span></span><br><span class="line">metadata = os.stat(<span class="string">'feed.xml'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后修改时间，从纪元(1970年1月1号的第一秒钟)到现在的秒数</span></span><br><span class="line">metadata.st_mtime</span><br><span class="line"></span><br><span class="line"><span class="comment"># time.localtime() 函数将从纪元到现在的秒数转换成包含年、月、日、小时、分钟、秒的结构体。</span></span><br><span class="line">time.localtime(metadata.st_mtime)</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="罗列目录内容">罗列目录内容</h4><p>glob 模块是Python标准库中的另一个工具，它可以通过编程的方法获得一个目录的内容，并且它使用熟悉的命令行下的通配符。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录</span></span><br><span class="line">os.chdir(<span class="string">'/Users/pilgrim/diveintopython3/'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># glob 模块接受一个通配符并返回所有匹配的文件和目录的相对路径，list形式</span></span><br><span class="line">glob.glob(<span class="string">'examples/*.xml'</span>)</span><br><span class="line">glob.glob(<span class="string">'*test*.py'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取绝对路径</span></span><br><span class="line"><span class="comment"># 注意此方法与工作目录挂钩</span></span><br><span class="line">os.path.realpath(<span class="string">'feed.xml'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># eg:</span></span><br><span class="line">glob.glob(<span class="string">'*.xml'</span>) <span class="comment"># 返回当前目录下的所有.xml 文件</span></span><br><span class="line">[os.path.realpath(f) <span class="keyword">for</span> f <span class="keyword">in</span> glob.glob(<span class="string">'*.xml'</span>)] <span class="comment"># 获取全路径的列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入if子句来过滤list</span></span><br><span class="line">[f <span class="keyword">for</span> f <span class="keyword">in</span> glob.glob(<span class="string">'*.py'</span>) <span class="keyword">if</span> os.stat(f).st_size &gt; <span class="number">6000</span>]</span><br><span class="line">[(os.stat(f).st_size, os.path.realpath(f)) <span class="keyword">for</span> f <span class="keyword">in</span> glob.glob(<span class="string">'*.xml'</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># glob.glob('*')获得当前目录下所有文件的列表，解析并构造dict</span></span><br><span class="line">metadata_dict = &#123;f:os.stat(f) <span class="keyword">for</span> f <span class="keyword">in</span> glob.glob(<span class="string">'*'</span>)&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="序列化">序列化</h2><h3 id="pickle模块">pickle模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line">d = dict(name=<span class="string">'Bob'</span>, age=<span class="number">20</span>, score=<span class="number">88</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把对象d序列化成一个bytes</span></span><br><span class="line">temp = pickle.dumps(d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以直接把对象序列化后写入一个file-like Object</span></span><br><span class="line">f = open(<span class="string">'dump.txt'</span>, <span class="string">'wb'</span>)</span><br><span class="line">pickle.dump(d, f)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 反序列化</span></span><br><span class="line">pickle.loads(temp)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以直接从一个file-like Object中直接反序列化出对象</span></span><br><span class="line">f = open(<span class="string">'dump.txt'</span>, <span class="string">'rb'</span>)</span><br><span class="line">d = pickle.load(f)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个变量和原来的变量是完全不相干的对象，它们只是内容相同而已</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="JSON">JSON</h3><p>JSON标准规定JSON编码是UTF-8<br>JSON表示的对象就是标准的JavaScript语言的对象，JSON和Python内置的数据类型对应如下：</p>
<table>
<thead>
<tr>
<th>JSON类型</th>
<th>Python类型</th>
</tr>
</thead>
<tbody>
<tr>
<td>{}</td>
<td>dict</td>
</tr>
<tr>
<td>[]</td>
<td>list</td>
</tr>
<tr>
<td>“string”</td>
<td>str</td>
</tr>
<tr>
<td>1234.56</td>
<td>int或float</td>
</tr>
<tr>
<td>true/false</td>
<td>True/False</td>
</tr>
<tr>
<td>null</td>
<td>None</td>
</tr>
</tbody>
</table>
<p>Python内置的json模块提供了非常完善的Python对象到JSON格式的转换。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">d = dict(name=<span class="string">'Bob'</span>, age=<span class="number">20</span>, score=<span class="number">88</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 序列化</span></span><br><span class="line">temp = json.dumps(d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 和pickle类似，也可以直接把对象序列化后写入一个file-like Object</span></span><br><span class="line">f = open(<span class="string">'dump.txt'</span>, <span class="string">'wb'</span>)</span><br><span class="line">json.dump(d, f)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 反序列化</span></span><br><span class="line">json.loads(temp)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以直接从一个file-like Object中直接反序列化出对象</span></span><br><span class="line">f = open(<span class="string">'dump.txt'</span>, <span class="string">'rb'</span>)</span><br><span class="line">d = json.load(f)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure></p>
<p>除了第一个必须的obj参数外，dumps()方法还提供了一大堆的可选参数：<br><a href="https://docs.python.org/3/library/json.html#json.dumps" target="_blank" rel="external">https://docs.python.org/3/library/json.html#json.dumps</a></p>
<p>可选参数default用于把任意一个对象变成一个可序列为JSON的对象。</p>
<p>Json序列化类实例的例子：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, score)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        self.score = score</span><br><span class="line"></span><br><span class="line">s = Student(<span class="string">'Bob'</span>, <span class="number">20</span>, <span class="number">88</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于序列化Student类的方法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">student2dict</span><span class="params">(std)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">'name'</span>: std.name,</span><br><span class="line">        <span class="string">'age'</span>: std.age,</span><br><span class="line">        <span class="string">'score'</span>: std.score</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 序列化</span></span><br><span class="line">json_str = json.dumps(s, default=student2dict)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于反序列化Student类的方法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dict2student</span><span class="params">(d)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> Student(d[<span class="string">'name'</span>], d[<span class="string">'age'</span>], d[<span class="string">'score'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 反序列化</span></span><br><span class="line">json.loads(json_str, object_hook=dict2student)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通用的序列化方法</span></span><br><span class="line"><span class="comment"># 通常class的实例都有一个__dict__属性，它就是一个dict，用来存储实例变量。也有少数例外，比如定义了__slots__的class。</span></span><br><span class="line">json.dumps(s, default=<span class="keyword">lambda</span> obj: obj.__dict__)</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="进程和线程">进程和线程</h2><hr>
<h3 id="多进程_multiprocessing">多进程 multiprocessing</h3><h4 id="启动单个进程">启动单个进程</h4><p>Unix/Linux操作系统提供了一个fork()系统调用，它非常特殊。普通的函数调用，调用一次，返回一次，但是fork()调用一次，返回两次，因为操作系统自动把当前进程（称为父进程）复制了一份（称为子进程），然后，分别在父进程和子进程内返回。<br>子进程永远返回0，而父进程返回子进程的ID。这样做的理由是，一个父进程可以fork出很多子进程，所以，父进程要记下每个子进程的ID，而子进程只需要调用getppid()就可以拿到父进程的ID。</p>
<p>*nix系统的创建多进程方法：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">print(<span class="string">'Process (%s) start...'</span> % os.getpid())</span><br><span class="line"><span class="comment"># Only works on Unix/Linux/Mac:</span></span><br><span class="line">pid = os.fork()</span><br><span class="line"><span class="keyword">if</span> pid == <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'I am child process (%s) and my parent is %s.'</span> % (os.getpid(), os.getppid()))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'I (%s) just created a child process (%s).'</span> % (os.getpid(), pid))</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span><br><span class="line">运行结果如下：</span><br><span class="line">Process (876) start...</span><br><span class="line">I (876) just created a child process (877).</span><br><span class="line">I am child process (877) and my parent is 876.</span><br><span class="line">'''</span></span><br></pre></td></tr></table></figure></p>
<p>Windows中可以用跨平台的<code>multiprocessing</code>多进程模块</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子进程要执行的代码</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_proc</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="comment"># getpid() 获取当前进程的ID</span></span><br><span class="line">    <span class="comment"># getppid() 获取父进程的ID</span></span><br><span class="line">    print(<span class="string">'运行子进程 %s (%s)，父进程为：%s'</span> % (name, os.getpid(), os.getppid()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 创建一个子进程</span></span><br><span class="line">    p = Process(target=run_proc, args=(<span class="string">'test'</span>,))</span><br><span class="line">    <span class="comment"># 启动进程</span></span><br><span class="line">    p.start()</span><br><span class="line">    <span class="comment"># 等待p进程结束后再继续往下运行</span></span><br><span class="line">    p.join()</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="进程池_类_Pool">进程池 类 Pool</h4><p>批量创建子进程<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"><span class="keyword">import</span> os, time, random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">long_time_task</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'运行任务 %s (%s)...'</span> % (name, os.getpid()))</span><br><span class="line">    start = time.time()</span><br><span class="line">    time.sleep(random.random() * <span class="number">3</span>)</span><br><span class="line">    end = time.time()</span><br><span class="line">    print(<span class="string">'任务 %s 运行了 %0.2f 秒。'</span> % (name, (end - start)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'父进程 %s'</span> % os.getpid())</span><br><span class="line">    <span class="comment"># 创建4个子进程，编号从0开始</span></span><br><span class="line">    p = Pool(<span class="number">4</span>)</span><br><span class="line">    <span class="comment"># 执行5个任务</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        p.apply_async(long_time_task, args=(i,))</span><br><span class="line">    print(<span class="string">'等待所有子进程运行结束'</span>)</span><br><span class="line">    <span class="comment"># 调用join()之前必须先调用close()</span></span><br><span class="line">    <span class="comment"># close()之后就不能继续添加新的Process了</span></span><br><span class="line">    p.close()</span><br><span class="line">    <span class="comment"># 等待所有子进程执行完毕</span></span><br><span class="line">    p.join()</span><br><span class="line">    print(<span class="string">'所有进程运行完毕'</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span><br><span class="line">用Sublime Text和Python解释器执行都没有得到正确的结果</span><br><span class="line">命令行执行结果如下：</span><br><span class="line"></span><br><span class="line">父进程 2372</span><br><span class="line">等待所有子进程运行结束</span><br><span class="line">运行任务 0 (5268)...</span><br><span class="line">运行任务 1 (5544)...</span><br><span class="line">运行任务 2 (6008)...</span><br><span class="line">运行任务 3 (3732)...</span><br><span class="line">任务 2 运行了 0.19 秒。</span><br><span class="line">运行任务 4 (6008)...</span><br><span class="line">任务 0 运行了 0.38 秒。</span><br><span class="line">任务 1 运行了 1.31 秒。</span><br><span class="line">任务 3 运行了 1.84 秒。</span><br><span class="line">任务 4 运行了 5.75 秒。</span><br><span class="line">所有进程运行完毕</span><br><span class="line">'''</span></span><br><span class="line"><span class="comment"># 由于线程池中只有4个线程，第5个任务（即任务4）必须等其他任务执行结束，才能被空闲的进程执行</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="子进程_模块_subprocess">子进程 模块 subprocess</h4><p>相对父进程来说，子进程是一个外部进程。<br>subprocess模块可以让我们非常方便地启动一个子进程，然后控制其输入和输出。</p>
<p>eg:Python代码中运行命令，这和命令行直接运行的效果是一样的：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅运行命令</span></span><br><span class="line"><span class="comment"># 这一条命令能直接在SublimeText控制台输出结果，不知道为什么</span></span><br><span class="line"><span class="comment"># ping</span></span><br><span class="line">r = subprocess.call([<span class="string">'ping'</span>, <span class="string">'www.python.org'</span>])</span><br><span class="line"><span class="comment"># 调用 cmd 执行后面的命令，输出path环境变量</span></span><br><span class="line">r = subprocess.call([<span class="string">'cmd'</span>, <span class="string">'/c'</span>,  <span class="string">'echo'</span>,  <span class="string">'%path%'</span>])</span><br><span class="line">print(<span class="string">'Exit code:'</span>, r)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 向子进程输入数据</span></span><br><span class="line"><span class="comment"># 相当于运行命令：</span></span><br><span class="line"><span class="comment"># adb shell</span></span><br><span class="line"><span class="comment"># adb help</span></span><br><span class="line"><span class="comment"># exit</span></span><br><span class="line">p = subprocess.Popen([<span class="string">'adb shell'</span>], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line">output, err = p.communicate(<span class="string">b'adb help\nexit\n'</span>)</span><br><span class="line">print(output.decode(<span class="string">'utf-8'</span>))</span><br><span class="line">print(<span class="string">'Exit code:'</span>, p.returncode)</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="进程间通信">进程间通信</h4><p>Python的multiprocessing模块包装了底层的机制，提供了Queue、Pipes等多种方式来交换数据。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process, Queue</span><br><span class="line"><span class="keyword">import</span> os, time, random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写数据进程执行的代码:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(q)</span>:</span></span><br><span class="line">    print(<span class="string">'Process to write: %s'</span> % os.getpid())</span><br><span class="line">    <span class="keyword">for</span> value <span class="keyword">in</span> [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]:</span><br><span class="line">        print(<span class="string">'Put %s to queue...'</span> % value)</span><br><span class="line">        q.put(value)</span><br><span class="line">        time.sleep(random.random())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读数据进程执行的代码:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(q)</span>:</span></span><br><span class="line">    print(<span class="string">'Process to read: %s'</span> % os.getpid())</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        value = q.get(<span class="keyword">True</span>)</span><br><span class="line">        print(<span class="string">'Get %s from queue.'</span> % value)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 父进程创建Queue，并传给各个子进程：</span></span><br><span class="line">    q = Queue()</span><br><span class="line">    <span class="comment"># 写数据进程</span></span><br><span class="line">    pw = Process(target=write, args=(q,))</span><br><span class="line">    <span class="comment"># 读数据进程</span></span><br><span class="line">    pr = Process(target=read, args=(q,))</span><br><span class="line">    <span class="comment"># 启动子进程pw，写入:</span></span><br><span class="line">    pw.start()</span><br><span class="line">    <span class="comment"># 启动子进程pr，读取:</span></span><br><span class="line">    pr.start()</span><br><span class="line">    <span class="comment"># 等待pw结束:</span></span><br><span class="line">    pw.join()</span><br><span class="line">    <span class="comment"># pr进程里是死循环，无法等待其结束，只能强行终止:</span></span><br><span class="line">    pr.terminate()</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="多线程">多线程</h3><p>Python的线程是真正的Posix Thread，而不是模拟出来的线程。</p>
<p>Python的标准库提供了两个模块：</p>
<ul>
<li><code>_thread</code> 低级模块</li>
<li><code>threading</code>高级模块，对_thread进行了封装。</li>
</ul>
<p>启动一个线程就是把一个函数传入并创建Thread实例，然后调用start()开始执行<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time, threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新线程执行的代码:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loop</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># current_thread()返回当前线程的实例</span></span><br><span class="line">    print(<span class="string">'thread %s is running...'</span> % threading.current_thread().name)</span><br><span class="line">    <span class="comment"># ... 做一些事</span></span><br><span class="line">    print(<span class="string">'thread %s ended.'</span> % threading.current_thread().name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># name参数指定子线程的名字</span></span><br><span class="line">t = threading.Thread(target=loop, name=<span class="string">'LoopThread'</span>)</span><br><span class="line">t.start()</span><br><span class="line">t.join()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出CPU核心数量</span></span><br><span class="line">print(multiprocessing.cpu_count())</span><br></pre></td></tr></table></figure></p>
<p>主线程实例的名字叫MainThread，子线程的名字在创建时指定。名字仅仅在打印时用来显示，完全没有其他意义，如果不起名字Python就自动给线程命名为Thread-1，Thread-2……</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建锁</span></span><br><span class="line">lock = threading.Lock()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_thread</span><span class="params">(n)</span>:</span></span><br><span class="line">        <span class="comment"># 先要获取锁:</span></span><br><span class="line">        lock.acquire()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 需要同步的操作...</span></span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            <span class="comment"># 执行完毕一定要释放锁:</span></span><br><span class="line">            lock.release()</span><br></pre></td></tr></table></figure>
<p>Python解释器执行代码时，有一个GIL锁：Global Interpreter Lock，任何Python线程执行前，必须先获得GIL锁，然后，每执行100条字节码，解释器就自动释放GIL锁，让别的线程有机会执行。这个GIL全局锁实际上把所有线程的执行代码都给上了锁，所以，多线程在Python中只能交替执行，即使100个线程跑在100核CPU上，也只能用到1个核。</p>
<p>Python虽然不能利用多线程实现多核任务，但可以通过多进程实现多核任务。多个Python进程有各自独立的GIL锁，互不影响。</p>
<hr>
<h3 id="ThreadLocal">ThreadLocal</h3><p>一个ThreadLocal变量虽然是全局变量，但每个线程都只能读写自己线程的独立副本，互不干扰。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建全局ThreadLocal对象:</span></span><br><span class="line">local_ob = threading.local()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在其他方法取出ThreadLocal对象中存储的变量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_other</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 获取当前线程关联的student:</span></span><br><span class="line">    name = local_ob.name</span><br><span class="line">    <span class="comment"># 处理变量....</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动线程的方法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_thread</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="comment"># 绑定ThreadLocal的name:</span></span><br><span class="line">    local_ob.name = name</span><br><span class="line">    process_student()</span><br><span class="line"></span><br><span class="line">t1 = threading.Thread(target= process_thread, args=(<span class="string">'Alice'</span>,), name=<span class="string">'Thread-A'</span>)</span><br><span class="line">t2 = threading.Thread(target= process_thread, args=(<span class="string">'Bob'</span>,), name=<span class="string">'Thread-B'</span>)</span><br><span class="line">t1.start()</span><br><span class="line">t2.start()</span><br><span class="line">t1.join()</span><br><span class="line">t2.join()</span><br></pre></td></tr></table></figure>
<p>ThreadLocal最常用的地方就是为每个线程绑定一个数据库连接，HTTP请求，用户身份信息等，这样一个线程的所有调用到的处理函数都可以非常方便地访问这些资源。</p>
<hr>
<h3 id="进程_vs-_线程">进程 vs. 线程</h3><p>多任务，通常用Master-Worker模式，Master负责分配任务，Worker负责执行任务。</p>
<p>多进程模式最大的优点就是稳定性高，缺点是创建进程的代价大（特别是Windows下），操作系统能同时运行的进程数也是有限的。</p>
<p>多线程模式通常比多进程快一点，但是也快不到哪去，而且任何一个线程挂掉都可能直接造成整个进程崩溃，因为所有线程共享进程的内存。</p>
<p>在Windows下，多线程的效率比多进程要高。</p>
<p>操作系统在切换进程或者线程时，需要先保存当前执行的现场环境（CPU寄存器状态、内存页等），再把新任务的执行环境准备好（恢复上次的寄存器状态，切换内存页等），才能开始执行。这个切换过程虽然很快，但是也需要耗费时间。如果有几千个任务同时进行，操作系统可能就主要忙着切换任务，根本没有多少时间去执行任务了，这种情况最常见的就是硬盘狂响，点窗口无反应，系统处于假死状态。</p>
<p>所以，多任务一旦多到一个限度，就会消耗掉系统所有的资源，结果效率急剧下降，所有任务都做不好。</p>
<p>要最高效地利用CPU，计算密集型任务同时进行的数量应当等于CPU的核心数。计算密集型任务由于主要消耗CPU资源，因此，代码运行效率至关重要。Python这样的脚本语言运行效率很低，完全不适合计算密集型任务。对于计算密集型任务，最好用C语言编写。</p>
<p>IO密集型任务执行期间，99%的时间都花在IO上，花在CPU上的时间很少，因此，用运行速度极快的C语言替换用Python这样运行速度极低的脚本语言，完全无法提升运行效率。对于IO密集型任务，最合适的语言就是开发效率最高（代码量最少）的语言，脚本语言是首选，C语言最差。</p>
<p>如果充分利用操作系统提供的异步IO支持，就可以用单进程单线程模型来执行多任务，这种全新的模型称为事件驱动模型。在多核CPU上，可以运行多个进程（数量与CPU核心数相同），充分利用多核CPU。由于系统总的进程数量十分有限，因此操作系统调度非常高效。用异步IO编程模型来实现多任务是一个主要的趋势。</p>
<p>对应到Python语言，单进程的异步编程模型称为协程，有了协程的支持，就可以基于事件驱动编写高效的多任务程序。我们会在后面讨论如何编写协程。</p>
<hr>
<h3 id="分布式进程">分布式进程</h3><p>在Thread和Process中，应当优选Process，因为Process更稳定，而且，Process可以分布到多台机器上，而Thread最多只能分布到同一台机器的多个CPU上。</p>
<p>Python的multiprocessing模块不但支持多进程，其中managers子模块还支持把多进程分布到多台机器上。一个服务进程可以作为调度者，将任务分布到其他多个进程中，依靠网络通信。由于managers模块封装很好，不必了解网络通信的细节，就可以很容易地编写分布式多进程程序。</p>
<p>服务进程:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random, time, queue</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> freeze_support</span><br><span class="line"><span class="keyword">from</span> multiprocessing.managers <span class="keyword">import</span> BaseManager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送任务的队列:</span></span><br><span class="line">task_queue = queue.Queue()</span><br><span class="line"><span class="comment"># 接收结果的队列:</span></span><br><span class="line">result_queue = queue.Queue()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从BaseManager继承的QueueManager:</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QueueManager</span><span class="params">(BaseManager)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">return_task_queue</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> task_queue</span><br><span class="line">    <span class="keyword">return</span> task_queue</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">return_result_queue</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> result_queue</span><br><span class="line">    <span class="keyword">return</span> result_queue</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 把两个Queue都注册到网络上, callable参数关联了Queue对象:</span></span><br><span class="line">    <span class="comment"># QueueManager.register('get_task_queue', callable=lambda: task_queue)</span></span><br><span class="line">    <span class="comment"># QueueManager.register('get_result_queue', callable=lambda: result_queue)</span></span><br><span class="line">    QueueManager.register(<span class="string">'get_task_queue'</span>, callable=return_task_queue)</span><br><span class="line">    QueueManager.register(<span class="string">'get_result_queue'</span>, callable=return_result_queue)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绑定端口5000, 设置验证码'abc':</span></span><br><span class="line">    manager = QueueManager(address=(<span class="string">'127.0.0.1'</span>, <span class="number">5000</span>), authkey=<span class="string">b'abc'</span>)</span><br><span class="line">    <span class="comment"># 启动Queue:</span></span><br><span class="line">    manager.start()</span><br><span class="line">    <span class="comment"># 获得通过网络访问的Queue对象:</span></span><br><span class="line">    task = manager.get_task_queue()</span><br><span class="line">    result = manager.get_result_queue()</span><br><span class="line">    <span class="comment"># 放几个任务进去:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        n = random.randint(<span class="number">0</span>, <span class="number">10000</span>)</span><br><span class="line">        print(<span class="string">'Put task %d...'</span> % n)</span><br><span class="line">        task.put(n)</span><br><span class="line">    <span class="comment"># 从result队列读取结果:</span></span><br><span class="line">    print(<span class="string">'Try get results...'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        r = result.get(timeout=<span class="number">10</span>)</span><br><span class="line">        print(<span class="string">'Result: %s'</span> % r)</span><br><span class="line">    <span class="comment"># 关闭:</span></span><br><span class="line">    manager.shutdown()</span><br><span class="line">    print(<span class="string">'master exit.'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    freeze_support()</span><br><span class="line">    test()</span><br></pre></td></tr></table></figure></p>
<p>注意，在分布式多进程环境下，添加任务到Queue必须通过manager.get_task_queue()获得的Queue接口添加。</p>
<p>任务进程：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time, sys, queue</span><br><span class="line"><span class="keyword">from</span> multiprocessing.managers <span class="keyword">import</span> BaseManager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建类似的QueueManager:</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QueueManager</span><span class="params">(BaseManager)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 由于这个QueueManager只从网络上获取Queue，所以注册时只提供名字:</span></span><br><span class="line">QueueManager.register(<span class="string">'get_task_queue'</span>)</span><br><span class="line">QueueManager.register(<span class="string">'get_result_queue'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接到服务器，也就是运行task_master.py的机器:</span></span><br><span class="line">server_addr = <span class="string">'127.0.0.1'</span></span><br><span class="line">print(<span class="string">'Connect to server %s...'</span> % server_addr)</span><br><span class="line"><span class="comment"># 端口和验证码注意保持与task_master.py设置的完全一致:</span></span><br><span class="line">m = QueueManager(address=(server_addr, <span class="number">5000</span>), authkey=<span class="string">b'abc'</span>)</span><br><span class="line"><span class="comment"># 从网络连接:</span></span><br><span class="line">m.connect() <span class="comment"># 服务端用的是start()方法</span></span><br><span class="line"><span class="comment"># 获取Queue的对象:</span></span><br><span class="line">task = m.get_task_queue()</span><br><span class="line">result = m.get_result_queue()</span><br><span class="line"><span class="comment"># 从task队列取任务,并把结果写入result队列:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        n = task.get(timeout=<span class="number">1</span>)</span><br><span class="line">        print(<span class="string">'run task %d * %d...'</span> % (n, n))</span><br><span class="line">        r = <span class="string">'%d * %d = %d'</span> % (n, n, n*n)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        result.put(r)</span><br><span class="line">    <span class="keyword">except</span> Queue.Empty:</span><br><span class="line">        print(<span class="string">'task queue is empty.'</span>)</span><br><span class="line"><span class="comment"># 处理结束:</span></span><br><span class="line">print(<span class="string">'worker exit.'</span>)</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="正则表达式">正则表达式</h2><p>正则表达式知识见笔者的另一篇笔记：<a href="https://www.zybuluo.com/king/note/43674" target="_blank" rel="external">https://www.zybuluo.com/king/note/43674</a><br>正则匹配默认是贪婪匹配。<br>Python提供re模块，包含所有正则表达式的功能。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配成功则返回一个Match对象，否则返回None</span></span><br><span class="line">re.match(<span class="string">r'^\d&#123;3&#125;\-\d&#123;3,8&#125;$'</span>, <span class="string">'010-12345'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切分字符串</span></span><br><span class="line">re.split(<span class="string">r'[\s\,\;]+'</span>, <span class="string">'a,b;; c  d'</span>) <span class="comment"># ['a', 'b', 'c', 'd']</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分组，如果正则表达式中定义了组，就可以在Match对象上用group()方法提取出子串来</span></span><br><span class="line">m = re.match(<span class="string">r'^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$'</span>, <span class="string">'010-12345'</span>)</span><br><span class="line">m.group(<span class="number">0</span>) <span class="comment"># 永远是原始字符串，此处为：'010-12345'</span></span><br><span class="line">m.group(<span class="number">1</span>) <span class="comment"># '010'</span></span><br><span class="line">m.group(<span class="number">2</span>) <span class="comment"># '12345'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># eg：提取时间</span></span><br><span class="line">t = <span class="string">'19:05:30'</span></span><br><span class="line">m = re.match(<span class="string">r'^(0[0-9]|1[0-9]|2[0-3]|[0-9])\:(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]|[0-9])\:(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]|[0-9])$'</span>, t)</span><br><span class="line">m.groups() <span class="comment"># ('19', '05', '30')</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 预编译正则表达式</span></span><br><span class="line">re_telephone = re.compile(<span class="string">r'^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$'</span>)</span><br><span class="line"><span class="comment"># 使用：</span></span><br><span class="line">re_telephone.match(<span class="string">'010-12345'</span>).groups() <span class="comment"># ('010', '12345')</span></span><br><span class="line">re_telephone.match(<span class="string">'010-8086'</span>).groups() <span class="comment"># ('010', '8086')</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="常用内建模块">常用内建模块</h2><hr>
<h3 id="datetime">datetime</h3><p>datetime是Python处理日期和时间的标准库。<br>日期和时间部分的格式见：<a href="https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" target="_blank" rel="external">https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># datetime是模块，datetime模块还包含一个datetime类</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前日期和时间</span></span><br><span class="line">now = datetime.now() <span class="comment"># 015-10-18 16:59:01.015529</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用指定日期时间创建datetime</span></span><br><span class="line">dt = datetime(<span class="number">2015</span>, <span class="number">4</span>, <span class="number">19</span>, <span class="number">12</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1970年1月1日 00:00:00 UTC+00:00时区的时刻称为epoch time，记为0（1970年以前的时间timestamp为负数），当前时间就是相对于epoch time的秒数，称为timestamp，时间戳</span></span><br><span class="line"><span class="comment"># 全球各地的计算机在任意时刻的timestamp都是完全相同的</span></span><br><span class="line"><span class="comment"># datetime转换为timestamp</span></span><br><span class="line">dt.timestamp() <span class="comment"># 1429417200.0， 小数位表示毫秒数</span></span><br><span class="line"><span class="comment"># timestamp转换为datetime，本地时间</span></span><br><span class="line">datetime.fromtimestamp(t)</span><br><span class="line"><span class="comment"># timestamp转换为datetime，UTC标准时区</span></span><br><span class="line">datetime.utcfromtimestamp(t)</span><br><span class="line"></span><br><span class="line"><span class="comment"># str转换为datetime，转换后无时区信息</span></span><br><span class="line">cday = datetime.strptime(<span class="string">'2015-6-1 18:19:59'</span>, <span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line"><span class="comment"># datetime转换为str</span></span><br><span class="line">dt.strftime(<span class="string">'%a, %b %d %H:%M'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># datetime加减，需要导入timedelta类</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line">dt + timedelta(days=<span class="number">2</span>, hours=<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地时间转换为UTC时间</span></span><br><span class="line"><span class="comment"># 一个datetime类型有一个时区属性tzinfo，但是默认为None，所以无法区分这个datetime到底是哪个时区</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta, timezone</span><br><span class="line"><span class="comment"># 创建时区UTC+8:00</span></span><br><span class="line">tz_utc_8 = timezone(timedelta(hours=<span class="number">8</span>))</span><br><span class="line">now = datetime.now()</span><br><span class="line"><span class="comment"># 强制设置为UTC+8:00</span></span><br><span class="line">dt = now.replace(tzinfo=tz_utc_8)</span><br><span class="line">print(dt) <span class="comment"># 2015-10-18 17:13:21.891555+08:00</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 时区转换</span></span><br><span class="line"><span class="comment"># 拿到UTC时间，并强制设置时区为UTC+0:00:</span></span><br><span class="line">utc_dt = datetime.utcnow().replace(tzinfo=timezone.utc)</span><br><span class="line"><span class="comment"># astimezone()将转换时区为北京时间:</span></span><br><span class="line">bj_dt = utc_dt.astimezone(timezone(timedelta(hours=<span class="number">8</span>)))</span><br><span class="line"><span class="comment"># astimezone()将转换时区为东京时间:</span></span><br><span class="line">tokyo_dt = utc_dt.astimezone(timezone(timedelta(hours=<span class="number">9</span>)))</span><br><span class="line"><span class="comment"># astimezone()将bj_dt转换时区为东京时间:</span></span><br><span class="line">tokyo_dt2 = bj_dt.astimezone(timezone(timedelta(hours=<span class="number">9</span>)))</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="collections">collections</h3><h4 id="namedtuple">namedtuple</h4><p>namedtuple是一个函数，它用来创建一个自定义的tuple对象，并且规定了tuple元素的个数，并可以用属性而不是索引来引用tuple的某个元素。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个点坐标</span></span><br><span class="line"><span class="comment"># namedtuple('名称', [属性list]):</span></span><br><span class="line">Point = namedtuple(<span class="string">'Point'</span>, [<span class="string">'x'</span>, <span class="string">'y'</span>])</span><br><span class="line">p = Point(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="comment"># 引用元素</span></span><br><span class="line">p.x</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个圆</span></span><br><span class="line">Circle = namedtuple(<span class="string">'Circle'</span>, [<span class="string">'x'</span>, <span class="string">'y'</span>, <span class="string">'r'</span>])</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="deque">deque</h4><p>list是线性存储，数据量大的时候，插入和删除效率很低。<br>deque是为了高效实现插入和删除操作的双向列表，适合用于队列和栈。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line">q = deque([<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>])</span><br><span class="line">q.append(<span class="string">'x'</span>)</span><br><span class="line">q.appendleft(<span class="string">'y'</span>)</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="defaultdict">defaultdict</h4><p>使用dict时，如果引用的Key不存在，就会抛出KeyError。如果希望key不存在时，返回一个默认值，就可以用defaultdict</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"></span><br><span class="line">dd = defaultdict(<span class="keyword">lambda</span>: <span class="string">'N/A'</span>) <span class="comment"># 默认值调用函数返回</span></span><br><span class="line">dd[<span class="string">'key1'</span>] = <span class="string">'abc'</span></span><br><span class="line">dd[<span class="string">'key1'</span>] <span class="comment"># key1存在，返回'abc'</span></span><br><span class="line">dd[<span class="string">'key2'</span>] <span class="comment"># key2不存在，返回默认值'N/A'</span></span><br></pre></td></tr></table></figure>
<hr>
<h4 id="OrderedDict">OrderedDict</h4><p>使用dict时，Key是无序的。在对dict做迭代时，我们无法确定Key的顺序。<br>如果要保持Key的顺序，可以用OrderedDict：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"></span><br><span class="line"><span class="comment"># OrderedDict的Key会按照插入的顺序排列，不是Key本身排序</span></span><br><span class="line">od = OrderedDict([(<span class="string">'a'</span>, <span class="number">1</span>), (<span class="string">'b'</span>, <span class="number">2</span>), (<span class="string">'c'</span>, <span class="number">3</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取key列表</span></span><br><span class="line">list(od.keys()) <span class="comment"># ['a', 'b', 'c']</span></span><br></pre></td></tr></table></figure>
<p>OrderedDict可以实现一个FIFO（先进先出）的dict，当容量超出限制时，先删除最早添加的Key：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LastUpdatedOrderedDict</span><span class="params">(OrderedDict)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, capacity)</span>:</span></span><br><span class="line">        super(LastUpdatedOrderedDict, self).__init__()</span><br><span class="line">        self._capacity = capacity</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setitem__</span><span class="params">(self, key, value)</span>:</span></span><br><span class="line">        containsKey = <span class="number">1</span> <span class="keyword">if</span> key <span class="keyword">in</span> self <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> len(self) - containsKey &gt;= self._capacity:</span><br><span class="line">            last = self.popitem(last=<span class="keyword">False</span>)</span><br><span class="line">            print(<span class="string">'remove:'</span>, last)</span><br><span class="line">        <span class="keyword">if</span> containsKey:</span><br><span class="line">            <span class="keyword">del</span> self[key]</span><br><span class="line">            print(<span class="string">'set:'</span>, (key, value))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'add:'</span>, (key, value))</span><br><span class="line">        OrderedDict.__setitem__(self, key, value)</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="Counter">Counter</h4><p>Counter是一个简单的计数器<br>Counter实际上也是dict的一个子类<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计字符出现的个数</span></span><br><span class="line">c = Counter()</span><br><span class="line"><span class="keyword">for</span> ch <span class="keyword">in</span> <span class="string">'programming'</span>:</span><br><span class="line">    c[ch] = c[ch] + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(c)</span><br><span class="line"><span class="comment"># Counter(&#123;'g': 2, 'm': 2, 'r': 2, 'n': 1, 'i': 1, 'a': 1, 'p': 1, 'o': 1&#125;)</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="base64">base64</h3><p>Base64是一种用64个字符来表示任意二进制数据的方法。<br>Base64的原理很简单，首先，准备一个包含64个字符的数组：<br><code>[&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, ... &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, ... &#39;0&#39;, &#39;1&#39;, ... &#39;+&#39;, &#39;/&#39;]</code><br>然后，对二进制数据进行处理，每3个字节一组，一共是3x8=24bit，划为4组，每组正好6个bit，可以表示0 ~ 2^6-1，一共64个int，对应上方的数组。查表获得相应的4个字符，就是编码后的字符串。<br>所以，Base64编码会把3字节的二进制数据编码为4字节的文本数据。如果要编码的二进制数据不是3的倍数，Base64用\x00字节在末尾补足后，再在编码的末尾加上1个或2个=号，表示补了多少字节，解码的时候，会自动去掉。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编码</span></span><br><span class="line">base64.b64encode(<span class="string">b'i\xb7\x1d\xfb\xef\xff'</span>) <span class="comment"># b'abcd++//'</span></span><br><span class="line"><span class="comment"># 把+和/分别变成-和_，可用于：URL</span></span><br><span class="line">base64.urlsafe_b64encode(<span class="string">b'i\xb7\x1d\xfb\xef\xff'</span>) <span class="comment"># b'abcd--__'</span></span><br><span class="line"><span class="comment"># 解码</span></span><br><span class="line">base64.b64decode(<span class="string">b'abcd++//'</span>)</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="struct">struct</h3><p>struct模块用于解决bytes和其他二进制数据类型的转换。<br>struct模块定义的数据类型可以参考Python官方文档：<a href="https://docs.python.org/3/library/struct.html#format-characters" target="_blank" rel="external">https://docs.python.org/3/library/struct.html#format-characters</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="comment"># 把任意数据类型变成bytes</span></span><br><span class="line"><span class="comment"># pack的第一个参数是处理指令，&gt;表示字节顺序是big-endian，也就是网络序，I表示4字节无符号整数。</span></span><br><span class="line"><span class="comment"># 后面的参数个数要和处理指令一致</span></span><br><span class="line">struct.pack(<span class="string">'&gt;I'</span>, <span class="number">10240099</span>) <span class="comment"># b'\x00\x9c@c'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把bytes变成相应的数据类型</span></span><br><span class="line"><span class="comment"># 根据&gt;IH的说明，后面的bytes依次变为I：4字节无符号整数和H：2字节无符号整数</span></span><br><span class="line">struct.unpack(<span class="string">'&gt;IH'</span>, <span class="string">b'\xf0\xf0\xf0\xf0\x80\x80'</span>) <span class="comment"># (4042322160, 32896)</span></span><br></pre></td></tr></table></figure></p>
<p>Windows的位图文件（.bmp）是一种非常简单的文件格式，我们来用struct分析一下。<br>首先找一个bmp文件，没有的话用“画图”画一个。读入前30个字节来分析：<br><code>s = b&#39;\x42\x4d\x38\x8c\x0a\x00\x00\x00\x00\x00\x36\x00\x00\x00\x28\x00\x00\x00\x80\x02\x00\x00\x68\x01\x00\x00\x01\x00\x18\x00&#39;</code></p>
<p>BMP格式采用小端方式存储数据，文件头的结构按顺序如下：</p>
<p>两个字节：’BM’表示Windows位图，’BA’表示OS/2位图；<br>一个4字节整数：表示位图大小；<br>一个4字节整数：保留位，始终为0；<br>一个4字节整数：实际图像的偏移量；<br>一个4字节整数：Header的字节数；<br>一个4字节整数：图像宽度；<br>一个4字节整数：图像高度；<br>一个2字节整数：始终为1；<br>一个2字节整数：颜色数。</p>
<p>组合起来用unpack读取：<br><code>struct.unpack(&#39;&lt;ccIIIIIIHH&#39;, s)</code><br>结果为：<code>(b&#39;B&#39;, b&#39;M&#39;, 691256, 0, 54, 40, 640, 360, 1, 24)</code></p>
<hr>
<h3 id="hashlib">hashlib</h3><p>Python的hashlib提供了常见的摘要算法，如MD5，SHA1等等。</p>
<p>摘要算法又称哈希算法、散列算法。它通过一个函数，把任意长度的数据转换为一个长度固定的数据串（通常用16进制的字符串表示）。目的是为了发现原始数据是否被人篡改过。</p>
<p>摘要函数是一个单向函数，计算f(data)很容易，但通过digest反推data却非常困难。</p>
<p>MD5是最常见的摘要算法，速度很快，生成结果是固定的128 bit字节，通常用一个32位的16进制字符串表示。<br>SHA1的结果是160 bit字节，通常用一个40位的16进制字符串表示。<br>比SHA1更安全的算法是SHA256和SHA512，不过越安全的算法不仅越慢，而且摘要长度更长。</p>
<p>有没有可能两个不同的数据通过某个摘要算法得到了相同的摘要？完全有可能，因为任何摘要算法都是把无限多的数据集合映射到一个有限的集合中。这种情况称为碰撞，并非不可能出现，但是非常非常困难。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算出一个字符串的MD5值：</span></span><br><span class="line">md5 = hashlib.md5()</span><br><span class="line">md5.update(<span class="string">'how to use md5 in python hashlib?'</span>.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">print(md5.hexdigest()) <span class="comment"># d26a53750bc40b38b65a520292f69306</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果数据量很大，可以分块多次调用update()，最后计算的结果是一样的</span></span><br><span class="line">md5 = hashlib.md5()</span><br><span class="line">md5.update(<span class="string">'how to use md5 in '</span>.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">md5.update(<span class="string">'python hashlib?'</span>.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">print(md5.hexdigest())</span><br><span class="line"></span><br><span class="line"><span class="comment"># SHA1</span></span><br><span class="line">sha1 = hashlib.sha1()</span><br><span class="line">sha1.update(<span class="string">'how to use sha1 in python hashlib?'</span>.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">print(sha1.hexdigest())</span><br></pre></td></tr></table></figure>
<p>摘要算法应用如：存储用户口令的摘要。<br>为防止简单密码被黑客用MD5反推，对原始口令加一个复杂字符串再计算MD5，俗称“加盐”。经过Salt处理的MD5口令，只要Salt不被黑客知道，即使用户输入简单口令，也很难通过MD5反推明文口令。</p>
<p>要注意摘要算法不是加密算法，不能用于加密（因为无法通过摘要反推明文），只能用于防篡改，但是它的单向计算特性决定了可以在不存储明文口令的情况下验证用户口令。</p>
<hr>
<h3 id="itertools">itertools</h3><p>Python的内建模块itertools提供了非常有用的用于操作迭代对象的函数。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从3开始的自然数序列</span></span><br><span class="line">itertools.count(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把传入的一个序列无限重复下去</span></span><br><span class="line">itertools.cycle(<span class="string">'ABC'</span>) <span class="comment"># 'A','B','C'....</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重复一个元素，如果省略第二个参数则无限重复</span></span><br><span class="line">ns = itertools.repeat(<span class="string">'A'</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过takewhile()等函数取出一个有限的序列</span></span><br><span class="line">natuals = itertools.count(<span class="number">1</span>)</span><br><span class="line">ns = itertools.takewhile(<span class="keyword">lambda</span> x: x &lt;= <span class="number">10</span>, natuals)</span><br><span class="line"></span><br><span class="line"><span class="comment"># chain()把一组迭代对象串联起来，形成一个更大的迭代器</span></span><br><span class="line">itertools.chain(<span class="string">'ABC'</span>, <span class="string">'XYZ'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># groupby()把迭代器中相邻的重复元素挑出来放在一起</span></span><br><span class="line"><span class="comment"># 只要作用于函数的两个元素返回的值相等，这两个元素就被认为是在一组的</span></span><br><span class="line">itertools.groupby(<span class="string">'AAABBBCCAAA'</span>)</span><br><span class="line">itertools.groupby(<span class="string">'AaaBBbcCAAa'</span>, <span class="keyword">lambda</span> c: c.upper())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找出指定序列中的所有2个元素的有序排列组合，返回tuple</span></span><br><span class="line">itertools.permutations([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="XML">XML</h3><p>操作XML有两种方法：DOM和SAX。DOM会把整个XML读入内存，解析为树，因此占用内存大，解析慢，优点是可以任意遍历树的节点。SAX是流模式，边读边解析，占用内存小，解析快，缺点是我们需要自己处理事件。<br>正常情况下，优先考虑SAX，因为DOM实在太占内存。</p>
<p>当SAX解析器读到一个节点时：<code>&lt;a href=&quot;/&quot;&gt;python&lt;/a&gt;</code><br>会产生3个事件：<br>start_element事件，在读取<code>&lt;a href=&quot;/&quot;&gt;</code>时；<br>char_data事件，在读取<code>python</code>时；<br>end_element事件，在读取<code>&lt;/a&gt;</code>时。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from xml.parsers.expat import ParserCreate&#10;&#10;# &#24517;&#39035;&#23454;&#29616;&#36825;&#19977;&#20010;&#26041;&#27861;&#10;class DefaultSaxHandler(object):&#10;    def start_element(self, name, attrs):&#10;        print(&#39;sax:start_element: %s, attrs: %s&#39; % (name, str(attrs)))&#10;&#10;    def end_element(self, name):&#10;        print(&#39;sax:end_element: %s&#39; % name)&#10;&#10;    def char_data(self, text):&#10;        print(&#39;sax:char_data: %s&#39; % text)&#10;&#10;xml = r&#39;&#39;&#39;&#60;?xml version=&#34;1.0&#34;?&#62;&#10;&#60;ol&#62;&#10;    &#60;li&#62;&#60;a href=&#34;/python&#34;&#62;Python&#60;/a&#62;&#60;/li&#62;&#10;    &#60;li&#62;&#60;a href=&#34;/ruby&#34;&#62;Ruby&#60;/a&#62;&#60;/li&#62;&#10;&#60;/ol&#62;&#10;&#39;&#39;&#39;&#10;&#10;handler = DefaultSaxHandler()&#10;parser = ParserCreate()&#10;parser.StartElementHandler = handler.start_element&#10;parser.EndElementHandler = handler.end_element&#10;parser.CharacterDataHandler = handler.char_data&#10;parser.Parse(xml)</span><br></pre></td></tr></table></figure>
<p>需要注意的是读取一大段字符串时，CharacterDataHandler可能被多次调用，所以需要自己保存起来，在EndElementHandler里面再合并。</p>
<p>生成XML：最简单也是最有效的生成XML的方法是拼接字符串。复杂的XML呢？建议你不要用XML，改成JSON。</p>
<hr>
<h3 id="HTMLParser">HTMLParser</h3><p>HTML本质上是XML的子集，但是HTML的语法没有XML那么严格，所以不能用标准的DOM或SAX来解析HTML<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> html.parser <span class="keyword">import</span> HTMLParser</span><br><span class="line"><span class="keyword">from</span> html.entities <span class="keyword">import</span> name2codepoint</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHTMLParser</span><span class="params">(HTMLParser)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_starttag</span><span class="params">(self, tag, attrs)</span>:</span></span><br><span class="line">        print(<span class="string">'&lt;%s&gt;'</span> % tag)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_endtag</span><span class="params">(self, tag)</span>:</span></span><br><span class="line">        print(<span class="string">'&lt;/%s&gt;'</span> % tag)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_startendtag</span><span class="params">(self, tag, attrs)</span>:</span></span><br><span class="line">        print(<span class="string">'&lt;%s/&gt;'</span> % tag)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_data</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        print(data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_comment</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        print(<span class="string">'&lt;!--'</span>, data, <span class="string">'--&gt;'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_entityref</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        print(<span class="string">'&amp;%s;'</span> % name)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_charref</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        print(<span class="string">'&amp;#%s;'</span> % name)</span><br><span class="line"></span><br><span class="line">parser = MyHTMLParser()</span><br><span class="line">parser.feed(<span class="string">'''&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!-- test html parser --&gt;</span><br><span class="line">    &lt;p&gt;Some &lt;a href=\"#\"&gt;html&lt;/a&gt; HTML&amp;nbsp;tutorial...&lt;br&gt;END&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;&lt;/html&gt;'''</span>)</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="urllib">urllib</h3><hr>
<h4 id="Get">Get</h4><p>urllib的request模块可以发送一个GET请求到指定的页面，然后返回HTTP的响应：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> request.urlopen(<span class="string">'https://api.douban.com/v2/book/2129650'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line">    print(<span class="string">'Status:'</span>, f.status, f.reason)</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> f.getheaders():</span><br><span class="line">        print(<span class="string">'%s: %s'</span> % (k, v))</span><br><span class="line">    print(<span class="string">'Data:'</span>, data.decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure></p>
<p>如果我们要想模拟浏览器发送GET请求，就需要使用Request对象，通过往Request对象添加HTTP头，我们就可以把请求伪装成浏览器。例如，模拟iPhone 6去请求豆瓣首页：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">req = request.Request(<span class="string">'http://www.douban.com/'</span>)</span><br><span class="line">req.add_header(<span class="string">'User-Agent'</span>, <span class="string">'Mozilla/6.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/8.0 Mobile/10A5376e Safari/8536.25'</span>)</span><br><span class="line"><span class="keyword">with</span> request.urlopen(req) <span class="keyword">as</span> f:</span><br><span class="line">    print(<span class="string">'Status:'</span>, f.status, f.reason)</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> f.getheaders():</span><br><span class="line">        print(<span class="string">'%s: %s'</span> % (k, v))</span><br><span class="line">    print(<span class="string">'Data:'</span>, f.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="Post">Post</h4><p>如果要以POST发送一个请求，只需要把参数data以bytes形式传入。</p>
<p>我们模拟一个微博登录，先读取登录的邮箱和口令，然后按照weibo.cn的登录页的格式以username=xxx&amp;password=xxx的编码传入：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request, parse</span><br><span class="line"></span><br><span class="line">print(<span class="string">'Login to weibo.cn...'</span>)</span><br><span class="line">email = input(<span class="string">'Email: '</span>)</span><br><span class="line">passwd = input(<span class="string">'Password: '</span>)</span><br><span class="line">login_data = parse.urlencode([</span><br><span class="line">    (<span class="string">'username'</span>, email),</span><br><span class="line">    (<span class="string">'password'</span>, passwd),</span><br><span class="line">    (<span class="string">'entry'</span>, <span class="string">'mweibo'</span>),</span><br><span class="line">    (<span class="string">'client_id'</span>, <span class="string">''</span>),</span><br><span class="line">    (<span class="string">'savestate'</span>, <span class="string">'1'</span>),</span><br><span class="line">    (<span class="string">'ec'</span>, <span class="string">''</span>),</span><br><span class="line">    (<span class="string">'pagerefer'</span>, <span class="string">'https://passport.weibo.cn/signin/welcome?entry=mweibo&amp;r=http%3A%2F%2Fm.weibo.cn%2F'</span>)</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">req = request.Request(<span class="string">'https://passport.weibo.cn/sso/login'</span>)</span><br><span class="line">req.add_header(<span class="string">'Origin'</span>, <span class="string">'https://passport.weibo.cn'</span>)</span><br><span class="line">req.add_header(<span class="string">'User-Agent'</span>, <span class="string">'Mozilla/6.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/8.0 Mobile/10A5376e Safari/8536.25'</span>)</span><br><span class="line">req.add_header(<span class="string">'Referer'</span>, <span class="string">'https://passport.weibo.cn/signin/login?entry=mweibo&amp;res=wel&amp;wm=3349&amp;r=http%3A%2F%2Fm.weibo.cn%2F'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> request.urlopen(req, data=login_data.encode(<span class="string">'utf-8'</span>)) <span class="keyword">as</span> f:</span><br><span class="line">    print(<span class="string">'Status:'</span>, f.status, f.reason)</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> f.getheaders():</span><br><span class="line">        print(<span class="string">'%s: %s'</span> % (k, v))</span><br><span class="line">    print(<span class="string">'Data:'</span>, f.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="Handler">Handler</h4><p>如果还需要更复杂的控制，比如通过一个Proxy去访问网站，我们需要利用ProxyHandler来处理，示例代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">proxy_handler = urllib.request.ProxyHandler(&#123;<span class="string">'http'</span>: <span class="string">'http://www.example.com:3128/'</span>&#125;)</span><br><span class="line">proxy_auth_handler = urllib.request.ProxyBasicAuthHandler()</span><br><span class="line">proxy_auth_handler.add_password(<span class="string">'realm'</span>, <span class="string">'host'</span>, <span class="string">'username'</span>, <span class="string">'password'</span>)</span><br><span class="line">opener = urllib.request.build_opener(proxy_handler, proxy_auth_handler)</span><br><span class="line"><span class="keyword">with</span> opener.open(<span class="string">'http://www.example.com/login.html'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="常用第三方模块">常用第三方模块</h2><h3 id="PIL">PIL</h3><p>PIL：Python Imaging Library， 用于进行图像处理<br>由于PIL仅支持到Python 2.7，加上年久失修，于是一群志愿者在PIL的基础上创建了兼容的版本，名字叫Pillow，支持最新Python 3.x。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------缩小图像--------------------</span></span><br><span class="line"><span class="comment"># 打开一个jpg图像文件，注意是当前路径:</span></span><br><span class="line">im = Image.open(<span class="string">'test.jpg'</span>)</span><br><span class="line"><span class="comment"># 获得图像尺寸:</span></span><br><span class="line">w, h = im.size</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缩放到50%:</span></span><br><span class="line">im.thumbnail((w//<span class="number">2</span>, h//<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把缩放后的图像用jpeg格式保存:</span></span><br><span class="line">im.save(<span class="string">'thumbnail.jpg'</span>, <span class="string">'jpeg'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -----------------模糊效果----------------------------------</span></span><br><span class="line"><span class="comment"># 应用模糊滤镜:</span></span><br><span class="line">im2 = im.filter(ImageFilter.BLUR)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------生成字母验证码图片--------------------</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw, ImageFont, ImageFilter</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机字母:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rndChar</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> chr(random.randint(<span class="number">65</span>, <span class="number">90</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机颜色1:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rndColor</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (random.randint(<span class="number">64</span>, <span class="number">255</span>), random.randint(<span class="number">64</span>, <span class="number">255</span>), random.randint(<span class="number">64</span>, <span class="number">255</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机颜色2:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rndColor2</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (random.randint(<span class="number">32</span>, <span class="number">127</span>), random.randint(<span class="number">32</span>, <span class="number">127</span>), random.randint(<span class="number">32</span>, <span class="number">127</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 240 x 60:</span></span><br><span class="line">width = <span class="number">60</span> * <span class="number">4</span></span><br><span class="line">height = <span class="number">60</span></span><br><span class="line">image = Image.new(<span class="string">'RGB'</span>, (width, height), (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line"><span class="comment"># 创建Font对象:</span></span><br><span class="line">font = ImageFont.truetype(<span class="string">'Arial.ttf'</span>, <span class="number">36</span>)</span><br><span class="line"><span class="comment"># 创建Draw对象:</span></span><br><span class="line">draw = ImageDraw.Draw(image)</span><br><span class="line"><span class="comment"># 填充每个像素:</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(width):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(height):</span><br><span class="line">        draw.point((x, y), fill=rndColor())</span><br><span class="line"><span class="comment"># 输出文字:</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    draw.text((<span class="number">60</span> * t + <span class="number">10</span>, <span class="number">10</span>), rndChar(), font=font, fill=rndColor2())</span><br><span class="line"><span class="comment"># 模糊:</span></span><br><span class="line">image = image.filter(ImageFilter.BLUR)</span><br><span class="line">image.save(<span class="string">'code.jpg'</span>, <span class="string">'jpeg'</span>)</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="virtualenv">virtualenv</h3><p>virtualenv就是用来为一个应用创建一套“隔离”的Python运行环境。需要用pip安装。</p>
<p>命令virtualenv就可以创建一个独立的Python运行环境，我们还加上了参数–no-site-packages，这样，已经安装到系统Python环境中的所有第三方包都不会复制过来。</p>
<p><em>此处教程写的是Mac，故笔记略过</em></p>
<hr>
<h3 id="图形界面">图形界面</h3><p>相关第三方库： Tk、wxWidgets、Qt、GTK<br>Python自带的tkinter封装了访问Tk的接口。<br>Tk支持多个操作系统，使用Tcl语言开发。Tk会调用操作系统的GUI接口。</p>
<hr>
<h4 id="tkinter">tkinter</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox <span class="keyword">as</span> messagebox</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Application</span><span class="params">(Frame)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, master=None)</span>:</span></span><br><span class="line">        Frame.__init__(self, master)</span><br><span class="line">        self.pack() <span class="comment"># 把Widget加入到父容器中，grid()可以更复杂</span></span><br><span class="line">        self.createWidgets()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">createWidgets</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.nameInput = Entry(self)</span><br><span class="line">        self.nameInput.pack()</span><br><span class="line">        self.alertButton = Button(self, text=<span class="string">'Hello'</span>, command=self.hello)</span><br><span class="line">        self.alertButton.pack()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(self)</span>:</span></span><br><span class="line">        name = self.nameInput.get() <span class="keyword">or</span> <span class="string">'world'</span></span><br><span class="line">        messagebox.showinfo(<span class="string">'Message'</span>, <span class="string">'Hello, %s'</span> % name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = Application()</span><br><span class="line"><span class="comment"># 设置窗口标题:</span></span><br><span class="line">app.master.title(<span class="string">'Hello World'</span>)</span><br><span class="line"><span class="comment"># 主消息循环:</span></span><br><span class="line">app.mainloop()</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="网络编程">网络编程</h2><h3 id="TCP/IP简介">TCP/IP简介</h3><p>互联网协议簇（Internet Protocol Suite）就是通用协议标准。Internet是由inter和net两个单词组合起来的，原意就是连接“网络”的网络，有了Internet，任何私有网络，只要支持这个协议，就可以联入互联网。</p>
<p>互联网协议包含了上百种协议标准，但是最重要的两个协议是TCP和IP协议，所以，大家把互联网的协议简称TCP/IP协议。</p>
<p>IP协议负责把数据从一台计算机通过网络发送到另一台计算。IP包的特点是按块发送，途径多个路由，但不保证能到达，也不保证顺序到达。IP地址实际上是一个32位整数（称为IPv4），以字符串表示的IP地址如192.168.0.1实际上是把32位整数按8位分组后的数字表示，目的是便于阅读。IPv6地址实际上是一个128位整数。</p>
<p>TCP协议则是建立在IP协议之上的。TCP协议负责在两台计算机之间建立可靠连接，保证数据包按顺序到达。TCP协议会通过握手建立连接，然后，对每个IP包编号，确保对方按顺序收到，如果包丢掉了，就自动重发。</p>
<p>许多常用的更高级的协议都是建立在TCP协议基础上的，比如用于浏览器的HTTP协议、发送邮件的SMTP协议等。</p>
<p>一个IP包除了包含要传输的数据外，还包含源IP地址和目标IP地址，源端口和目标端口。</p>
<hr>
<h3 id="TCP编程">TCP编程</h3><p>Socket是网络编程的一个抽象概念。通常我们用一个Socket表示打开了一个网络链接，而打开一个Socket需要知道目标计算机的IP地址和端口号，再指定协议类型即可。</p>
<p>创建TCP连接时，主动发起连接的叫客户端，被动响应连接的叫服务器。</p>
<p>访问新浪：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入socket库:</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个socket:</span></span><br><span class="line"><span class="comment"># AF_INET：IPv4      AF_INET6：IPv6</span></span><br><span class="line"><span class="comment"># SOCK_STREAM：面向流的TCP协议</span></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"><span class="comment"># 建立连接。注意参数是tuple</span></span><br><span class="line">s.connect((<span class="string">'www.sina.com.cn'</span>, <span class="number">80</span>))</span><br><span class="line"><span class="comment"># 发送数据:</span></span><br><span class="line">s.send(<span class="string">b'GET / HTTP/1.1\r\nHost: www.sina.com.cn\r\nConnection: close\r\n\r\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接收数据:</span></span><br><span class="line">buffer = []</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="comment"># 每次最多接收1k字节:</span></span><br><span class="line">    d = s.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="keyword">if</span> d:</span><br><span class="line">        buffer.append(d)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">data = <span class="string">b''</span>.join(buffer)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭连接:</span></span><br><span class="line">s.close()</span><br><span class="line"></span><br><span class="line">header, html = data.split(<span class="string">b'\r\n\r\n'</span>, <span class="number">1</span>)</span><br><span class="line">print(header.decode(<span class="string">'utf-8'</span>))</span><br><span class="line"><span class="comment"># 把接收的数据写入文件:</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">r'F:\sina.html'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(html)</span><br></pre></td></tr></table></figure></p>
<p>标准端口<br>Web：80<br>SMTP：25<br>FTP：21<br>端口号小于1024的是Internet标准服务的端口<br>端口号大于1024的，可以任意使用。</p>
<p>服务器进程首先要绑定一个端口并监听来自其他客户端的连接。如果某个客户端连接过来了，服务器就与该客户端建立Socket连接，随后的通信就靠这个Socket连接了。</p>
<p>一个Socket依赖4项：服务器地址、服务器端口、客户端地址、客户端端口来唯一确定一个Socket。</p>
<p>服务器：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"><span class="comment"># 监听端口。小于1024的端口号必须要有管理员权限才能绑定</span></span><br><span class="line">s.bind((<span class="string">'127.0.0.1'</span>, <span class="number">9999</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用listen()方法开始监听端口，传入的参数指定等待连接的最大数量：</span></span><br><span class="line">s.listen(<span class="number">5</span>)</span><br><span class="line">print(<span class="string">'Waiting for connection...'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器程序通过一个永久循环来接受来自客户端的连接</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="comment"># 接受一个新连接:</span></span><br><span class="line">    sock, addr = s.accept()</span><br><span class="line">    <span class="comment"># 创建新线程来处理TCP连接:</span></span><br><span class="line">    t = threading.Thread(target=tcplink, args=(sock, addr))</span><br><span class="line">    t.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tcplink</span><span class="params">(sock, addr)</span>:</span></span><br><span class="line">    print(<span class="string">'Accept new connection from %s:%s...'</span> % addr)</span><br><span class="line">    sock.send(<span class="string">b'Welcome!'</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        data = sock.recv(<span class="number">1024</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data <span class="keyword">or</span> data.decode(<span class="string">'utf-8'</span>) == <span class="string">'exit'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        sock.send((<span class="string">'Hello, %s!'</span> % data).encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    sock.close()</span><br><span class="line">    print(<span class="string">'Connection from %s:%s closed.'</span> % addr)</span><br></pre></td></tr></table></figure></p>
<p>客户端程序：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"><span class="comment"># 建立连接:</span></span><br><span class="line">s.connect((<span class="string">'127.0.0.1'</span>, <span class="number">9999</span>))</span><br><span class="line"><span class="comment"># 接收欢迎消息:</span></span><br><span class="line">print(s.recv(<span class="number">1024</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> [<span class="string">b'Michael'</span>, <span class="string">b'Tracy'</span>, <span class="string">b'Sarah'</span>]:</span><br><span class="line">    <span class="comment"># 发送数据:</span></span><br><span class="line">    s.send(data)</span><br><span class="line">    print(s.recv(<span class="number">1024</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">s.send(<span class="string">b'exit'</span>)</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure></p>
<p>同一个端口，被一个Socket绑定了以后，就不能被别的Socket绑定了。</p>
<hr>
<h3 id="UDP">UDP</h3><p>TCP建立可靠连接<br>UDP不需要建立连接，不保证到达</p>
<p>服务器：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># SOCK_DGRAM指定了这个Socket的类型是UDP</span></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绑定端口：</span></span><br><span class="line">s.bind((<span class="string">'127.0.0.1'</span>, <span class="number">9999</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 相比TCP，不需要调用listen()方法，直接接收来自任何客户端的数据</span></span><br><span class="line"><span class="comment"># 注意这里省掉了多线程</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="comment"># 接收数据:</span></span><br><span class="line">    <span class="comment"># recvfrom()方法返回数据和客户端的地址与端口</span></span><br><span class="line">    data, addr = s.recvfrom(<span class="number">1024</span>)</span><br><span class="line">    print(<span class="string">'Received from %s:%s.'</span> % addr)</span><br><span class="line">    s.sendto(<span class="string">b'Hello, %s!'</span> % data, addr)</span><br></pre></td></tr></table></figure></p>
<p>客户端：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> [<span class="string">b'Michael'</span>, <span class="string">b'Tracy'</span>, <span class="string">b'Sarah'</span>]:</span><br><span class="line">    <span class="comment"># 发送数据:</span></span><br><span class="line">    s.sendto(data, (<span class="string">'127.0.0.1'</span>, <span class="number">9999</span>))</span><br><span class="line">    <span class="comment"># 接收数据:</span></span><br><span class="line">    print(s.recv(<span class="number">1024</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="收发邮件">收发邮件</h2><p>未整理：<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001432005156604f38836be1707453eb025ce8c3079978d000" target="_blank" rel="external">http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001432005156604f38836be1707453eb025ce8c3079978d000</a></p>
<hr>
<h2 id="数据库">数据库</h2><h3 id="SQLite">SQLite</h3><p>SQLite是一种嵌入式数据库，它的数据库就是一个文件。C语言编写，体积很小。不能承受高并发访问。</p>
<p>操作关系数据库：</p>
<ol>
<li>连接到数据库。一个数据库连接称为Connection。</li>
<li>打开游标，称之为Cursor。通过Cursor执行SQL语句，获得执行结果。</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入SQLite驱动:</span></span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接到SQLite数据库</span></span><br><span class="line"><span class="comment"># 如果文件不存在，会自动在当前目录创建:</span></span><br><span class="line">conn = sqlite3.connect(<span class="string">'test.db'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个Cursor:</span></span><br><span class="line">cursor = conn.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行一条SQL语句，创建user表:</span></span><br><span class="line">cursor.execute(<span class="string">'create table user (id varchar(20) primary key, name varchar(20))'</span>)</span><br><span class="line"><span class="comment"># 继续执行一条SQL语句，插入一条记录:</span></span><br><span class="line">cursor.execute(<span class="string">'insert into user (id, name) values (\'1\', \'Michael\')'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过rowcount获得插入的行数:</span></span><br><span class="line">cursor.rowcount   <span class="comment"># 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭Cursor:</span></span><br><span class="line">cursor.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交事务:</span></span><br><span class="line">conn.commit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭Connection:</span></span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure>
<p>查询上述数据库：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">conn = sqlite3.connect(<span class="string">'test.db'</span>)</span><br><span class="line">cursor = conn.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行查询语句:</span></span><br><span class="line">cursor.execute(<span class="string">'select * from user where id=?'</span>, <span class="string">'1'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得查询结果集:</span></span><br><span class="line">values = cursor.fetchall()   <span class="comment"># [('1', 'Michael')]</span></span><br><span class="line"></span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure></p>
<p>打开后一定记得关闭。建议用try catch finally</p>
<p>使用Cursor对象执行insert，update，delete语句时，执行结果由rowcount返回影响的行数。</p>
<p>使用Cursor对象执行select语句时，通过featchall()可以拿到结果集。结果集是一个list，每个元素都是一个tuple，对应一行记录。</p>
<hr>
<h3 id="MySQL">MySQL</h3><p>MySQL内部有多种数据库引擎，最常用的引擎是支持数据库事务的InnoDB。</p>
<p>安装MySQL：<a href="http://dev.mysql.com/downloads/mysql/5.6.html" target="_blank" rel="external">http://dev.mysql.com/downloads/mysql/5.6.html</a><br>安装时请选择UTF-8编码。</p>
<p>安装MySQL驱动：<code>pip install mysql-connector-python --allow-external mysql-connector-python</code></p>
<p>暂时跳过：<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014320107391860b39da6901ed41a296e574ed37104752000" target="_blank" rel="external">http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014320107391860b39da6901ed41a296e574ed37104752000</a></p>
<hr>
<h3 id="SQLAlchemy">SQLAlchemy</h3><p>数据库表是一个二维表，包含多行多列。一个list表示多行，list的每一个元素是tuple，表示一行记录。<br>Python的DB-API返回的数据结构这样表示：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    (<span class="string">'1'</span>, <span class="string">'Michael'</span>),</span><br><span class="line">    (<span class="string">'2'</span>, <span class="string">'Bob'</span>),</span><br><span class="line">    (<span class="string">'3'</span>, <span class="string">'Adam'</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>用tuple表示一行很难看出表的结构。如果把一个tuple用class实例来表示，就可以更容易地看出表的结构来：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, id, name)</span>:</span></span><br><span class="line">        self.id = id</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">[</span><br><span class="line">    User(<span class="string">'1'</span>, <span class="string">'Michael'</span>),</span><br><span class="line">    User(<span class="string">'2'</span>, <span class="string">'Bob'</span>),</span><br><span class="line">    User(<span class="string">'3'</span>, <span class="string">'Adam'</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>这就是传说中的ORM技术：Object-Relational Mapping，把关系数据库的表结构映射到对象上。<br>ORM框架用于做这个转换。Python中，最有名的ORM框架是SQLAlchemy</p>
<p>先跳过：<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014320114981139589ac5f02944601ae22834e9c521415000" target="_blank" rel="external">http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014320114981139589ac5f02944601ae22834e9c521415000</a></p>
<hr>
<h2 id="Web开发">Web开发</h2><p>响应代码：200表示成功，3xx表示重定向，4xx表示客户端发送的请求有错误，5xx表示服务器端处理时发生了错误</p>
<p>HTTP GET请求的格式：<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="request">GET <span class="string">/path</span> HTTP/1.1</span></span><br><span class="line"><span class="attribute">Header1</span>: <span class="string">Value1</span></span><br><span class="line"><span class="attribute">Header2</span>: <span class="string">Value2</span></span><br><span class="line"><span class="attribute">Header3</span>: <span class="string">Value3</span></span><br></pre></td></tr></table></figure></p>
<p>每个Header一行一个，换行符是\r\n。</p>
<p>HTTP POST请求的格式：<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="request">POST <span class="string">/path</span> HTTP/1.1</span></span><br><span class="line"><span class="attribute">Header1</span>: <span class="string">Value1</span></span><br><span class="line"><span class="attribute">Header2</span>: <span class="string">Value2</span></span><br><span class="line"><span class="attribute">Header3</span>: <span class="string">Value3</span></span><br><span class="line"></span><br><span class="line"><span class="armasm"><span class="keyword">body </span><span class="preprocessor">data</span> goes here...</span></span><br></pre></td></tr></table></figure></p>
<p>当遇到连续两个\r\n时，Header部分结束，后面的数据全部是Body。</p>
<p>HTTP响应的格式：<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">200</span> OK</span><br><span class="line"><span class="label">Header1:</span> Value1</span><br><span class="line"><span class="label">Header2:</span> Value2</span><br><span class="line"><span class="label">Header3:</span> Value3</span><br><span class="line"></span><br><span class="line">body data goes here...</span><br></pre></td></tr></table></figure></p>
<p>HTTP响应如果包含body，也是通过\r\n\r\n来分隔的。请再次注意，Body的数据类型由Content-Type头来确定，如果是网页，Body就是文本，如果是图片，Body就是图片的二进制数据。<br>当存在Content-Encoding时，Body数据是被压缩的</p>
<p>详细了解HTTP协议《HTTP权威指南》。</p>
<p>HTML定义了一套语法规则，告诉浏览器如何把一个丰富多彩的页面显示出来。<br>CSS是Cascading Style Sheets（层叠样式表）的简称，CSS用来控制HTML里的所有元素如何展现。</p>
<p>给标题元素<code>&lt;h1&gt;</code>加一个样式，变成48号字体，灰色，带阴影：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">title</span>&gt;</span>Hello<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">style</span>&gt;</span><span class="css"></span><br><span class="line">    <span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">      <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#333333</span></span></span>;</span><br><span class="line">      <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">48px</span></span></span>;</span><br><span class="line">      <span class="rule"><span class="attribute">text-shadow</span>:<span class="value"> <span class="number">3px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="hexcolor">#666666</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line">  </span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>JavaScript是为了让HTML具有交互性而作为脚本语言添加的，JavaScript既可以内嵌到HTML中，也可以从外部链接到HTML中。</p>
<p>当用户点击标题时把标题变成红色，就必须通过JavaScript来实现：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">title</span>&gt;</span>Hello<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">style</span>&gt;</span><span class="css"></span><br><span class="line">    <span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">      <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#333333</span></span></span>;</span><br><span class="line">      <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">48px</span></span></span>;</span><br><span class="line">      <span class="rule"><span class="attribute">text-shadow</span>:<span class="value"> <span class="number">3px</span> <span class="number">3px</span> <span class="number">3px</span> <span class="hexcolor">#666666</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line">  </span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">document</span>.getElementsByTagName(<span class="string">'h1'</span>)[<span class="number">0</span>].style.color = <span class="string">'#ff0000'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">h1</span> <span class="attribute">onclick</span>=<span class="value">"change()"</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="WSGI接口">WSGI接口</h3><p>一个Web应用的本质就是：</p>
<ol>
<li>浏览器发送一个HTTP请求；</li>
<li>服务器收到请求，生成一个HTML文档；</li>
<li>服务器把HTML文档作为HTTP响应的Body发送给浏览器；</li>
<li>浏览器收到HTTP响应，从HTTP Body取出HTML文档并显示。</li>
</ol>
<p>WSGI：Web Server Gateway Interface，它只要求Web开发者实现一个函数，就可以响应HTTP请求。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># environ：一个包含所有HTTP请求信息的dict对象；</span></span><br><span class="line"><span class="comment"># start_response：一个发送HTTP响应的函数。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">application</span><span class="params">(environ, start_response)</span>:</span></span><br><span class="line">    <span class="comment"># 发送HTTP响应的Header，只能发送一次</span></span><br><span class="line">    <span class="comment"># 参数一是HTTP响应码</span></span><br><span class="line">    <span class="comment"># 参数二是一组list表示的HTTP Header，每个Header用一个包含两个str的tuple表示</span></span><br><span class="line">    start_response(<span class="string">'200 OK'</span>, [(<span class="string">'Content-Type'</span>, <span class="string">'text/html'</span>)])</span><br><span class="line">    <span class="comment"># 发送HTTP响应的Body</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="string">b'&lt;h1&gt;Hello, web!&lt;/h1&gt;'</span>]</span><br></pre></td></tr></table></figure></p>
<p>application()函数由WSGI服务器来调用</p>
<p>Python内置了一个WSGI服务器，这个模块叫wsgiref，它是用纯Python编写的WSGI服务器的参考实现。所谓“参考实现”是指该实现完全符合WSGI标准，但是不考虑任何运行效率，仅供开发和测试使用。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从wsgiref模块导入:</span></span><br><span class="line"><span class="keyword">from</span> wsgiref.simple_server <span class="keyword">import</span> make_server</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">application</span><span class="params">(environ, start_response)</span>:</span></span><br><span class="line">    start_response(<span class="string">'200 OK'</span>, [(<span class="string">'Content-Type'</span>, <span class="string">'text/html'</span>)])</span><br><span class="line">    body = <span class="string">'&lt;h1&gt;Hello, %s!&lt;/h1&gt;'</span> % (environ[<span class="string">'PATH_INFO'</span>][<span class="number">1</span>:] <span class="keyword">or</span> <span class="string">'web'</span>)</span><br><span class="line">    <span class="keyword">return</span> [body.encode(<span class="string">'utf-8'</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个服务器，IP地址为空，端口是8000，处理函数是application:</span></span><br><span class="line">httpd = make_server(<span class="string">''</span>, <span class="number">8000</span>, application)</span><br><span class="line">print(<span class="string">'Serving HTTP on port 8000...'</span>)</span><br><span class="line"><span class="comment"># 开始监听HTTP请求:</span></span><br><span class="line">httpd.serve_forever()</span><br></pre></td></tr></table></figure></p>
<p>启动成功后，打开浏览器，输入<a href="http://localhost:8000/，就可以看到结果" target="_blank" rel="external">http://localhost:8000/，就可以看到结果</a></p>
<hr>
<h3 id="使用Web框架_Flask">使用Web框架 Flask</h3><p>一个Web App，就是写一个WSGI的处理函数，针对每个HTTP请求进行响应。<br>在WSGI接口之上能进一步抽象，让我们专注于用一个函数处理一个URL，至于URL到函数的映射，就交给Web框架来做。</p>
<p>写一个app.py，处理3个URL，分别是：</p>
<ul>
<li>GET /：首页，返回Home；</li>
<li>GET /signin：登录页，显示登录表单；</li>
<li>POST /signin：处理登录表单，显示登录结果。</li>
</ul>
<p>Flask通过Python的装饰器在内部自动地把URL和函数给关联起来。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="decorator">@app.route('/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">home</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;h1&gt;Home&lt;/h1&gt;'</span></span><br><span class="line"></span><br><span class="line"><span class="decorator">@app.route('/signin', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">signin_form</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'''&lt;form action="/signin" method="post"&gt;</span><br><span class="line">              &lt;p&gt;&lt;input name="username"&gt;&lt;/p&gt;</span><br><span class="line">              &lt;p&gt;&lt;input name="password" type="password"&gt;&lt;/p&gt;</span><br><span class="line">              &lt;p&gt;&lt;button type="submit"&gt;Sign In&lt;/button&gt;&lt;/p&gt;</span><br><span class="line">              &lt;/form&gt;'''</span></span><br><span class="line"></span><br><span class="line"><span class="decorator">@app.route('/signin', methods=['POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">signin</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 需要从request对象读取表单内容：</span></span><br><span class="line">    <span class="keyword">if</span> request.form[<span class="string">'username'</span>]==<span class="string">'admin'</span> <span class="keyword">and</span> request.form[<span class="string">'password'</span>]==<span class="string">'password'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;h3&gt;Hello, admin!&lt;/h3&gt;'</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;h3&gt;Bad username or password.&lt;/h3&gt;'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure>
<p>除了Flask，常见的Python Web框架还有：</p>
<ul>
<li>Django：全能型Web框架；</li>
<li>web.py：一个小巧的Web框架；</li>
<li>Bottle：和Flask类似的Web框架；</li>
<li>Tornado：Facebook的开源异步Web框架。</li>
</ul>
<hr>
<h3 id="使用模板">使用模板</h3><p>使用模板，我们需要预先准备一个HTML文档，这个HTML文档不是普通的HTML，而是嵌入了一些变量和指令，然后，根据我们传入的数据，替换后，得到最终的HTML，发送给用户</p>
<p>MVC</p>
<ul>
<li>Python处理URL的函数就是C：Controller，Controller负责业务逻辑，比如检查用户名是否存在，取出用户信息等等；</li>
<li>包含变量的模板就是V：View，View负责显示逻辑，通过简单地替换一些变量，View最终输出的就是用户看到的HTML。</li>
<li>Model是用来传给View的，这样View在替换变量的时候，就可以从Model中取出相应的数据。</li>
</ul>
<p>Flask通过render_template()函数来实现模板的渲染。和Web框架类似，Python的模板也有很多种。Flask默认支持的模板是jinja2。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="decorator">@app.route('/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">home</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'home.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="decorator">@app.route('/signin', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">signin_form</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'form.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="decorator">@app.route('/signin', methods=['POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">signin</span><span class="params">()</span>:</span></span><br><span class="line">    username = request.form[<span class="string">'username'</span>]</span><br><span class="line">    password = request.form[<span class="string">'password'</span>]</span><br><span class="line">    <span class="keyword">if</span> username==<span class="string">'admin'</span> <span class="keyword">and</span> password==<span class="string">'password'</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'signin-ok.html'</span>, username=username)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'form.html'</span>, message=<span class="string">'Bad username or password'</span>, username=username)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></p>
<p>编写jinja2模板：</p>
<p>home.html<br>用来显示首页的模板：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">title</span>&gt;</span>Home<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">h1</span> <span class="attribute">style</span>=<span class="value">"font-style:italic"</span>&gt;</span>Home<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>form.html<br>用来显示登录表单的模板：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">title</span>&gt;</span>Please Sign In<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">  &#123;% if message %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="title">p</span> <span class="attribute">style</span>=<span class="value">"color:red"</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="title">form</span> <span class="attribute">action</span>=<span class="value">"/signin"</span> <span class="attribute">method</span>=<span class="value">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">legend</span>&gt;</span>Please sign in:<span class="tag">&lt;/<span class="title">legend</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">input</span> <span class="attribute">name</span>=<span class="value">"username"</span> <span class="attribute">placeholder</span>=<span class="value">"Username"</span> <span class="attribute">value</span>=<span class="value">"&#123;&#123; username &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">input</span> <span class="attribute">name</span>=<span class="value">"password"</span> <span class="attribute">placeholder</span>=<span class="value">"Password"</span> <span class="attribute">type</span>=<span class="value">"password"</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">button</span> <span class="attribute">type</span>=<span class="value">"submit"</span>&gt;</span>Sign In<span class="tag">&lt;/<span class="title">button</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>signin-ok.html<br>登录成功的模板：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">title</span>&gt;</span>Welcome, &#123;&#123; username &#125;&#125;<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">p</span>&gt;</span>Welcome, &#123;&#123; username &#125;&#125;!<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>一定要把模板放到正确的templates目录下，templates和app.py在同级目录下</p>
<p>Jinja2模板中，我们用表示一个需要替换的变量。很多时候，还需要循环、条件判断等指令语句，在Jinja2中，用<code>{% ... %}</code>表示指令。<br>比如循环输出页码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for i in page_list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"/page/&#123;&#123; i &#125;&#125;"</span>&gt;</span>&#123;&#123; i &#125;&#125;<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure></p>
<p>除了Jinja2，常见的模板还有：</p>
<ul>
<li>Mako：用&lt;% … %&gt;和${xxx}的一个模板；</li>
<li>Cheetah：也是用&lt;% … %&gt;和${xxx}的一个模板；</li>
<li>Django：Django是一站式框架，内置一个用<code>{% ... %}</code>和的模板。</li>
</ul>
<hr>
<h2 id="异步IO">异步IO</h2><p>同步IO：等待IO操作完成，才能继续进行下一步操作。<br>异步IO：当代码需要执行一个耗时的IO操作时，它只发出IO指令，并不等待IO结果，然后就去执行其他代码了。一段时间后，当IO返回结果时，再通知CPU进行处理。</p>
<p>异步IO模型需要一个消息循环，在消息循环中，主线程不断地重复“读取消息-处理消息”这一过程：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">loop = get_event_loop()</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    event = loop.get_event()</span><br><span class="line">    process_event(event)</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="协程">协程</h3><p>协程，又称微线程，纤程。英文名Coroutine。协程的概念很早就提出来了，但直到最近几年才在某些语言（如Lua）中得到广泛应用。</p>
<p>子程序调用是通过栈实现的，一个线程就是执行一个子程序。子程序调用总是一个入口，一次返回，调用顺序是明确的。</p>
<p>协程看上去也是子程序，但执行过程中，在子程序内部可中断，然后转而执行别的子程序，在适当的时候再返回来接着执行。</p>
<p>和多线程比，最大的优势就是协程极高的执行效率。因为子程序切换不是线程切换，而是由程序自身控制，因此，没有线程切换的开销，和多线程比，线程数量越多，协程的性能优势就越明显。第二大优势就是不需要多线程的锁机制，因为只有一个线程，也不存在同时写变量冲突，在协程中控制共享资源不加锁，只需要判断状态就好了，所以执行效率比多线程高很多。</p>
<p>协程是一个线程执行，那怎么利用多核CPU呢？最简单的方法是多进程+协程</p>
<p>Python对协程的支持是通过generator实现的。</p>
<p>在generator中，我们不但可以通过for循环来迭代，还可以不断调用next()函数获取由yield语句返回的下一个值。但是Python的yield不但可以返回一个值，它还可以接收调用者发出的参数。</p>
<p>协程实现的生产者-消费者模型：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一个generator</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consumer</span><span class="params">()</span>:</span></span><br><span class="line">    r = <span class="string">''</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="comment"># 当produce调用send语句时，这里的yield仅用来接收参数交赋值给n， consumer不会产生中断</span></span><br><span class="line">        <span class="comment"># 当comsumer循环一圈后再执行到这里，此时produce还没有调用send，comsumer会中断执行</span></span><br><span class="line">        n = <span class="keyword">yield</span> r <span class="comment"># 拿到消息n，下面处理后再通过yield传回结果</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> n:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        print(<span class="string">'[CONSUMER] Consuming %s...'</span> % n)</span><br><span class="line">        r = <span class="string">'200 OK'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">produce</span><span class="params">(c)</span>:</span></span><br><span class="line">    c.send(<span class="keyword">None</span>) <span class="comment"># 启动生成器，不会调用yield。参数不传None会报错，</span></span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; <span class="number">5</span>:</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line">        print(<span class="string">'[PRODUCER] Producing %s...'</span> % n)</span><br><span class="line">        r = c.send(n) <span class="comment"># 切换到consumer执行。拿到结果后继续</span></span><br><span class="line">        print(<span class="string">'[PRODUCER] Consumer return: %s'</span> % r)</span><br><span class="line">    c.close() <span class="comment"># 关闭conumer</span></span><br><span class="line"></span><br><span class="line">c = consumer()</span><br><span class="line">produce(c)</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="asyncio">asyncio</h3><p>asyncio是Python 3.4版本引入的标准库，直接内置了对异步IO的支持。</p>
<p>asyncio的编程模型就是一个消息循环。我们从asyncio模块中直接获取一个EventLoop的引用，然后把需要执行的协程扔到EventLoop中执行，就实现了异步IO。</p>
<p>用asyncio提供的@asyncio.coroutine可以把一个generator标记为coroutine类型，然后在coroutine内部用yield from调用另一个coroutine实现异步操作。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="decorator">@asyncio.coroutine # 把一个generator标记为coroutine类型</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"Hello world!"</span>)</span><br><span class="line">    <span class="comment"># 异步调用asyncio.sleep(1):</span></span><br><span class="line">    <span class="comment"># yield from语法可以方便地调用另一个generator</span></span><br><span class="line">    <span class="comment"># asyncio.sleep()也是一个coroutine，此处直接中断并执行asyncio.sleep()的消息循环</span></span><br><span class="line">    <span class="comment"># 当asyncio.sleep()返回时，线程就可以从yield from拿到返回值（此处是None），继续执行</span></span><br><span class="line">    r = <span class="keyword">yield</span> <span class="keyword">from</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    print(<span class="string">"Hello again!"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取EventLoop:</span></span><br><span class="line">loop = asyncio.get_event_loop()</span><br><span class="line"><span class="comment"># 执行coroutine</span></span><br><span class="line">loop.run_until_complete(hello())</span><br><span class="line">loop.close()</span><br></pre></td></tr></table></figure>
<p>把asyncio.sleep(1)看成是一个耗时1秒的IO操作，在此期间，主线程并未等待，而是去执行EventLoop中其他可以执行的coroutine了，因此可以实现并发执行。</p>
<p>用Task封装两个coroutine<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line"><span class="decorator">@asyncio.coroutine</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'Hello world! (%s)'</span> % threading.currentThread())</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">from</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    print(<span class="string">'Hello again! (%s)'</span> % threading.currentThread())</span><br><span class="line"></span><br><span class="line">loop = asyncio.get_event_loop()</span><br><span class="line">tasks = [hello(), hello()]</span><br><span class="line">loop.run_until_complete(asyncio.wait(tasks))</span><br><span class="line">loop.close()</span><br></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Hello world! <span class="list">(<span class="keyword">&lt;_MainThread</span><span class="list">(<span class="keyword">MainThread</span>, started <span class="number">6132</span>)</span>&gt;)</span></span><br><span class="line">Hello world! <span class="list">(<span class="keyword">&lt;_MainThread</span><span class="list">(<span class="keyword">MainThread</span>, started <span class="number">6132</span>)</span>&gt;)</span></span><br><span class="line"><span class="list">(<span class="keyword">----</span>此处中断一秒----)</span></span><br><span class="line">Hello again! <span class="list">(<span class="keyword">&lt;_MainThread</span><span class="list">(<span class="keyword">MainThread</span>, started <span class="number">6132</span>)</span>&gt;)</span></span><br><span class="line">Hello again! <span class="list">(<span class="keyword">&lt;_MainThread</span><span class="list">(<span class="keyword">MainThread</span>, started <span class="number">6132</span>)</span>&gt;)</span></span><br></pre></td></tr></table></figure></p>
<p>由打印的当前线程名称可以看出，两个coroutine是由同一个线程并发执行的。<br>如果把asyncio.sleep()换成真正的IO操作，则多个coroutine就可以由一个线程并发执行。</p>
<p>用asyncio的异步网络连接来获取sina、sohu和163的网站首页：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line"><span class="decorator">@asyncio.coroutine</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wget</span><span class="params">(host)</span>:</span></span><br><span class="line">    print(<span class="string">'wget %s...'</span> % host)</span><br><span class="line">    <span class="comment"># 这一句只是创建asyncio协程，yield from connect 才是执行协程</span></span><br><span class="line">    connect = asyncio.open_connection(host, <span class="number">80</span>)</span><br><span class="line">    reader, writer = <span class="keyword">yield</span> <span class="keyword">from</span> connect</span><br><span class="line">    header = <span class="string">'GET / HTTP/1.0\r\nHost: %s\r\n\r\n'</span> % host</span><br><span class="line">    writer.write(header.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">from</span> writer.drain()</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        line = <span class="keyword">yield</span> <span class="keyword">from</span> reader.readline()</span><br><span class="line">        <span class="keyword">if</span> line == <span class="string">b'\r\n'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        print(<span class="string">'%s header &gt; %s'</span> % (host, line.decode(<span class="string">'utf-8'</span>).rstrip()))</span><br><span class="line">    <span class="comment"># Ignore the body, close the socket</span></span><br><span class="line">    writer.close()</span><br><span class="line"></span><br><span class="line">loop = asyncio.get_event_loop()</span><br><span class="line">tasks = [wget(host) <span class="keyword">for</span> host <span class="keyword">in</span> [<span class="string">'www.sina.com.cn'</span>, <span class="string">'www.sohu.com'</span>, <span class="string">'www.163.com'</span>]]</span><br><span class="line">loop.run_until_complete(asyncio.wait(tasks))</span><br><span class="line">loop.close()</span><br></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">wget www<span class="class">.sohu</span><span class="class">.com</span>...</span><br><span class="line">wget www<span class="class">.sina</span><span class="class">.com</span><span class="class">.cn</span>...</span><br><span class="line">wget www.<span class="number">163</span><span class="class">.com</span>...</span><br><span class="line">(等待一段时间)</span><br><span class="line">(打印出sohu的header)</span><br><span class="line">www<span class="class">.sohu</span><span class="class">.com</span> <span class="tag">header</span> &gt; HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">www<span class="class">.sohu</span><span class="class">.com</span> <span class="tag">header</span> &gt; Content-Type: text/<span class="tag">html</span></span><br><span class="line">...</span><br><span class="line">(打印出sina的header)</span><br><span class="line">www<span class="class">.sina</span><span class="class">.com</span><span class="class">.cn</span> <span class="tag">header</span> &gt; HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">www<span class="class">.sina</span><span class="class">.com</span><span class="class">.cn</span> <span class="tag">header</span> &gt; Date: Wed, <span class="number">20</span> May <span class="number">2015</span> <span class="number">04</span>:<span class="number">56</span>:<span class="number">33</span> GMT</span><br><span class="line">...</span><br><span class="line">(打印出<span class="number">163</span>的header)</span><br><span class="line">www.<span class="number">163</span><span class="class">.com</span> <span class="tag">header</span> &gt; HTTP/<span class="number">1.0</span> <span class="number">302</span> Moved Temporarily</span><br><span class="line">www.<span class="number">163</span><span class="class">.com</span> <span class="tag">header</span> &gt; Server: Cdn Cache Server V2.<span class="number">0</span></span><br></pre></td></tr></table></figure></p>
<p>可见3个连接由一个线程通过coroutine并发完成。</p>
<hr>
<h3 id="async/await">async/await</h3><p>用asyncio提供的@asyncio.coroutine可以把一个generator标记为coroutine类型，然后在coroutine内部用yield from调用另一个coroutine实现异步操作。</p>
<p>为了简化并更好地标识异步IO，从Python 3.5开始引入了新的语法async和await，可以让coroutine的代码更简洁易读。</p>
<p>async和await是针对coroutine的新语法，要使用新的语法，只需要做两步简单的替换：</p>
<ul>
<li>把@asyncio.coroutine替换为async；</li>
<li>把yield from替换为await。</li>
</ul>
<p>原代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="decorator">@asyncio.coroutine</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"Hello world!"</span>)</span><br><span class="line">    r = <span class="keyword">yield</span> <span class="keyword">from</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    print(<span class="string">"Hello again!"</span>)</span><br></pre></td></tr></table></figure></p>
<p>用新语法重新编写如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"Hello world!"</span>)</span><br><span class="line">    r = <span class="keyword">await</span> asyncio.sleep(<span class="number">1</span>)</span><br><span class="line">    print(<span class="string">"Hello again!"</span>)</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="aiohttp">aiohttp</h3><p>把asyncio用在服务器端，例如Web服务器，由于HTTP连接就是IO操作，因此可以用单线程+coroutine实现多用户的高并发支持。asyncio实现了TCP、UDP、SSL等协议，aiohttp则是基于asyncio实现的HTTP框架。</p>
<p>编写一个HTTP服务器，分别处理以下URL：</p>
<ul>
<li><p><code>/</code> - 首页返回<code>b&#39;&lt;h1&gt;Index&lt;/h1&gt;&#39;</code>；</p>
</li>
<li><p><code>/hello/{name}</code> - 根据URL参数返回文本<code>hello, %s!</code>。</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> aiohttp <span class="keyword">import</span> web</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="comment"># 模拟耗时操作</span></span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">0.5</span>)</span><br><span class="line">    <span class="keyword">return</span> web.Response(body=<span class="string">b'&lt;h1&gt;Index&lt;/h1&gt;'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="comment"># 模拟耗时操作</span></span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">0.5</span>)</span><br><span class="line">    text = <span class="string">'&lt;h1&gt;hello, %s!&lt;/h1&gt;'</span> % request.match_info[<span class="string">'name'</span>]</span><br><span class="line">    <span class="keyword">return</span> web.Response(body=text.encode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">(loop)</span>:</span></span><br><span class="line">    app = web.Application(loop=loop)</span><br><span class="line">    app.router.add_route(<span class="string">'GET'</span>, <span class="string">'/'</span>, index)</span><br><span class="line">    app.router.add_route(<span class="string">'GET'</span>, <span class="string">'/hello/&#123;name&#125;'</span>, hello)</span><br><span class="line">    srv = <span class="keyword">await</span> loop.create_server(app.make_handler(), <span class="string">'127.0.0.1'</span>, <span class="number">8000</span>)</span><br><span class="line">    print(<span class="string">'Server started at http://127.0.0.1:8000...'</span>)</span><br><span class="line">    <span class="keyword">return</span> srv</span><br><span class="line"></span><br><span class="line">loop = asyncio.get_event_loop()</span><br><span class="line">loop.run_until_complete(init(loop))</span><br><span class="line">loop.run_forever()</span><br></pre></td></tr></table></figure>
<hr>
<p><a href="http://sebug.net/paper/books/dive-into-python3/strings.html" target="_blank" rel="external">http://sebug.net/paper/books/dive-into-python3/strings.html</a></p>
<p><a href="http://blog.csdn.net/five3/article/details/27819531" target="_blank" rel="external">python发送邮件sendmail–smtplib【带附件】</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[科学上网总结]]></title>
      <url>http://lovenight.github.io/2016/09/19/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>去年底写过一篇翻墙总结，其中的Hosts修改工具早已停止更新。ShadowSocks也被公司屏蔽掉，只能在家里用用。最近用了蓝灯，蛮方便，可惜只能用于网页浏览。最近整理了些新资料。</p>
<a id="more"></a>
<hr>
<h1 id="VPN">VPN</h1><h2 id="蓝灯Lantern">蓝灯Lantern</h2><p><a href="http://lanterncn.cn/" target="_blank" rel="external">Lantern中国站</a></p>
<p>下载安装后，打开软件即可使用，无须设置。每人有800M的免费流量，用完限速，也可购买。</p>
<hr>
<h2 id="ShadowSocks">ShadowSocks</h2><h3 id="下载">下载</h3><ul>
<li>官网：<a href="https://shadowsocks.org/en/index.html" target="_blank" rel="external">shadowsocks.org</a></li>
<li>官网下载实际上链接到Github：<a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="external">shadowsocks-windows</a><br>如果以上都打不开，可以在下面的网站找找。</li>
</ul>
<h3 id="免费账号：">免费账号：</h3><ul>
<li><a href="http://www.ishadowsocks.com/" target="_blank" rel="external">http://www.ishadowsocks.com/</a>  注意：每6小时更换一次密码</li>
</ul>
<h3 id="收费账号：">收费账号：</h3><ul>
<li><a href="https://shadowsocks.com/" target="_blank" rel="external">Shadowsocks.com</a>：我目前正在用这家的账号，<strong>注意这不是shadowsocks官网</strong></li>
<li><a href="http://www.godusevpn.net/" target="_blank" rel="external">佛跳墙</a></li>
</ul>
<h3 id="使用方法：">使用方法：</h3><p>直接把我CSDN博客上发过的图片扒过来：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/30/18/29/5/1.png" alt="1.png"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/30/18/29/5/2.png" alt="2.png"></p>
<p>不用的时候退出软件即可。</p>
<hr>
<h1 id="hosts">hosts</h1><p>获取最新Hosts：<a href="https://coding.net/u/scaffrey/p/hosts/git/raw/master/hosts" target="_blank" rel="external">racaljk/hosts</a><br>直接全选、复制、粘贴到文本文件，保存并重命名为<code>hosts</code>，无后缀名。然后把该文件剪切到<code>C:\WINDOWS\system32\drivers\etc</code>文件夹下。</p>
<p>也可以使用该项目作者提供的工具自动更新hosts：<a href="https://coding.net/u/scaffrey/p/hosts/git/tree/master/tools" target="_blank" rel="external">Host Tools</a></p>
<hr>
<h1 id="其他资料">其他资料</h1><h2 id="翻墙相关网站">翻墙相关网站</h2><ul>
<li><a href="https://www.dou-bi.co/" target="_blank" rel="external">逗比根据地</a>这是某大神的个人博客，专研花式科学上网</li>
<li><a href="http://htcui.com/4938.html" target="_blank" rel="external">2016年最新Google hosts 持续更新|屏蔽网站和APP广告|登陆谷歌、GooglePlay、脸书、推特、Github必备</a> 亲测可用，较繁琐，要去网盘下载。</li>
<li><a href="http://laod.cn/hosts/2016-google-hosts.html" target="_blank" rel="external">2016 Google hosts 持续更新</a> 这个我没用过</li>
</ul>
<hr>
<h2 id="部分墙外网站">部分墙外网站</h2><p>用于测试翻墙效果</p>
<ul>
<li><a href="https://www.google.com.hk" target="_blank" rel="external">Google</a></li>
<li><a href="https://www.youtube.com" target="_blank" rel="external">YouTube</a></li>
<li><a href="https://www.facebook.com" target="_blank" rel="external">FaceBook</a></li>
<li><a href="https://onedrive.live.com" target="_blank" rel="external">OneDrive</a></li>
<li><a href="http://www.panoramio.com" target="_blank" rel="external">Panoramio</a></li>
<li><a href="http://www.flickr.com" target="_blank" rel="external">Flickr</a></li>
<li><a href="https://drive.google.com" target="_blank" rel="external">GoogleDrive</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git push报错Bad file number的解决方法]]></title>
      <url>http://lovenight.github.io/2016/09/19/git-push%E6%8A%A5%E9%94%99Bad-file-number%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="错误提示">错误提示</h1><pre><code>ssh:connect <span class="keyword">to</span> host github.com port <span class="number">22</span>:bad <span class="type">file</span> <span class="type">number</span>
</code></pre><hr>
<h1 id="解决方法">解决方法</h1><p>将端口修改为 443</p>
<p>1.打开<code>~\.ssh\config</code>文件（~为你的系统当前用户文件夹），如果没有就新建一个，内容为</p>
<pre><code>Host github<span class="class">.com</span>
Hostname ssh<span class="class">.github</span><span class="class">.com</span>
Port <span class="number">443</span>
</code></pre><p>2.关闭并重启终端。再次push即可看到成功提示</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[王宗昱：道教的六天说]]></title>
      <url>http://lovenight.github.io/2016/08/02/%E7%8E%8B%E5%AE%97%E6%98%B1%EF%BC%9A%E9%81%93%E6%95%99%E7%9A%84%E5%85%AD%E5%A4%A9%E8%AF%B4/</url>
      <content type="html"><![CDATA[<p><em>前言：尽信《书》，不如无《书》。经文、论文未必句句是真。然瑕不掩瑜，读完可对六天有大致的了解。</em></p>
<p>道教的六天说</p>
<p>王宗昱</p>
<p>“六天”这个概念在早期道教的经典里是经常见到的，道教对它的批判也是显而易见的。然而，中国学术界对这个概念及其在道教史上的演化一直没有作出深入的讨论[1]。“六天”这个本出于儒家的概念何以在道教中这么重要，反而鲜见于儒家经典，道教对它的批判传达给了我们什么信息？</p>
<p>一、六天的来历</p>
<p>在正史和儒家的经典里，我目前见到的最早的言及“六天”一词的材料是《礼记》孔颖达疏和《旧唐书》[2]。《礼记·郊特牲》孔疏中说：</p>
<blockquote>
<p>先儒说郊，其义有二。案《圣证论》以天体无二，郊即圜丘，圜丘即郊。郑氏以为天有六天，丘郊各异。今具载郑义兼以王氏难。郑氏谓天有六天，天为至极之尊，其体只应是一。而郑氏以为六者，指其尊极清虚之体其实是一，论其五行生育之功则别有五。以五配一，故为六天。[3]</p>
</blockquote>
<p>《旧唐书·礼仪志》中所录贞观二年礼部尚书许敬宗的奏文中有云：</p>
<blockquote>
<p>二年七月，礼部尚书许敬宗与礼官等又奏议：据祠令及新礼，并用郑玄六天之议，圆丘祀昊天上帝，南郊祭太微感帝，明堂祭太微五帝。谨按郑玄此义，唯据纬书，所说六天，皆谓星象，而昊天上帝，不属穹苍。故注《月令》及《周官》，皆谓圆丘所祭昊天上帝为北辰耀魄宝。考其所说，舛谬特深。按《周易》云：日月丽于天，百谷草木丽于地。又云：在天成象，在地成形。足明辰象非天，草木非地。《毛诗传》云：元气昊大，则称昊天。此则苍天为体，不入星辰之例。且天地各一，是曰两仪。天尚无二，焉得有六。[4]</p>
</blockquote>
<p>由上面的材料可知，六天指的是以郑玄为代表的儒家对官方祭礼的解释。并且，上文所言六天均未明言该辞出于郑玄，止是王肃等人对郑玄主张所用的一种代称。虽然现存《孝经》、《礼记》和《周官》等书的郑玄注文中均未有“六天”字样，但循其文义并质之史书，可知“六天”所蕴涵的内容确然为郑玄之主张，信乎不诬。</p>
<a id="more"></a>
<p>古代皇帝对天神即“禘”的祭祀由来已久。上天是帝王的祖先，也是该氏族的祖先。郑玄注《礼记·大传》时解释了“禘”之义：“大祭其先祖所由生，谓郊祀天也[5]。”这之中当然糅合了该氏族或当时官方的历史观。这个天后来被称为皇天上帝或昊天上帝。五帝同样也是帝王的祖先，应该是这些历史观逐渐积淀的产物。徐旭生认为，直到战国前期，五帝的名称尚未出现，因为在《左传》、《国语》、《论语》、《墨子》《孟子》、中均不见此名称[6]。五帝一辞出现后其具体所指在相当长一段时间内亦无定论。这种指称传说中五个帝王的“五帝”在后代被人叫做“五人帝”。随着五行说的发展，出现了五方帝的观念。五方帝是否为配合五人帝而出现？尚未见证据。据《史记·封禅书》记载：“二年，东击项籍而还入关，问：故秦时上帝祠何帝也？对曰：四帝，有白、青、黄、赤帝之祠。高祖曰：吾闻天有五帝，而有四，何也？莫知其说。于是高祖曰：吾知之矣，乃待我而具五也。乃立黑帝祠，命曰北畤。有司进祠，上不亲往。悉招故秦祝官，复置太祝、太宰，如其故仪礼。[7]”这条材料既说明秦时的五方帝崇拜未能完备，也说明汉高祖所言之五方帝或许未与五人帝相对应。五方帝之出现自有渊源。即使秦人之祭白帝也并非出于五方观念。徐旭生之分析可资参考[8]。然而，刘邦以秦人祀四帝为怪而齐之以五帝当然是受了五方观念的支配。</p>
<p>中国古代皇家的祭祀制度是以秦汉儒生的规整为基础的。后世儒家便以此为据设定并“监督”皇家祭祀。但是，秦汉时的实际施行却不甚严整。以司马迁《封禅书》视之，可见一斑。他追述了舜以来的祭礼，并概括周礼：“周公既相成王，郊祀后稷以配天，宗祀文王于明堂以配上帝。自禹兴而修社祀，后稷稼穑，古有稷祠，郊社所从来尚矣。[9]”马端临曾就汉代皇家祭祀之经权史实以及司马迁之用意有一番评论：“西汉之所谓郊祀，盖袭秦之制而杂以方士之说。曰泰一，曰五帝，丛杂而祀之，皆谓之郊天。太史公作《封禅书》，所序者秦汉间不经之祠，而必以舜类上帝，三代郊祀之礼先之。[10]”。司马迁作为史家或者并非意在为后世建立典范，而后世以典范视之。由《封禅书》可知，汉武帝时开始有了对太一的祭祀。这个太一就是天神，而五方神则是它的辅佐[11]。汉武帝建的太一坛下环设五帝坛，“各如其方[12]”。“六天”的结构此时已经形成。</p>
<p>这六个祭祀对象都是被看作天神的。后来，它们才被加上纬书里的那些名称。所以马端临又说：“至班孟坚则直名其书曰《郊祀志》。盖汉世以三代之所以郊祀者祀泰一、五帝，于是以天为有六，以祀六帝为郊，自迁、固以来议论相袭而然矣。康成注二礼，凡祀天处必指以为所祀者为某帝。其所谓天者非一帝，故其所谓配天者亦非一祖，于是释帝郊祖宗以为或祀一帝，或祀五帝，各配以一祖。其病盖在于取谶纬之书解经，以秦汉之事为三代之事。然六天之祀，汉人崇之；六天之说，迁、固志之；则其谬亦非始于康成也。”。郑玄注《礼记·大传》时说：“王者之先祖皆感太微五帝之精以生。苍则灵威仰，赤则赤熛怒，黄则含枢纽，白则白招拒，黑则汁光纪。皆用正岁之正月郊祭之。盖特尊焉。《孝经》曰：郊祀后稷以配天，配灵威仰也；宗祀文王于明堂以配上帝，泛配五帝也。”[13]。皮锡瑞在《孝经郑注疏》中勾勒了秦汉时感生帝观念的概貌，可知感生帝虽与五方帝有关，却亦各有其义[14]。感天而生人的观念在关于姜嫄的传说中已然可见。五行说出现后，所感者则为五行之精，各个朝代帝王的祖先便是感于五行之德，而五帝的观念本来用于氏族祖先起源的解释，由此而有感生帝。郑玄用来解释上帝的涵义也是顺理成章的事。他很明了儒家祭天的真意所。他在注《孝经》“严父莫大于配天”时说：“尊严其父，莫大于配天。生事敬爱，死为神主也。[15]”因此，他把作为感生帝的五方帝与五人帝相配。在他对《周礼·小宗伯》的注文中就有：“五帝：苍曰灵威仰，太昊食焉；赤曰赤熛怒，炎帝食焉；黄曰含枢纽，黄帝食焉；白曰白招拒，少昊食焉；黑曰汁光纪，颛顼食焉。”[16]</p>
<p>我们可以看出，所谓儒家的六天说是郑玄根据以纬书为代表的对天神的说法就官方祭礼作的一种解释。这个解释试图对此前官方的历史观的积累作一个编排，兼容并包，各有位序。他的解释是秦王焚书以后儒生事业的总结。王肃治经学专攻郑玄。“六天”本是他讽刺郑玄的用语。他以国戚之尊使皇家罢废了五天帝的祭祀，但是郑玄的六天说在儒生中仍然颇有势力，使得此后几百年间皇家祭祀在郑学与王学之间依违不定。六天说也多为此期间儒生用来指称郑玄所主祭礼。然而自玄学之后汉学萧条千余年，程朱更以义理之学释天，不言六天，以致六天之说湮没不闻。至乾嘉之时汉学复兴，逐渐有人重理旧业，儒生方才知晓古代六天说理的真相。杭世骏《续礼记集说》汇辑了汉学宋学各家对六天的评说，可资参考。</p>
<p>二、道教对“六天”的批判</p>
<p>由前面的介绍我们可以明白了：所谓六天指的是至少自周代以来的血食牺牲的祭祀制度，而这个制度恰恰是中国官方政治制度乃至意识形态的基础。儒家的一整套礼教就是在这个基础上发展起来的。祭祀的对象则反映了至汉代逐渐形成的官方的历史观。这个历史观也就是古史辨派所指的层累地造成的中国古代史的主干。</p>
<p>道教所说的“六天”的第一个涵义从儒家本义来，但是道教通过对它的批判又给它加入了新的涵义。在早期道教经典里最能代表这种批判的是成书于刘宋时期的《三天内解经》上卷。它在批判六天的同时表达了道教自己的历史观和宗教仪式特征。</p>
<p>《三天内解经》的主要线索是叙述道教的历史观即老君传道设教的历史：老子出于空洞虚无之中，降生之后，布散玄元始三气，造设天地人物，并在伏羲女娲之时传授了无为大道、佛道和清约大道。此后，老君虽然千变万化重现人间，但是在汉代末年以前他一直是和世俗的官方政治相协调的。这个俗世的政治就叫做“六天”。《三天内解经》说，当老君传授三道时，“六天治兴，三道教行。老子帝帝出为国师。伏羲时号为郁华子，祝融时号为广寿子，……，一日九变或二十四变，千变万化，随世沉浮，不可胜载。……至周幽王时，老子知周祚当衰，被发佯狂，辞周而去。[17]”由此可见，老子与六天的分歧产生在周代。经文中指摘的“下古僭薄，妖恶转兴，酌祭巫鬼，真伪不分”正是指周以来的历史。老子辞周而去以后所传的《道德经》、《老子中经》以及《太平经》等都是与六天之治相对立的。但是，老君并没有因此立即与六天之治决裂。他试图使六天回复正道，派于吉、李微、王方平、东方朔等人，“助六天检正邪气”。因为屡教无效，所以终于“以汉安元年壬午岁五月一日，老君于蜀郡渠亭山石室中与道士张道陵将诣昆仑大治新出太上。太上谓世人不畏真正而畏邪鬼，因自号为新出老君，即拜张为太玄都正一平气三天之师，付张正一盟威之道，新出老君之制，罢废六天三道时事，平正三天，洗除浮华，纳朴归真，承受太上真经制科律”。《三天内解经》叙述的历史试图对道教的产生给一个逻辑的解释。老君所以要和六天决裂是因为六天世界中的“人鬼交错”并在汉代发展到极端。经云：“至汉世群邪滋盛，六天气勃，三道交错，疠气纵横，医巫滋彰。皆弃真从伪，弦歌鼓舞，烹杀六畜，酌祭邪鬼。”这末尾两句正是道教批判六天的关键所在。是否用血食牺牲祭祀死人是道教与“六天”的根本分歧。《三天内解经》说，老君传授正一盟威之道的同时确立了“三天正法”，它的内容是：“民不妄淫祀他鬼神，使神不饮食，师不受钱。不得淫盗治病疗疾，不得饮酒食肉。民人唯听五腊吉日祠家亲祖父母，二月八月祭社灶，自非三天正法”。这个教义被道教称为清约。《陆先生道门科略》里明确说：“盟威法师不受钱，神不饮食，谓之清约”。在《太上正一盟威法箓》和《陆先生道门科略》中都明确地讲到这类祭祀方面的规定[18]。在灵宝经系统中也可以看出这种教义。《太上洞玄灵宝智慧罪根上品大戒经》列出的“上品十戒”的第七条即为“不得杀生祠祀六天鬼神”（又见《本行宿缘经》、《太上洞玄灵宝三元玉京玄都大献经》等多种道经）。在《三天内解经》对道教的历史观作了一个较为系统的阐述之后，我们就可以看出道教有关祭祀的规定在它整个教义体系中的地位之重要。并且我们也可以通过它对六天的批判看出这样一种教义同以牺牲玉帛钟鼓为形式的周代以来的儒家礼乐制度是针锋相对的[19]。</p>
<p>实际上，在葛洪的《抱朴子内篇》中已经透露了道教对牺牲祭祀的反对态度。在《明本》篇中揭陈儒道之间的诸般区别时，葛洪曾经明确说道：“儒者祭祀以求福，道者履正以禳邪”[20]。道教要禳除的邪似乎也应包括儒家的祭祀对象，因为他还曾经提到“血食之鬼”也属于“邪气”之列[21]。他在《道意》和《勤求》两篇中对祭祀的害处有所论列，认为“长生之道，不在祭祀事鬼神也”，“夫长生制在大药耳，非祠祷之所得也。[22]”他对秦汉帝王祭祀以求仙的批评很可以说明秦皇汉武的做法并不属于道教的范畴。但是，葛洪的这些讨论并不系统，尤其是他将道教的禁止祭祀和朝廷曾经有的禁淫祀放在一起讨论，更使他的观点不甚明确[23]。由于学术界以往对儒道两家关于祭祀的立场没有做出系统的研究，所以葛洪的这些讨论未足以引起人们的注意。现在我们可以看出葛洪在《道意》篇中关于祭祀的长篇论述是有道教的教义做背景的，虽然这个教义也许是道教教团产生之后才明确的。对照《三天内解经》和《陆先生道门科略》，我们也许会明了《道意》篇所论虽然有些属于葛洪个人的发挥，但他的讨论中表达的主张与其他道教经典是一致的。他对李家道的批评不但给我们提供了《道门科略》之外的新史料，并且他还批评李家道“未纯为清省”[24]。清省之“清”和清约之“清”应属同义。更有甚者，他说到的克制“血食恶神”的道术也和我们后面要谈到的道教对儒家祭祀对象的批判态度有关系[25]。在《对俗》篇中，葛洪曾论及修道不会危及儒家的祭祀制度，但由前引材料可知葛洪的真正立场，而《对俗》篇中的设问内容恰恰说明道徒是不事祭祀的[26]。</p>
<p>道教的反对血食牺牲实际是反对祭祀死人（祖先另当别论）。道教崇拜的神明是气化而生的，并非胎生肉人。《三天内解经》云：“道源本起，出於无先，溟涬鸿濛，无有所因，虚生自然，变化生成。道德丈人者，生於元气之先，是道中之尊，故为道德丈人也。因此而有太清玄元无上三天无极大道太上老君太上丈人天帝君九老仙都君九气丈人等百千万重道气千二百官君太清玉陛下。今世人上章书太清，正谓此诸天真也。”气化而生，故不受血食。儒家的祭祀对象都是已经死去的生人，即使是那些传说中的人物也都被视为生人，想象他们死后仍然有生时的生活，故以血食牺牲祀之。大道清虚，岂有斯事？《三内天内解经》明确地指出这些作为道教徒崇拜对象的“诸天真”的气化性质，并且没有把东方朔这些历史上修道成“真”的“生人”作为道教的神明，这是符合道教的传统的。后来的《太上老君虚无自然本起经》也说：“道无有，故无祭礼，故不杀生。”我们从《三天内解经》中可以看出这种神仙体系的结构是有其宗教教义作基础的。我现在还不知道这种反对祭祀死人的教义在早期道教中究竟有多大程度的普遍性，也不知道《列仙传》中那些人物在各地民间受祀仪式的具体情况，但是，道教的神明乃至人的生命的气化性质在南北方的道教经典里是屡见不鲜的，并且我们也可以在先秦道家的经典里找到渊源，从道教静室中不设偶像的惯例也可知不祭祀生人的宗教习惯在中国古代是有着长期的传统的。如果我们在这方面进一步追讨，可能会看到先秦道家的虚无自然的义理也许本来就是从民间的某种宗教教义中发展出来的哲学。由上可见，儒道两家的历史观反映了宗教制度的对立。我当然不能说儒道两家在不同时期构造的历史观只是为其宗教目的服务的，但以《三天内解经》代表的道教的历史观是有这样的用意的。</p>
<p>陈国符先生在《南北朝天师道考长编》的《宣化》一节中首先就引证了《三天内解经》、《陆先生道门科略》以及其他大量材料用以标明道教的仪式上的特征。这说明陈先生很看重这些材料在道教教义中的重要地位。只是这些材料中除了《三天内解经》和《陆先生道门科略》外，只有取自《老子想尔注》的一条是正面指出道教严禁“祭餟祷祠”，其余大多是批判饮食鬼神的材料。不过，由陈先生汇集的材料我们也可以看出道教的灵宝、上清诸派均反对血食牺牲。需要指出的是，陈先生把这种批判看作是“巫觋旧法，六天之治”与“三天正法”的对立。我认为，虽然《三天内解经》在批判六天时也提到了“医巫滋彰”，但它的六天概念还主要是指向儒家的。</p>
<p>除了陈先生举出的那些材料，我们还可以在其他重要的道经中看到对六天的批判。《大道家令戒》中有一段与《三天内解经》颇为相似的历史叙述：“至于黄帝以来，民多机巧，服牛乘马，货赂为官。稍稍欲薄尽于五帝。夏商周三代，转见世利；秦始五霸，更相克害，有贼死者，万亿不可胜数，皆由不信其道。道乃世世为帝王师，而王者不能尊奉，至倾移颠殒之患，临危济厄，万无一存。道重人命，以周之末世始出，奉道于琅琊，以授于吉。······五霸世衰，赤汉承天，道佐代乱，出黄石之书，以授张良。道亦形变，谁能识真？汉世既定，末世纵横，民人趋利，强弱忿争。道伤民命，一去难还。故使天授气治民，曰新出老君。”《女青鬼律》所列的鬼名也把六天之鬼派在首位，名叫“高天万丈鬼”。其文云：“高天万丈鬼，百鬼中皇姓，系天六方鬼之主。”此外还有“五方直符鬼”，即东方青帝、南方赤帝、西方白帝、北方黑帝、中央黄帝，虽然它们的具体名称并非叫做“灵威仰”之类。与五方直符鬼相对照，可知“高天万丈鬼”或指昊天上帝，称为皇姓显然因为它们为皇家的祭祀对象。《女青鬼律》中所列与六天之治有关的鬼为周代以来皇家的祭祀对象，如五岳鬼、九江鬼、三河鬼、四渎鬼（二卷），皇天上帝土玉鬼（六卷），“血食鬼”则反映了道教反对用牺牲祭祀神的宗教立场。六天的祭祀对象被道教列进了鬼界，不能作为崇拜的对象。在《女青鬼律》第五卷末列出的禁忌戒条中有“不祠祭故气，不指鬼呼神”的规定。这些“故气”是已死的“无头坏军死将”，是已死的生人。说它们是故气是指它们是离开了人身的气。故气的另一个含义就是指那些被皇家祭祀的诸神。“太上”已经罢废了“六天”，即使六天之气曾经与道家相谐，但既已被“罢废”，自然被称为“故气”。在《太上正一咒鬼经》中也能看出道教的这种立场。经中有“但捕血祀诸奸神”的诗句。经中又说到道民欲求家庭平安、百事顺遂，应请神及“将军”来家中，要对付的诸种精怪首先就是“故气血食之鬼”。因此，六天世界祭祀的天神、帝王连同他们的功臣将相都属于为非作歹的鬼怪。《道要灵祇神鬼品经》引《洞渊经》说：“道言自伏羲以来，败军死将，举众形残，刀兵枉死，万万为群。或有灵尸，骨骨分张，身首他处，不得集聚。或有身无头，有足无首，有口无目，千千万亿，游托自守，依山倚水，与云中李子敖浮游云间来往海滨，东西南北，乘风驾雀，捉人鸡犬，妄令作妖，妖魅横生，求其血食。”《太上正一咒鬼经》的主旨也是批判末劫时期的社会现实，斥之为“野道”。这些野道有：“东方野道青龙蛟，南方野道炎火耀，西方野道白虎啸，北方野道玄武尾掉，中央野道黄帝。[27]”可以肯定，在天师道那里，官方祭祀的太微五帝是受到批判的。《女青鬼律》和《太上正一咒鬼经》都是天师道的经典。因此，“六天”在道教中的涵义也是由天师道确定的。“六天”在道教里既是官方政治的代称，也是鬼域的代称。</p>
<p>由于天师道对六天鬼神作了否定的批判，于是许多道经都把六天看作最凶恶的敌人。道教徒上章杀鬼，传播教义，都要把“灭六天”作为重要的任务。道教造作了“除六天玉文三天正法”，即现存于道藏中的《太上三天正法经》[28]。该经内容表明：所谓“三天正法”就是要除灭六天。“禀承三天制，驱洗六天凶”。虽然这里述说的三天正法比较空洞，不像陆修静那样重视“清约”，但它在文中也透露了所谓六天即指夏商周三代以来的政治。上清系统中还有《洞真太上神虎隐文》、《洞真太上金篇虎符真文经》和《洞真太上说智慧消魔真经》，也是颇有代表性的讨伐六天的道经。《智慧消魔经》和“神虎”诸经实为一组。《智慧消魔经》开篇即言此经中所说“可以逐邪起疾，驱精除害，散六天之鬼气，制万妖之侵者”。它宣说“六天灵鬼以病乱真”，而这组道经的功能就是“逐截六天之气”。“说之以智慧，又复记之以消魔。智慧可以驱神，消魔可以灭邪。复授之以神虎金符（神虎太符，金虎真符），使威馘六天。”在以上这些道经中，六天都是鬼域的代称。六天也逐渐有了其他名号，如“六天大鬼”（《金篇虎符经》、《神虎隐文》）、“六天大邪王”（《太上洞渊神咒经》）、“六天大魔王”（《太上太霄琅书经》、《三十九章经》等）。</p>
<p>随着道教教义的发展，出现了道教的劫运说。这种思想与道教对六天的批判是紧密相联的。在道教看来，自伏羲以后是六天之治适逢其运，而六天之治本也是禀承太上旨意而宣化的。太上屡遣真人下世“使助六天检正邪气”，也说明那时六天之治劫数未尽。新出老君颁行三天正法正一盟威之道的同时罢废了六天之治，即是宣布了它的劫数已尽，别开新纪元，修持成真者即为种民。于是，六天又成为末劫的代名词，对六天的批判也就成了道教宣说本教顺应时运、开劫度人的有机组成部分。老君复出宣化新约，则六天之治自然已至穷途末运，这是顺理成章的事。天师道的经典已经屡见末劫观念，并逐渐对六天的末劫性质加以刻画。这种末劫说的一个特征是把本来被天师道斥为鬼蜮的那些鬼怪说成是太上故意放之人间以示惩戒。《正一天师告赵升口诀》中说道：“上言今世微薄，运劫欲尽，人民凶逆，相习来久，······故放天灾于九州之内，白骨千里，虽好者百不遗一。”《太上正一咒鬼经》的某些内容颇似《女青鬼律》，也主张咒鬼名字即能除病。《女青鬼律》中也有末劫观念，宣说“除辟大厄却灾患”，“太平度世为种民”（第五卷）。但上面两段对末劫的解说却不见于《女青鬼律》。当然，对六天之鬼的解释不仅一种。《太上三天正法经》中说：“太上大道君给以鬼兵，使于三代之中驱除恶人。”《太上三天正法经》也是一部以末劫说批判六天的代表性经典，但其中却没有“放灾天下”的论述。然而，这种放灾天下的末劫说显然是很有影响的道教六天说，以至产生了《太上洞渊神咒经》这部极尽夸张之能事的道经。《太上洞渊神咒经》说：“自伏羲三千年，大水流溢，人民半死，······至周秦之灭，人民顿无。及汉魏末时，人民流移，其死亦半……”（第一卷）。在该经作者眼里，六天治下自始就是一个恐怖的世界。在该经中，那些作祟为害的也有六天鬼神：“山林社祀，世间庙主，坏军死将，脱籍之鬼，来助邪王，病痛世人。”然而，也许这样机械地去寻求《太上洞渊神咒经》的六天痕迹已经不甚相宜了，因为它的产生既有道教长期以来的观念的支配，也有西晋末年的社会背景的影响。并且，在该经中甚至并不烦言“六天”，反而在“六天大邪王”之外更立了“三天大邪王”、“九天大邪王”的名目。相比之下，倒是《太上三天正法经》较为明确地表达出“六天”一辞的末劫之义。该经叙述历史与《三天内解经》等书同其轨辙，而附之以末劫说，点出六天之治晚期的末劫性质及“除六天玉文三天正法”之“佐时除凶”的历史必然性。无论六天自始即为一魔鬼世界，抑或六天帝王们承受老君之旨后“转自伪辞”，致使太上放灾天下，末劫毕竟已经成为“六天”一辞的应有之义。在一些道经中言及六天之末劫性质时甚至毋庸赘言，其义已明，如“六天崩颓，三道正行”（《三十九章经》），“三天运明，六天运终”（《洞真太上八道命籍经》）。</p>
<p>由以上介绍已然可见：六天这个本为标识儒家祭祀制度的词汇在道教批判官方政治的过程中逐渐加入了新的定义，也日益成为道教内表述自己教义的一个词。儒家的六天一词进入道教之后，一变而为鬼域，再变而为末劫，三变而为地狱，道教的六天说成了自己教义的一个组成部分。在道教的地狱说中，我们会看到道教对六天鬼神的彻底改造并融进自身的过程，也能进一步看出道教对六天本义的记忆是那般地深刻。</p>
<p>三、酆都六天宫及其他</p>
<p>酆都六天宫的记载见于多种道经，记述较为详细的有《真诰》、《登真隐诀》、《太上洞玄灵宝三元品戒功德轻重经》、《道迹仙灵记》、《洞真上清开天三图七星移度经》、《太上洞渊北帝天蓬护命消灾神咒妙经》等书[29]。其间或有相为源流者，亦有异文互出者。笔者不擅道经年代考据，此处以《真诰》为本作叙述。这不仅因为《真诰》的叙述在诸书中最为详细完整，并且由它可以使我们进一步看出道教对六天的记忆。</p>
<p>《真诰》第十五卷《阐幽微第一》中说：“罗酆山在北方癸地。山高二千六百里，周回三万里。其山下有洞天，在山之周回一万五千里。其上其下并有鬼神宫室。山上有六宫洞，中有六宫，辄周回千里，是为六天鬼神之宫也。上为外宫洞，中为内宫，制度等耳。第一宫名为纣绝阴天宫，以次东行，第二宫名为泰煞谅事宗天宫，第三宫名为明晨耐犯武城天宫，第四宫名为恬昭罪气天宫，第五宫名为宗灵七非天宫，第六宫名为敢司连宛屡天宫。凡六天宫是为鬼神六天之治也。洞中六天宫亦同名相像如一也。世人有知酆都六天宫门名，则百鬼不敢为害。”</p>
<p>“酆”这个字自古至今可以说只有两个含义,一是指周朝的都城,二是指道教的罗酆山。当然，它还作过人的姓氏，而这个姓氏也是因为文王的后代封为酆侯故其后代姓酆。先秦至汉代的史籍中言及的“酆”君指周都，即使是偶见于纬书及《山海经》中的几条有关姜尚和后稷的材料亦可明其文中之酆当指周王立都之地[30]。周立都于丰水之滨，汉字中才有了“酆”字。“罗酆”一辞大约始见于葛洪《抱朴子》一书的《对俗》篇[31]。“酆”字成了鬼域的代称也始见于此。为何在酆字上加“罗”字，尚不得其解。“酆”与同样被道教视为鬼域的泰山在起源上并无关联，因为它这个名字就说明它有自己的原由。陶弘景在前引文字的注解中也说：“至于地狱，所在尽有，不尽一处，泰山河海亦各有焉。”至于在《阐幽微》之外是否还有什么材料指出“罗酆”在地理上有其确实的方所，我尚未见。它也和明代才由官方正式命名的的四川酆都县并无关联，俞樾曾予以辨明[32]。</p>
<p>我们知道了酆这个字的本义，就可以明了为什么在六天宫里有那样一些人物。这六宫各有主人，依次为；北太帝君炎帝，北斗君周武王，东明公夏启，西明公周文王、南明公邵公、北明公吴季子。当然，在道经中也出现过对六宫的其他解释，但是依我看，存于《阐幽微》的这个解释最切于“酆都”之名，虽然它也许并不是最早出现的解释。酆本为周朝都城，而其六宫宫主中有四位是姬家人[33]。当然，酆都成为道教指称地狱的习语以后，它也不再仅仅为姬氏独享。既然作为六天之治的代表，自有六天鬼神居其间。陶弘景以后问世的《太上元始天尊说北帝伏魔神咒经》中更变本加厉地描画酆六天宫的内景，说到六天鬼神身份时有云：“或为三皇五帝王古帝王形象，垂旒带佩”。</p>
<p>粗看起来，酆都六天宫中都是些六天鬼神。但是，这样一个结构却是逐渐发展起来的，综合了道教史上不同的信仰成分和中国古代的各种传说。并且，见于《阐幽微》的记载是否全部反映了关于酆都信仰的内容尚属疑问。要想梳理出它的轨迹恐怕是非常困难的事情，因为酆都作为地狱的代称大约在刘宋以前就已经为道教中习用。酆都、北酆、罗酆之类的词语道经中所在多有，而真正可以用来描述其形成过程之详情的则甚为寥寥[34]。本文搜罗的材料亦仅用以说明酆都六天宫之由来，不在描述其形成的历史。探赜索隐，有俟乎来者。</p>
<p>酆都作为六天之治的祭祀对象的总称自是名副其实的事，但酆都并不自始即有六天宫的结构，六宫在开始也并不叫做六天宫。酆都六天宫是酆都、六天、六宫这些原本分离的观念逐渐合成的。在许多道经里，北酆、罗酆、酆都、酆山往往并不和六宫连称。酆都与六宫结合则可能是因了道教对三官地狱的构想。《太上洞玄灵宝三元品戒功德轻重经》中讲述了天地水三官宫府，并且也不止有六宫。经中言及的宫府名号与《阐幽微》相关的有：明晨武城宫、耐犯明晨宫府、纣绝阴天府、七非恬照府、谅事府、宗灵阴天宫、连宛泉曲府、泰煞九幽府、罪气咸池府。该经中也了两处宫室分别名为北酆宫和北酆都宫（又名罗酆宫）。北酆宫中元二品右宫，下辖左府连宛泉曲府、右府泰煞九幽府、中府罪气咸池府。它们合成“北酆三宫”。罗酆宫则为下元三品右宫。该经的宫府是以三官总其纲，所谓三元（上元、中元、下元）即为天地水三官。由此可知，罗酆并非自始即有《阐幽微》中的六个宫名，并形成了《北帝酆都六宫度死法》。同样是早期灵宝经的《本行宿缘经》中虽无这些宫室名称，却可以看出它表述的酆都也是一种宫室。其经云：“不信之人，则得罪于三官地狱，三界六天。北帝大魔王之下治，在大北海，天地之北方，罗酆之山。高二千六百里，周旋三万里，内外皆七宝宫室，亦盛都也。天下鬼神之所宗处。今以此天宫名号相示。人能咒诵之者，恶鬼不敢近。”此经仍以酆都与三官相连，谓之为地狱之属。这里说到了六天。该经还说：“六天为三界大魔王，领六天鬼神之事。”由此我们可以知道酆都六天宫所以称为“六天”宫室是因为其中有六天治下的鬼神。当然，道教也把所有鬼神纳入其中。由上面这段引文，我们可以看到它与《阐幽微》的一个重要的相似之处，即六天鬼神和咒鬼的道术。在《七星移度经》中也明确讲到了酆都的六天鬼神和咒鬼术，实为《阐幽微》之先声。六天鬼神与咒鬼术本是天师道的观念。因此可以说，由酆都宫过渡到六天宫，其间肯定经过了三官地狱的模塑，六天宫室的结构则反映了对早期道教六天鬼神的记忆。发掘了“酆都六天宫”中隐含的这一信息，我们就可以解读《阐幽微》中那些文字和陶弘景的注释。</p>
<p>《阐幽微》说六天宫是“六天鬼神之宫”，似乎并不难理解。我们还要解读其中的鬼官。《三天内解经》中叙述六天之治的历史时说到前汉帝业所以中断，“皆由不信真正，无有辅翼，故群妖乱作，没于鬼官。”“没于鬼官”就是指到了鬼界做主持，也称地下主。《阐幽微》中罗列的这许多姓名正是鬼官。这些人物无一是修持道教的人，除了六天的帝王就是有功于官方的文臣武将。陶弘景在“文王为西明公领北帝师”条下注云：“此父子并称圣德而不免鬼官，虽为杀戮之过，亦当是不学仙道故也。”不学仙道即《三天内解经》说的“不信真正”。这句话明确指出了六天鬼神和道教神明在宗教归属上的对立。从他对周文王父子三人居鬼官的评论中也可以反推出道教的立场。陶弘景认为：“太公执饱秉钺，威罚最深，乃载出《列仙》；邵恩流甘棠，翻为魁职，亦复难了。[35]”按陶弘景的逻辑，姜太公杀戮过多，应列为鬼官，因为不学仙道和杀戮过多是列名鬼官的衡量标准。至于后面列入的那些鬼官则应是道教对“败军死将”的一贯立场。他们有功于六天之治，所以死后仍为六天之鬼。他们生前为那个以祭祀生人为特征的宗教服务，死后也被这个制度视为神明，甚至死后还在为这个制度服务。《阐幽微》指出有“西明郎十六人”，“主天下房庙血食之鬼”。以上这些都说明六朝时代的酆都传说继承并发挥了道教对六天之治的批判，是一以贯之的。虽然酆都六天宫的学说给六天鬼神的功能加入了新的解释，但六天鬼神的本义仍然存在。</p>
<p>道教构造的酆都六天宫实际是道教地狱说的进一步精制化。道教的地狱说是对中国古代关于人死后地下世界传说的发挥，其功能与古代的信仰已经有所不同。在某些道经中，三官也是地狱。我现在还不清楚道教为什么要在三官之外构造了一个酆都六天宫。在《太上洞玄灵宝赤书玉诀妙经》上卷中虽也偶然言及三官，却主要是用北酆表称地狱。道教的地狱说是一个庞大的系统，地狱的名目很多，也并非全都出于对六天的批判。酆都或许完全是道教自己构造的。其他与六天有关的地狱名目是泰山、蒿里、五岳四渎。这三者本都是官方祭祀之所或祭祀的对象，道教将其纳入自己的地狱系统是出于对六天之治的批判立场。</p>
<p>泰山地狱的传说由来已久，并且由中国古代文学可知其流传甚广。虽然古今中外都曾有著名学者作过探讨，但是这个论题仍然还有许多方面值得进一步发掘，其中一个重要的方面就是它与道教的关系。我所见到的前贤论著并非未曾就此方面作过讨论[36]，却未能于两者之关系给出一个根本性的解释，至多不过搜罗道经以叙述泰山信仰在道教中的传播和发展，且多为后世材料，偏于纷繁，益增迷离。我们当然不能说泰山治鬼、泰山地狱的观念是道教的发明，我目前也没有根据说这种观念是齐鲁本地文化对源于西方的周朝文化的反动，但是我们可以推测这种观念是民间对官方祭祀所持的反动立场，并且这个立场更由后来的道教得以彰显。朝野观念的不同就在于：官方认为在泰山祭祀的是神明，而民间认为他们祭祀是些死人，进而把泰山视为死人魂灵的聚集地。后代士人悚然于官方的神道设教，不敢作分外之想，以至有俞樾谓泰山治鬼为不经[37]。实际上这种观念在某些早期士人的作品中已见其影响。陆机的《泰山吟》有“幽涂延万鬼，神房集百灵”的诗句。神房中之“百灵”实为所祭祀的过世帝王。东汉的镇墓文中也有这样的文字：“生人属西长安，死人属东泰山”[38]。参合史书中的记载，我可以推断：泰山地狱的观念就是针对官方祭祀所构造的一种传说，不能视为朝野意识形态在泰山的巧合。道教至少是延续了民间的这种观念并加以刻划，凸显了泰山地狱的六天本色。前引《女青鬼律》第一卷中说到的作为皇家神明的“高天万丈鬼”就是位于泰山的鬼。该书说此鬼“住在太山东南角道水中，诸死人所归”。《道要灵祇神鬼品经》引《老子天地鬼神目录》说：“太山岳丞，姓君名后”。我现在能找到的材料只有这两条，但是足以表达道教眼中泰山地狱的真义。</p>
<p>蒿里俗称“死人里”，和泰山一样，是死人鬼魂聚集的所在。历史上曾为聚讼的“蒿里”“高里”之异同给我们留下了也许永远都解不开的谜。《史记》和《汉书》都记载：汉武帝于太初元年至泰山“亲禅高里，祠后土”[39]。这个高里是山名。我们现在已无确凿的证据说明这个高里就是蒿里，但我们有证据说这两个名字至少在晋代已被等而视之了。陆机《泰山吟》诗云：“泰山一何高，迢迢造天庭。峻极高已远，层云郁冥冥。梁父亦有馆，蒿里亦有亭。幽涂延万鬼，神房集百灵。长吟泰山侧，慷慨激楚声。[40]”颜师古对陆机的说法很不满意。他注《汉书》高里句时说：“此高字自作高下之高，而死人里谓之蒿里，或呼下里也，字则为蓬蒿之蒿。或者既见泰山神灵之府，蒿里又在其旁，即误以为高里为蒿里，混同一事。文学之士共有此谬。陆士衡尚不免，况其余乎？今流俗书本，此高字有作蒿字者，妄加增耳。”颜师古的注虽然表达了他作为缙绅之士的立场，但也透露了一个信息。我们由此知道即使作为官方认可的史书其传本也将蒿里等同于高里。并且，若无他的批评，后人委实不敢遽然将陆机诗中的蒿里等同于高里，因为即使是三百年前的大学者顾炎武也是根据他的注解去理解陆机《泰山吟》，并以此诗为等同二名之始，虽然他也取颜师古的立场且进一步为之辩诬。他甚至还发出慨叹：“自陆机《泰山吟》始以梁父蒿里并列，而后之言鬼者因之。遂令古今帝王降禅之坛，一变而为阎王鬼伯之祠矣。[41]”我们委实应该感谢颜师古和顾炎武。他们从反面证实了在民间确乎存在着巨大的一种力量，它对高里禅地表达了与官方截然相反的态度。我尚未见道教对蒿里地狱的解释，蒿里在道经中出现的次数很少。道教或许是把泰山、蒿里视为异名同实，未必有祭天祭地之区分。五岳四渎作为地狱屡见于道经，但我也尚未发现有什么材料对于它被称为地狱的原因有所论述。然而五岳四渎是官方祭祀的对象，千百年来未曾废弃。因此，道教把它称为地狱明显表达了对官方礼仪的批判态度。</p>
<p>我在前节末尾将道教的六天概念划分为三方面的涵义，这只是一种主观的假说，试图揭发出道教“六天”一辞的蕴涵。鬼域之义是揭明道教自标身份之后将与其相异的宗教均列为恶鬼[42]，其中以六天鬼神为首恶。道教所说的地狱中也有鬼魂并且以六天鬼神为主，但道教的地狱自有其功用。地狱一辞应始于汉末。虽然我们现在拿不出证据说明在汉译佛经之前即有地狱一辞，但显然在这之前已有类似的观念。《说苑》中有“唯丧与狱坐于地”的话[43]，狱在先秦本指讼案，而汉时又指囚人之所。道教的地狱则兼有这两方面的意思：死人所归和刑法之所。由此而言，地狱之鬼是丧生之鬼而非言其兴妖作怪之性质。虽然道经中并未自觉对这两类鬼神做出区分，而我们重构道教教义则不能不有此界划。六天之治将三皇五帝、败军死将的鬼魂奉为神明，则六天世界宜乎称为地狱世界。既成地狱，也同样有其考校并拘禁罪人之功能。这或许就是六天与三官并称为地狱的原因。也正是由于这种功能，使本来处于受批判地位的六天鬼神被道教容纳进自己的神灵系统。</p>
<p>诚然，六天作为地狱，它的作用当然首先是负面的。在早期上清经和灵宝经中都有许多关于如何使道教徒得免六天鬼气、除去死籍的论述（如《上清天关三图》和《太上洞玄灵宝赤书玉诀妙经》、《元始五老赤书玉篇真文天书经》等）。同时，若道教徒违背道戒，惩罚的办法也是把他放入地狱。这些地狱除了三官之外，还有酆都、泰山、五岳四渎等。于是，六天地狱也逐渐成为道教考校世人或道教徒的地方。同样是《元始五老赤书玉篇真文天书经》，它的上卷和中卷是明显以六天为敌的，要“制北酆，正鬼气”；但在下卷却请出了“北酆都伯”等六天鬼神为道教行使考校职能。该书说：“敕太乙使者下与北酆都伯使者周行天地，司察人神功过深浅，列言上宫。有修斋立德，即勒录仙籍鬼神，随功进秩。人鬼有犯，移还鬼府。”又说：“北斗惨然，俱下与五帝、五岳四渎、江淮河济水帝、九部刺奸、三官考召地上神祇，周行天下，司察善恶功过轻重，列言上天。”在下卷末尾论及道教斋日典礼时更说道：“诸地上五岳神仙真人、四海水帝、北酆、三官、三界地祇，一切神灵，莫不束带肃然，持斋敬道，重法以崇天真也。”下卷与上卷及中卷的论述不能简单视之为自相矛盾，因为此三卷很可能并非形成于一时一人之手，而下卷之内容似与更早的《老子中经》有关。六天地狱或六天鬼神有了考校功能并列入道教的神灵系统虽有逻辑上的顺理成章，但道教教义的形成过程并非如此简单。因为，在《老子中经》里，太一北辰的功能就是考校世人功过，却并未明言它就是官方祭祀的太一神。是否在古代官方与民间对太一神有不同的认识？是否道教后来把司功过的太一和官方的祭祀对象合而为一，成为后来的“北帝”？北酆伯是否就是太一、北帝？我只是有这些怀疑。如果我们通过研究找到了一个肯定的答案，那么就可能会圆满解释六天鬼神为何及如何被道教吸收的。</p>
<p>毕竟，由前引道经已经可以看出道教的确吸收了六天的鬼神。还可以找到一些材料。古灵宝经《太上洞玄灵宝本行宿缘经》中说：“仙人有阶级，真人有品次矣。六天为三界大魔王，领六天鬼神之事。魔王承奉太上众真天尊上人也。道士功成，魔王即保举焉。”《道要灵祇神鬼品经》引《太上太霄琅书经》说：“东华青童曰，魔有数种，天魔、地魔、鬼魔。今言六天大魔王者，是天地之大魔王。其宿世有功德，故得为此魔王。与帝释比德，共执事于天地人。上属太上玉京，为天帝之下官耳。其余无所不制。夫人学道，先经小魔试；道成时，大魔皆临大试，过，便保举上登玉京台。”不但六天的鬼神被吸收进道教的神灵系统，而且，六天地狱的宫室也成为道教自己的了。在这部道经的末尾讲到酆都等地狱“悉为诸仙人之下宫”。正因为六天鬼神和他们所在的六天地狱变成了道教教义的一部分，道教才那么认真地想象宫室的处所、内部构造及其人物的名衔等级。《真诰》第十五卷和十六卷保存下来的据称是承自杨许之流的酆都地狱说可以看作是道教吸收六天的最终结果，只是它偏重于描述内部结构，于义理不甚着意，所以后人很难评价它在道教史上的地位。由这部书也可以看出六天鬼神已经和道教自身三官有同样的功能，其意旨与前引诸道经一致。在第十六卷中有这样的话：“西王母见我苦行，酆都北帝愍我道心，告敕司命，传檄三官，摄取形骸，还魂复真。使我颐胎，位为灵神。”于是，在《阐幽微》中的鬼官就有了双重身分。首先他们是帝王将相的死魂，有鬼气，是道教徒要设法克制的。这是六天鬼神的本来性质。其次，他们受命于道教考校世人功过，同时他们自己也可以由这种新的意义上的“替天行道”能进阶仙位。第十五卷即明确讲到四明公（夏启、文王、邵公、季札）“后并当升仙阶”。六天宫也不再只是与道教相对立的外在的地狱了。第十五卷中的咒语说：“吾太上弟子，下统六天。六天之宫，是我所部。不但所部，乃太上之所主。吾知六天之宫名，故得长生。敢有犯者，太上当斩汝形。”这段咒语的主旨当然是防止六天鬼气的侵害，使六天鬼气不能干“犯”。但是在这里，六天宫明确是“太上所主”，是受道教乃至道徒驱使的。陶弘景正是继承了道教的这一发展，所以在《真灵位业图》中把酆都的鬼神编入第七级，使它们成为道教神灵系统的组成部分。《真灵位业图》使道教原本为自然气化的神明中也掺入了胎生肉人的灵魂，这是否为一矛盾以及道教如何加以调整以保持自己教义的一贯性尚是一个有待研究的问题。</p>
<p>本文篇幅已嫌过长，而所论尚未透彻，也实非我今日学力所能克就。读者可以由文中看出，围绕六天还有许多分支论题值得深入探讨。本文不过寻章摘句，远非系统研究，即所论及材料亦有尚未得其牙后慧者。此外，六天一辞以后又成为道教三界之一，本文不复论及。网疏安能无漏？故本文之取材是否得当、理论是否妥帖、推断是否合理，乃至行文转折是否顺遂，均有待同人批评。目前我本人能够肯定的只有道教中六天所具涵义，以及由此涵义之揭发而显其民间性的真实义蕴。学界长期以来所指称的道教的民间性尚是一个较为模糊的表述，似乎同义于“民俗”。我在本文中曾多次提到道教的反官方性，但我并不想以此界定其民间性。反官方性只可以用来指称道教的某些时期的某些方面。若为研究道教及其思想渊源计，应当注意它的与官方宗教的相异性。它的反官方性由其相异性而来，是民间文化自我确认的一种表现形式。我们长期以来未能对这方面给以较多的注意。一是未注意它的宗教性，其次便是没有注意到它的相异性。对于它的历史观，我们轻率地视之为虚诞而不予理会。三皇五帝的崇拜、祖先的血食牺牲，千百年来习非成是，蔚为典章，虽今日仍为国家假其威以“来远人”。因此，儒家的宗教体系在今日仍居于统治地位，同时道教和其他民间文化因素千百年来也一直作为与它相异的信仰存在。上古以来的保存于先秦道家和汉末以来的道教中的种种传统也正需要我们作一番“习非成是”的工夫，不再让它们仅仅作为寓言和文学作品，而是完整地构建它的历史观、劫运说和礼仪，把它们与儒教、佛教作一种比较宗教研究。因为道家和儒家在同一时期都在致力于构造历史，用宗教的历史传说代替真实的历史。以顾颉刚先生为带代表的古史辨派在剥尽画皮的同时并未否定三皇五帝的宗教史价值[44]。然而辨伪的流风被后人错误地贯彻到了宗教史尤其是道教史研究中。平实而论，这些虚构的荒诞历史在宗教史中却是虚而不诞，恰恰以其虚而成其宗教史实。古史辨派在辨伪的的同时也在历史上第一次处理了宗教史的材料，这是他们留给后人的一笔遗产。笔者对六天的讨论即意在尝试处理这些“虚诞”的史料，而检阅先贤旧章，更觉有此必要。</p>
<p>虽已连缀成文，笔者尚不免惴然于心，因为这样一个视角并非我自己体贴出来。许多西方道教学者在研究道教的民间性时其着眼点和我们有很大的不同。他们十分看重道教和官方意识形态的对抗性，因为他们这样做有一个前提：中国社会自很早以来就分裂为两部分。这个立场使他们对道教的性质及其在中国文化史中的地位得出了与我们完全不同的结论。由于地域和语言的隔绝，中国学者要理解他们的立场大约还要经历很长一段时间。然而，我也感到他们的确注意到了一些我们惯常不去注意的材料及其涵义。也正因为如此，我在来到欧洲的短短几个月里不自觉地受到了这种立场的影响，虽然我对他们的立场和方法还有怀疑，并且认为他们的某些看法有过激之嫌，同时我也仍然持有从国内先贤继承下来的见解。我现在提交给会议的这篇文章就是我在这方面的一个尝试之作，或许落于“邯郸学步”之诮，亦未可知。果真能有一知半解得许于与会同仁，那么首先应该感谢荷兰莱顿大学教授、真诚挚爱中国文化的施舟人先生。他受我的老师汤一介先生的嘱托，为我在这里的研修提供了无私的帮助。这篇文章据以出发的立场乃至《三天内解经》等材料的涵义都是他指点给我的。至于在剪取材料并作疏解方面如有错误，则由我本人负责。</p>
<p>1996年5月于荷兰莱顿大学汉学院</p>
<p>注释：</p>
<p>[1] 日本学者小林正美先生在《六朝道教史研究》（东京创文社1990年出版）一书中对道教的六天观念做了讨论。他的引书为我提供了一些资料线索。他从天师道的发展以及南北道教之区别入手讨论了六天观念的起源，但嫌于简略。笔者尚无能力对他的研究作出批评。本文的讨论试从儒家六天之义入手，而重点则在于从整体上探讨六天概念在道教中的涵义。</p>
<p>[2] 华夏出版社出版的《道教大辞典》六天条引《孝经》云“宗祀文王于明堂，以配六天上帝”。查孔安国和郑注《孝经》均无六天二字。唐以前史书多引此句，亦无六天二字。不知《道教大辞典》所据何本。</p>
<p>[3] 见中华书局《十三经注疏》，1980年出版，第1444页。</p>
<p>[4] 《旧唐书》，中华书局标点本第823页。</p>
<p>[5] 见中华书局《十三经注疏》第1506页。</p>
<p>[6] 见徐旭生《中国古史的传说时代》（增订本），科学出版社1960年出版，第19页。</p>
<p>[7] 见《史记》中华书局标点本第1378页。杨宽则认为：“五方帝五色之祠，最迟当春秋时已有。”见《古史辨》第七册上编，第250页。开明书店1941年6月初版。杨先生亦援引此条反推秦始皇比汉高祖更应知天有五帝。我以为这个推论未妥。</p>
<p>[8] 见《中国古史的传说时代》第207页。</p>
<p>[9] 《史记》第1357页。</p>
<p>[10] 见《文献通考·郊祀考》，商务印书馆1936年出版，第611页。</p>
<p>[11] 《史记》第1386页和1401页。</p>
<p>[12] 《史记》第1394页。</p>
<p>[13] 见中华书局《十三经注疏》，第1506页。</p>
<p>[14] 见《四部备要》线装本，皮锡瑞《孝经郑注疏》卷下，第4页。</p>
<p>[15] 见前书卷下第1页。</p>
<p>[16] 见中华书局《十三经注疏》，第766页。</p>
<p>[17] 本文引用道经均依据涵芬楼影印本。除个别随文注明卷数外，不复注明册数及页数。</p>
<p>[18] 这三部经典关于祭祀的规定有差异。《太上正一盟威法箓》中说：“常以五腊吉日于堂上祀家亲九祖，二月八月同日祀社灶。其余不得私祀他鬼神。”《陆先生道门科略》中说：“唯天子祭天，三公祭五岳，诸侯祭山川，民人五腊吉日祠先人，二月八月祭社灶，自此以外，不得有所祭。”这两种经典都允许二八月祭社灶。《三天内解经》与《陆先生道门科略》年代相同，故《三天内解经》或有脱文。陆修静仍然把六天祭祀对象列入，应当看作是他对朝廷的让步。</p>
<p>[19] 大渊忍尔在讨论《洞渊神咒经》时也注意到这个问题。他用“非血食主义”标识道教的主张。见其所著《初期道教史的研究》，日本冈山印刷株式会社昭和39年出版，第525页。</p>
<p>[20] 见王明先生《抱朴子内篇校释》，中华书局1980年版，第170页。</p>
<p>[21] 见前书第76页。</p>
<p>[22] 分别见前书第68页和第233页。</p>
<p>[23] 见前书第157页。</p>
<p>[24] 见前书第158页。其文云：“又诸妖道百余种，皆煞生血食，独有李家道无为为小差。然虽不屠宰，每供福食，无有限剂，市买所具，务于丰泰。精鲜之物不得不买，或数十人厨，费亦多矣，复未纯为清省也，亦皆宜在禁绝之列。”</p>
<p>[25] 见前书第287页。</p>
<p>[26] 见前书第45页。设问为：“审其神仙可以学致，翻然凌霄，背俗弃世，烝尝之礼，莫之修奉。先鬼有知，其不饿乎！”</p>
<p>[27] “五天帝”在道教各派中的性质尚需分别审度，不能一律看待。例如在《洞玄灵宝五老摄召北酆鬼魔赤书玉诀》中言及有五方鬼魔，分别叫“青帝鬼魔”、“赤帝鬼魔”、“黄帝鬼魔”、“黑帝鬼魔”，都是被驱逐的对象，但是所驱之神文也分别称为“某帝”神文。此书实出自《元始五老赤书玉篇真文天书经》上卷，该卷所列“元始五老灵宝官号”之“字”则为太微五帝名号。虽然该书也有批判六天文字，但其“六天”应是统称，并未如《女青鬼律》等书指实。</p>
<p>[28] 我的理由是：大渊忍尔与石井昌子所编辑的《道教经典目录索引》中所列《除六天玉文三天正法》大多出于《太上三天正法经》。最重要的证据是《云笈七签》第八卷。该卷介绍的上清经中有《除六天玉文三天正法》而无《太上三天正法经》，显然是以《除六天玉文三天正法》作为该经之代称。</p>
<p>[29] 萧登福在《汉魏六朝佛道两教之天堂地狱说》（台湾学生书局1988年出版）一书中列有《道教诸经论所言地狱异说表》，介绍了部分酆都六宫的不同说法。</p>
<p>[30] 《尚书帝命验》中有两条材料，均言赤雀衔丹书入于酆。其一曰：“季秋之月甲子，有赤雀衔丹书入于酆，止于昌户口，拜稽首至于蟠溪之水。尚钓涯，王下趣拜曰：公望七年，乃今见光景如斯。答曰：望钓得玉璜，刻曰：姬受命，左旌，遂置车左。王躬执驱，号曰师尚父。”《海内西经》中有云：“流黄酆氏之国，中方三万里，有涂四方。中有山，在后稷葬西。”</p>
<p>[31] 见《抱朴子内篇校释》第46页。</p>
<p>[32] 俞樾《茶香室丛钞》卷16引范成大《吴船录》云：“忠州酆都县，去县三里有平都山，碑牒所传前汉王方平、后汉阴长生皆在此得道仙去。”俞樾按语中说：“酆都县平都山为道书七十二福地之一，宜为神仙窟宅，而世乃传为鬼伯所居，殊不可解。读《吴船录》，乃知因阴君传讹。盖相沿既久，不知为幽冥之主者，此俗说所由来也。至北极治鬼之所，别有用心，其地与此酆都不相涉也。”</p>
<p>[33] 陶弘景在《阐幽微》注文中特别提到文王、武王、邵公父子三人，却未着意于季札亦姬姓后人，或因季札之传说另有其源。见王明《抱朴子·对俗》篇注136和陶弘景《阐幽微》中“项梁”注。</p>
<p>[34] 萧登福将六朝道经中对罗酆六天宫的论述分为四个系统，以四部经典为代表：《真诰》、《伏魔经》、《天关三图上清经》、《三元品戒经》。他的讨论也是横向考察，未能纵向追讨源流。</p>
<p>[35] “饱”、“魁”两分别应作“旄”、“鬼”。据《丛书集成》所收《学津讨源》本。</p>
<p>[36] 这我里所指的主要是顾炎武《山东考古录》、《日知录》卷30“泰山治鬼”条，赵翼《陔余丛考》卷35、俞樾《茶香室丛钞》卷16、法国学者沙畹（Chavannes）的《泰山》、日本学者泽田瑞穗的《地狱辨》，吴荣曾《镇墓文中所见到的东汉道巫关系》（《文物》1981年第三期）、余英时《中国古代死后世界观的演变》（载北京大学出版社1983年之《燕园论学集》）。笔者于此无意菲薄前贤，沙畹和泽田瑞穗的著作对文献及泰山实地的材料广为搜罗，笔者受益良多。余英时、吴荣曾的论文试图揭发泰山信仰与上古以来思想史的联系，以求一贯之解释，与笔者之立场亦无根本区别。但是，他们在泰山与道教关系的见解上未突破顾炎武《山东考古录》。</p>
<p>[37] 见《茶香室丛钞》卷15“渿河桥”条。其文云：“余谓后世言神言鬼，皆托之泰山。虽虚诞之说，而未始无理。盖因天事天，因地事地，此封禅之所起也。——神道属天王者，既封泰山以报天，则泰山有神道矣。鬼道有地王者，既禅泰山下小山，如云云，亭亭，梁父、高里诸山有鬼道矣。······但谓高里诸山治鬼则可，谓泰山治鬼则不可。《三国志·管辂传》曰‘但恐至泰山治鬼，不得治生人’，则当时已失其义矣。”俞樾有见于官方祭祀之义丧于后世，而未见民间对官方祭祀之义有别裁焉。</p>
<p>[38] 此文字原出于《古器物识小录》。罗振玉《贞松堂集古遗文》中有一镇墓文：“生属长安，死属太山，生死异处，不得相防（妨）。”此两条转引自吴荣曾论文。吴先生评论说：东汉都城在洛阳不在长安，所以这种说法应自西汉传下来。我认为，这两条出土文字的巧合正说明了它未必指墓主之身世，而是当时流行的写法。这个生死异处的人物是否指泰山所祭祀的帝王呢？</p>
<p>[39] 见《史记》第481页，《汉书》第199页，中华书局本。</p>
<p>[40] 见宋人郭茂倩所编《乐府诗集》卷41。中华书局1979年版，第二册，第605页。</p>
<p>[41] 见顾炎武《山东考古录》“辨高里山”条。此处文字引自吴青坛《说铃》。顾炎武还说：“蒿里之名，见于古挽歌，不言其地”，似乎以为蒿里当初并不是某一具体方所。书中又有“辨渿河”条，称渿河“在高里山之左，有桥跨之，曰渿河桥。世传人死魂不得还，而曰奈何。”由此可知，高里山确乎被世人目为“死人里”。《说铃》还收入清人孔贞宣的《泰山纪胜》，其中“社首蒿里”条说明了皇家社首祭礼之义，证明社首与蒿里相连。说到蒿里西北洞中曾于明代发现宋真宗所投玉简事时又说：“荐绅先生所不道，为其矫诬而不可训也”。由此可见，蒿里传说是与官方的宗教体系截然相对的，而正统文人的讳莫如深也是后人无法探明蒿里来源的根本原因。</p>
<p>[42] 施舟人教授屡对我言及道教的这种做法颇类似基督教建教之初的做法。</p>
<p>[43] 见《说苑》第十七《杂言》。</p>
<p>[44] 见顾颉刚《三皇考》，《古史辨》第七册中编，第51页，开明书店1941年初版。</p>
<p>（原载《北京大学百年国学文粹》，北京大学出版社1998年出版。）</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python 3 黑板客爬虫闯关]]></title>
      <url>http://lovenight.github.io/2016/07/18/Python-3-%E9%BB%91%E6%9D%BF%E5%AE%A2%E7%88%AC%E8%99%AB%E9%97%AF%E5%85%B3/</url>
      <content type="html"><![CDATA[<p>Python 版本是3.5</p>
<h1 id="第一关">第一关</h1><p><a href="http://www.heibanke.com/lesson/crawler_ex00/" target="_blank" rel="external">http://www.heibanke.com/lesson/crawler_ex00/</a></p>
<p>每页都会出现新数字，这一关考的就是获取网页和解析内容，非常简单：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一题网址</span></span><br><span class="line">Q1_url = <span class="string">r'http://www.heibanke.com/lesson/crawler_ex00/'</span></span><br><span class="line"></span><br><span class="line">url = Q1_url</span><br><span class="line">num_re = re.compile(<span class="string">r'&lt;h3&gt;[^\d&lt;]*?(\d+)[^\d&lt;]*?&lt;/h3'</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    print(<span class="string">'正在读取网址 '</span>, url)</span><br><span class="line">    html = requests.get(url).text</span><br><span class="line">    num = num_re.findall(html)</span><br><span class="line">    <span class="keyword">if</span> len(num) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        url = Q1_url + num[<span class="number">0</span>]</span><br><span class="line">print(<span class="string">'结束！'</span>)</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>输出：</p>
<pre><code>正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">19016</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">13579</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">43396</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">39642</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">96911</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">30965</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">67917</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">22213</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">72586</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">48151</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">53639</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">10963</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">65392</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">36133</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">72324</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">57633</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">91251</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">87016</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">77055</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">30366</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">83679</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">31388</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">99446</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">69428</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">34798</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">16780</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">36499</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">21070</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">96749</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">71822</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">48739</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">62816</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">80182</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">68171</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">45458</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">56056</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">87450</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">52695</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">36675</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">25997</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">73222</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">93891</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">29052</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">72996</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">73999</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">23814</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">98084</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">51103</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">39603</span>
正在读取网址  <span class="symbol">http:</span>/<span class="regexp">/www.heibanke.com/lesson</span><span class="regexp">/crawler_ex00/</span><span class="number">34316</span>
结束！
</code></pre><p>访问最后一个网址，提示：恭喜你,你找到了答案.继续你的爬虫之旅吧！</p>
<p>OK，进入下一关。</p>
<h1 id="第二关">第二关</h1><p><a href="http://www.heibanke.com/lesson/crawler_ex01/" target="_blank" rel="external">http://www.heibanke.com/lesson/crawler_ex01/</a></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 爬虫闯关第二关网址</span></span><br><span class="line">Q2_url = <span class="string">r'http://www.heibanke.com/lesson/crawler_ex01/'</span></span><br><span class="line"></span><br><span class="line">username = <span class="string">'king'</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">31</span>):</span><br><span class="line">    print(<span class="string">'正在猜密码： '</span>, x)</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'username'</span>:username,</span><br><span class="line">        <span class="string">'password'</span>:x</span><br><span class="line">    &#125;</span><br><span class="line">    html = requests.post(Q2_url, data = data).text</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="string">'错误'</span> <span class="keyword">in</span> html:</span><br><span class="line">        print(<span class="string">'密码是 '</span>, x)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p>输出：</p>
<pre><code>密码是  <span class="number">26</span>
</code></pre><p>回到登录网址，输入密码过关！</p>
<h1 id="第三关">第三关</h1><p><a href="http://www.heibanke.com/lesson/crawler_ex02/" target="_blank" rel="external">http://www.heibanke.com/lesson/crawler_ex02/</a></p>
<p>这一关需要登录，随便注册一个账号，在爬虫中要用。另外要注意Post中不能少了csrfmiddlewaretoken。上一关中虽然有这一项，但是不加也可以。不过这一关里必须加上这个参数。</p>
<p>header必须加上Cookie。</p>
<p>以上信息是把每一步获取的网页源码控制台打印，然后分析出来的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 爬虫闯关第三关</span></span><br><span class="line">Q3_url = <span class="string">r'http://www.heibanke.com/lesson/crawler_ex02/'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录后网址</span></span><br><span class="line">login_url = <span class="string">r'http://www.heibanke.com/lesson/crawler_ex02/'</span></span><br><span class="line"></span><br><span class="line">username = 自己注册</span><br><span class="line">password = 自己注册</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'username'</span>:username,</span><br><span class="line">    <span class="string">'password'</span>:password,</span><br><span class="line">    <span class="string">'csrfmiddlewaretoken'</span>:<span class="string">'CAb4NKnA31NhzjgdPpBfbsIbKIJ1lG8V'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'Cookie'</span>:<span class="string">'sessionid=qx5zdoytvpf2qbtsz2i51hs69zakiu3h; csrftoken=CAb4NKnA31NhzjgdPpBfbsIbKIJ1lG8V'</span></span><br><span class="line">&#125;</span><br><span class="line">s = requests.Session()</span><br><span class="line">s.headers.update(headers)</span><br><span class="line">html = s.post(login_url, data = data).text</span><br><span class="line"><span class="comment"># print(html)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">20</span>, <span class="number">31</span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'username'</span>:username,</span><br><span class="line">        <span class="string">'password'</span>:x,</span><br><span class="line">        <span class="string">'csrfmiddlewaretoken'</span>:<span class="string">'CAb4NKnA31NhzjgdPpBfbsIbKIJ1lG8V'</span></span><br><span class="line">    &#125;</span><br><span class="line">    print(<span class="string">'正在猜密码： '</span>, x)</span><br><span class="line">    html = s.post(login_url, data = data).text</span><br><span class="line">    <span class="comment"># print(html)</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="string">'错误'</span> <span class="keyword">in</span> html:</span><br><span class="line">        print(<span class="string">'密码是 '</span>, x)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p>输出：</p>
<pre><code>正在猜密码：  <span class="number">1</span>
正在猜密码：  <span class="number">2</span>
正在猜密码：  <span class="number">3</span>
正在猜密码：  <span class="number">4</span>
正在猜密码：  <span class="number">5</span>
正在猜密码：  <span class="number">6</span>
正在猜密码：  <span class="number">7</span>
正在猜密码：  <span class="number">8</span>
正在猜密码：  <span class="number">9</span>
正在猜密码：  <span class="number">10</span>
正在猜密码：  <span class="number">11</span>
正在猜密码：  <span class="number">12</span>
正在猜密码：  <span class="number">13</span>
正在猜密码：  <span class="number">14</span>
正在猜密码：  <span class="number">15</span>
正在猜密码：  <span class="number">16</span>
正在猜密码：  <span class="number">17</span>
正在猜密码：  <span class="number">18</span>
正在猜密码：  <span class="number">19</span>
密码是  <span class="number">19</span>
</code></pre><p>手动输密码过关！</p>
<h1 id="第四关">第四关</h1><p>这一关的逻辑设置得很奇怪，找作者问了也没看明白。不做了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[李鸿章临终遗诗]]></title>
      <url>http://lovenight.github.io/2016/07/01/%E6%9D%8E%E9%B8%BF%E7%AB%A0%E4%B8%B4%E7%BB%88%E9%81%97%E8%AF%97/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">劳劳车马未离鞍，临事方知一死难。<br>三百年来伤国步，八千里外吊民残。<br>秋风宝剑孤臣泪，落日旌旗大将坛。<br>海外尘氛犹未息，请君莫作等闲看。</blockquote>

<p>近来了解了李鸿章生平，读到这首绝命诗，感慨良多。</p>
<a id="more"></a>
<p>附上纽约时报1896年对李鸿章的采访。<a href="http://query.nytimes.com/gst/abstract.html?res=9B04E1DB1E31E033A25750C0A96F9C94679ED7CF" target="_blank" rel="external">原文</a></p>
<p>以下是中译文，出自《帝国的回忆》。</p>
<blockquote>
<p>离开在欧洲考察访问的最后一站英国后，大清帝国前直隶总督兼北洋大臣李鸿章乘“圣-路易斯”号邮轮于当地时间1896年8月28日抵达美国纽约，开始对美国进行访问。李鸿章在美国受到了美国总统克利夫兰的接见，并和美国一些要员及群众见面，受到了“史无前例的礼遇”（《纽约时报》）。9月2日上午9时许，李鸿章在纽约华尔道夫饭店接受了记者的采访。</p>
<p><strong>美国记者：</strong>尊敬的阁下，您已经谈了我们很多事情，您能否告诉我们，什么是您认为我们做得不好的事的呢？<br><strong>李鸿章：</strong>我不想批评美国，我对美国政府给予我的接待毫无怨言，这些都是我所期待的。只是一件事让我吃惊或失望，那就是你们国家有形形色色的政党存在，而我只对其中一部分有所了解。其他政党会不会使国家出现混乱呢？你们的报纸能不能靠国家利益将各个政党联合起来呢？</p>
<p><strong>美国记者：</strong>那么阁下，您在这个国家的所见所闻中什么最使您最感兴趣呢？<br><strong>李鸿章：</strong>我对我在美国见到的一切都很喜欢，所有事情都让我高兴。最使我感到惊讶的是20层或更高一些的摩天大楼，我在中国和欧洲从没见过这种高楼。这些楼看起来建得很牢固，能抗任何狂风吧？但中国不能建这么高的楼房，因台风会很快把它吹倒，而且高层建筑若没有你们这样好的电梯配套也很不方便。</p>
<p><strong>美国记者：</strong>阁下，您赞成贵国的普通百姓都接受教育吗？<br><strong>李鸿章：</strong>我们的习惯是送所有男孩上学。（翻译插话：在清国，男孩，才是真正的孩子。）我们有很好的学校，但只得付得起学费的富家子弟才能上学，穷人家的孩子没有机会上学。但是，我们现在还没有你们这么多的学校和学堂，我们计划将来在国内建立更多的学校。</p>
<p><strong>美国记者：</strong>阁下，您赞成妇女接受教育吗？<br><strong>李鸿章（停顿一会儿）：</strong>在我们清国，女孩在家中请女教师提供教育，所有有经济能力的家庭都会雇请女家庭教师。我们现在还没有女子就读的公立学校，也没有更高一级的教育机构。这是由于我们的风俗习惯与你们（包括欧洲和美国）不同，也许我们应该学习你们的教育制度，并将最适合我们国情的那种引入国内，这确是我们所需要的。</p>
<p><strong>记者：</strong>总督阁下，您期待对现存的排华法案进行任何修改吗？<br><strong>李鸿章：</strong>我知道，你们又将进行选举了，新政府必然会在施政上有些变化。因此，我不敢在修改法案前发表任何要求废除《格利法》的言论，我只是期望美国新闻界能助清国移民一臂之力。我知道报纸在这个国家有很大的影响力，希望整个报界都能帮助清国侨民，呼吁废除排华法案，或至少对《格利法》进行较大修改。</p>
<p><strong>美国记者：</strong>阁下，您能说明选择经加拿大而非美国西部回国路线的理由吗？是不是您的同胞在我国西部一些地区没有受到善待？<br><strong>李鸿章：</strong>我有两个原因不愿经过美国西部各州。<br>第一，当我在清国北方港口城市担任高官时，听到了很多加州清国侨民的抱怨。这些抱怨表明，清国人在那里未能获得美国宪法赋予他们的权利，他们请求我帮助他们使他们的美国移民身份得到完全承认，并享受作为美国移民所应享有的权利。而你们的《格利法》不但不给予他们与其他国家移民同等的权利，还拒绝保障他们合法的权益，因此我不希望经过以这种方式对待我同胞的地方，也不打算接受当地华人代表递交的要求保证他们在西部各州权益的请愿信。<br>第二，当我还是一名优秀的水手时，就知道必须学会自己照顾自己。我比别人年纪要大好多岁，从温哥华回国的航程要比从旧金山出发更短些。我现在才知道，清国“皇后号”船体宽阔舒适，在太平洋的所有港口都难以找到如此之好的远洋客船。<br>排华法案是世界上最不公平的法案。所有的政治经济学家都承认，竞争促使全世界的市场迸发活力，而竞争既适用于商品也适用于劳动力。我们知道，《格利法》是由于受到爱尔兰裔移民欲独霸加州劳工市场的影响，因为清国人是他们很强的竞争对手，所以他们想排除华人。如果我们清国也抵制你们的产品，拒绝购买美国商品，取消你们的产品销往清国的特许权，试问你们将作何感想呢？不要把我当成清国什么高官，而要当成一名国际主义者，不要把我当成达官贵人，而要当作清国或世界其他国家一名普通公民。请让我问问，你们把廉价的华人劳工逐出美国究竟能获得什么呢？廉价劳工意味着更便宜的商品，顾客以低廉价格就能买到高质量的商品。<br>你们不是很为你们作为美国人自豪吗？你们的国家代表着世界上最高的现代文明，你们因你们的民主和自由而自豪，但你们的排华法案对华人来说是自由的吗？这不是自由！因为你们禁止使用廉价劳工生产的产品，不让他们在农场干活。你们专利局的统计数据表明，你们是世界上最有创造力的人，你们发明的东西比任何其他国家的总和都多。在这方面，你们走在了欧洲的前面。因为你们不限制你们在制造业方面的发展，搞农业的人不限于搞农业，他们还将农业、商业和工业结合了起来。你们不象英国，他们只是世界的作坊。你们致力于一切进步和发展的事业。在工艺技术和产品质量方面，你们也领先于欧洲国家。但不幸的是，你们还竞争不过欧洲，因为你们的产品比他们的贵。这都是因为你们的劳动力太贵，以致生产的产品因价格太高而不能成功地与欧洲国家竞争。劳动力太贵，是因为你们排除华工。这是你们的失误。如果让劳动力自由竞争，你们就能够获得廉价的劳力。华人比爱尔兰人和美国其他劳动阶级都更勤俭，所以其他族裔的劳工仇视华人。<br>我相信美国报界能帮助华人一臂之力，取消排华法案。</p>
<p><strong>美国记者：</strong>美国资本在清国投资有什么出路吗？<br><strong>李鸿章：</strong>只有将货币、劳动力和土地都有机地结合起来，才会产生财富。清国政府非常高兴地欢迎任何资本到我国投资。我的好朋友格兰特将军曾对我说，你们必须要求欧美资本进入清国以建立现代化的工业企业，帮助清国人民开发利用本国丰富的自然资源。但这些企业的管理权应掌握在清国政府手中。我们欢迎你们来华投资，资金和技工由你们提供。但是，对于铁路、电讯等事物，要由我们自己控制。我们必须保护国家主权，不允许任何人危及我们的神圣权力。我将牢记格兰特将军的遗训，所有资本，无论是美国的还是欧洲的，都可以自由来华投资。</p>
<p><strong>美国记者：</strong>阁下，您赞成将美国的或欧洲的报纸介绍到贵国吗？<br><strong>李鸿章：</strong>中国办有报纸，但遗憾的是中国的编辑们不愿将真相告诉读者，他们不像你们的报纸讲真话，只讲真话。中国的编辑们在讲真话的时候十分吝啬，他们只讲部分的真实，而且他们的报纸也没有你们报纸这么大的发行量。由于不能诚实地说明真相，我们的报纸就失去了新闻本身的高贵价值，也就未能成为广泛传播文明的方式了。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[搬家]]></title>
      <url>http://lovenight.github.io/2016/04/25/%E6%90%AC%E4%BA%86%E6%96%B0%E4%BD%8F%E5%A4%84/</url>
      <content type="html"><![CDATA[<p>上周四房东突然毁约说下月起不租了，只好临时找新的住处，周日终于安定下来。这一通找房、搬家路上想了很多也拍了很多。</p>
<a id="more"></a>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/25/8/24/42/%E7%8E%89%E6%B3%89%E6%A0%A1%E5%8C%BA%E8%A5%BF%E5%8D%97%E8%A7%92.jpg" alt="玉泉校区西南角.jpg"><br>这是玉泉校区西南角，以前从没来过。从学校正门口下车，一路走到这里大约花了二十多分钟，已经放弃在这里租房了，出行太不方便。不过景色可人，起兴浏览一番。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/25/8/24/42/%E7%8E%89%E6%B3%89%E6%A0%A1%E5%8C%BA%E8%A5%BF%E5%8D%97%E8%A7%922.jpg" alt="玉泉校区西南角2.jpg"><br>上一张照片往右拐，不知道何时建了一个休闲山庄。可惜最近没有闲下来的心思，手头还有许多事情要做。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/25/8/24/42/%E7%8E%89%E6%B3%89%E6%A0%A1%E5%8C%BA%E8%A5%BF%E5%8D%97%E8%A7%923.jpg" alt="玉泉校区西南角3.jpg"></p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/25/8/24/42/%E7%8E%89%E6%B3%89%E6%A0%A1%E5%8C%BA%E8%A5%BF%E5%8D%97%E8%A7%924.jpg" alt="玉泉校区西南角4.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/25/8/24/42/%E7%8E%89%E6%B3%89%E6%A0%A1%E5%8C%BA%E8%A5%BF%E5%8D%97%E8%A7%925.jpg" alt="玉泉校区西南角5.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/25/8/24/42/%E7%8E%89%E6%B3%89%E6%A0%A1%E5%8C%BA%E8%A5%BF%E5%8D%97%E8%A7%927.jpg" alt="玉泉校区西南角7.jpg"></p>
<p>上面几张都是青芝坞，玉泉校区南门外的住宿+吃喝圣地，毗邻植物园，东南不远处就是西湖，风景绝佳之处。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/25/8/50/26/%E6%91%86%E5%9C%B0%E6%91%8A.jpg" alt="摆地摊.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/25/8/50/26/%E4%BA%AC%E6%9D%AD%E5%A4%A7%E8%BF%90%E6%B2%B3.jpg" alt="京杭大运河.jpg"></p>
<p>周四晚去朝晖看房路过这里，年轻人在摆地摊。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/26/15/26/8/%E7%A7%9F%E6%88%BF.jpg" alt="租房.jpg"></p>
<p>周六借了表妹的VPN，进学校论坛逛了一圈，看到这个帖子，现在的年轻人们真有干劲。群里信息太少，最后我在豆瓣上找到了房子。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/25/9/4/20/%E5%85%A8%E9%83%A8%E5%AE%B6%E5%BD%93.jpg" alt="全部家当.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/25/9/4/20/%E5%8E%9F%E4%BD%8F%E5%A4%84.jpg" alt="原住处.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/26/15/24/36/%E8%87%B3%E5%B0%8A%E5%AE%9D2.jpg" alt="至尊宝2.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/26/15/24/36/%E5%AD%99%E6%82%9F%E7%A9%BA.jpg?imageMogr2/thumbnail/500x500" alt="孙悟空.jpg"></p>
<p>收拾东西，终于要搬离这个住了三年的地方，是结束也是新的开始。三年来走了很多弯路。现在要戴上紧箍咒，重新做回孙悟空。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/26/15/29/32/%E6%AF%9B%E5%B7%BE.jpg?imageMogr2/thumbnail/500x500" alt="毛巾.jpg"></p>
<p>某同学婚礼上拿回来的，以为就是一个小狗形的装饰品，摆了一个月后告诉我这是毛巾。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/26/15/29/32/%E4%BF%9D%E6%B9%BF%E9%9C%9C.jpg?imageMogr2/thumbnail/500x500" alt="保湿霜.jpg"></p>
<p>母亲给的保湿霜，但我没这种习惯，看到就不想用。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/26/15/34/23/%E8%8D%AF%E4%B8%8D%E8%83%BD%E5%81%9C.jpg?imageMogr2/thumbnail/500x500" alt="药不能停.jpg"></p>
<p>下雨没带伞，困在医院里，心情很低落。旁边的老太太说看不清楚药品的标签，接连拿出几个药盒问我。回答了几句，心情也好了一点，果然助人为快乐之本，但是我总是把事情搞砸，就连最好的朋友也全都闹过矛盾。也许不再交新朋友才适合我。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/26/15/35/38/%E5%8F%AA%E7%9C%8B%E4%BA%86%E5%BC%80%E5%A4%B4%E7%9A%84%E4%B9%A6.jpg?imageMogr2/thumbnail/500x500" alt="只看了开头的书.jpg"></p>
<p>这些书我都只看了开头，没有细读。以前是没心境，但这段时间发生了这么多事，我想终于可以安下心来做事了。虽然现在还不平静，但我感觉也快了。最近做什么事都没劲，这样的状态也挺好，可以让我慢慢死心踏地看道书和练功。这次搬的新住处，看房子的时候通道阴阴的，我反而特别喜欢，有种住在阴暗角落的感觉，颇符合现在的心情。以前我的新浪博客名叫「长夜未央」，因为习惯躲在黑暗里，不想走到台面上去和人打交道。接触的人多，是非也多，过错往往在我身上，说话做事不动脑子。</p>
<p>古龙笔下有个「大老板朱停」，心宽体胖，做任何事情都会先停下来想一想，想得多了，就没什么事情是非做不可的。我也应该停一停，就停在黑夜中吧。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/26/15/47/37/%E7%A7%AF%E7%B4%AF%E4%BA%86%E5%9B%9B%E5%B9%B4%E7%9A%84%E4%B8%80%E6%AF%9B%E7%A1%AC%E5%B8%81.jpg?imageMogr2/thumbnail/500x500" alt="积累了四年的一毛硬币.jpg"></p>
<p>积累了四年的一毛硬币，打算抽空去银行换。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/26/15/35/38/%E9%97%A8%E7%A6%81.jpg?imageMogr2/thumbnail/500x500" alt="门禁.jpg"></p>
<p>房东给我的时候，我以为是个挂件。原来这是门禁卡，便于携带。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/26/15/36/40/%E4%BA%AC%E6%9D%AD%E5%A4%A7%E8%BF%90%E6%B2%B3%EF%BC%81.jpg" alt="京杭大运河！.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/26/15/36/40/%E6%96%B0%E5%AE%B6%E7%AC%AC%E4%B8%80%E5%A4%9C.jpg" alt="新家第一夜.jpg"></p>
<p>窗外是京杭大运河。杨坚杨广父子兴洛阳、开运河、三征高丽，敝在当代功在千秋，背了所有骂名，好处全被李唐接收。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/26/15/48/18/%E5%BA%8A%E5%A4%B4%E4%B8%80%E5%A0%86%E5%90%83%E7%9A%84.jpg?imageMogr2/thumbnail/500x500" alt="床头一堆吃的.jpg"></p>
<p>新家第一天晚上。平时吃得不多，这些可以撑两个星期了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[近期生活]]></title>
      <url>http://lovenight.github.io/2016/04/18/%E8%BF%91%E6%9C%9F%E7%94%9F%E6%B4%BB/</url>
      <content type="html"><![CDATA[<p>本来打算把这个博客打造成编程技术博客，但无奈近期没什么心思研究编程。最近手机老是报容量不够，删了一些不常用的APP也没用，才发现照片太多，于是清理出来传到新浪博客相册，又挑一部分放这里。</p>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=95858&auto=1&height=66"></iframe>


<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/36/56/%E5%A7%91%E5%A9%86%E7%94%9F%E6%97%A5.jpg" alt="姑婆生日.jpg"></p>
<p>兰溪的姑婆生日。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/14/59/44/%E4%BD%8F%E5%9C%A8%E7%94%B0%E9%87%8C%E7%9A%84%E6%B1%9F%E8%A5%BF%E4%BD%AC.jpg" alt="住在田里的江西佬.jpg"></p>
<p>乡下种田收益越来越低，村民们纷纷外出打工，江西佬们闻讯而来，承包农田种起了西瓜、樟树。又在田里搭了棚子过日子。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/1/38/%E4%BD%8F%E5%A4%84%E9%99%84%E8%BF%91%E7%9A%84%E5%85%AC%E5%9B%AD.jpg" alt="住处附近的公园.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/1/38/%E4%BD%8F%E5%A4%84%E9%99%84%E8%BF%91%E7%9A%84%E5%85%AC%E5%9B%AD2.jpg" alt="住处附近的公园2.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/1/38/%E4%BD%8F%E5%A4%84%E9%99%84%E8%BF%91%E7%9A%84%E5%85%AC%E5%9B%AD3.jpg" alt="住处附近的公园3.jpg"></p>
<p>住处附近的公园，景色很美，可惜近来思绪纷乱，无心欣赏。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/4/16/%E8%AF%B8%E6%9A%A8%E7%9A%84%E8%A1%97%E4%BA%AD.jpg?imageMogr2/thumbnail/500x500" alt="诸暨的街亭.jpg"></p>
<p>年后来杭州，路遇街亭。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/5/34/%E4%BA%91%E5%BC%80%E8%A7%81%E6%97%A5.jpg" alt="云开见日.jpg"></p>
<p>忘了当时什么心情。最近一两年的心情都不美丽。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/6/56/%E9%9B%A8%E4%B8%AD%E6%82%9F%E6%B0%B4.jpg?imageMogr2/thumbnail/500x500" alt="雨中悟水.jpg"></p>
<p>把心念系在水上，久而久之心也会平静下来。与持咒、数息、观照摄心一样，都依靠专注使自己达到内心的平静。用志不分，乃凝于神。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/10/16/%E5%B0%8F%E7%BE%8E%E5%A5%B3%E7%8E%A9%E6%89%8B%E6%9C%BA.jpg?imageMogr2/thumbnail/500x500" alt="小美女玩手机.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/10/16/%E5%B0%8F%E7%BE%8E%E5%A5%B3.jpg?imageMogr2/thumbnail/500x500" alt="小美女.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/10/16/%E5%B0%8F%E7%BE%8E%E5%A5%B3%E5%90%83%E9%A5%AD%E5%89%8D.jpg?imageMogr2/thumbnail/500x500" alt="小美女吃饭前.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/10/16/%E5%B0%8F%E7%BE%8E%E5%A5%B3%E5%92%8C%E8%88%85%E8%88%85%E4%B8%80%E8%B5%B7%E8%8D%A1%E7%A7%8B%E5%8D%83.jpg?imageMogr2/thumbnail/500x500" alt="小美女和舅舅一起荡秋千.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/10/16/%E5%B0%8F%E7%BE%8E%E5%A5%B3%E6%9D%A5%E6%8B%9C%E5%B9%B4.jpg?imageMogr2/thumbnail/500x500" alt="小美女来拜年.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/10/16/%E5%B0%8F%E7%BE%8E%E5%A5%B3%E5%B9%B4%E5%90%8E%E5%9B%9E%E6%9D%AD%E5%B7%9E.jpg?imageMogr2/thumbnail/500x500" alt="小美女年后回杭州.jpg"></p>
<p>小美女最近快三周岁了</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/11/47/%E4%B8%8E%E5%90%8C%E5%AD%A6%E7%BD%91%E5%90%A7%E4%BA%94%E8%BF%9E%E5%9D%90.jpg" alt="与同学网吧五连坐.jpg"></p>
<p>去年国庆期间贾爷来杭州，约了一波大学同学网吧五连坐。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/12/30/%E8%A5%BF%E6%B9%96%E6%96%87%E5%8C%96%E5%B9%BF%E5%9C%BA1.jpg" alt="西湖文化广场1.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/12/30/%E8%A5%BF%E6%B9%96%E6%96%87%E5%8C%96%E5%B9%BF%E5%9C%BA2.jpg" alt="西湖文化广场2.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/12/30/%E8%A5%BF%E6%B9%96%E6%96%87%E5%8C%96%E5%B9%BF%E5%9C%BA3.jpg" alt="西湖文化广场3.jpg"></p>
<p>西湖文化广场。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/21/12/%E8%90%BD%E9%B9%A4%E5%B1%B1%E5%B1%B1%E6%B6%A7.jpg?imageMogr2/thumbnail/500x500" alt="落鹤山山涧.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/21/12/%E8%90%BD%E9%B9%A4%E5%B1%B1%E5%BA%95%E6%B0%B4%E6%BD%AD.jpg?imageMogr2/thumbnail/500x500" alt="落鹤山底水潭.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/21/12/%E8%90%BD%E9%B9%A4%E5%B1%B1%E9%A1%B6%E4%B8%8B%E7%9C%BA.jpg" alt="落鹤山顶下眺.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/21/12/%E8%90%BD%E9%B9%A4%E5%B1%B1%E7%89%8C%E6%A5%BC.jpg" alt="落鹤山牌楼.jpg"></p>
<p>当天穿得太多，走到半山腰就热得不行，于是下山走了。姑姑和姑父两人继续上山游玩。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/22/56/%E8%B7%AF%E8%BE%B9%E4%B9%B0%E7%9A%84%E6%B3%A1%E6%B3%A1%E7%B3%96.jpg?imageMogr2/thumbnail/500x500" alt="路边买的泡泡糖.jpg"></p>
<p>东阳方言叫它「泡泡糖」，不知道普通话叫什么。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/23/34/%E9%87%91%E6%B0%8F%E5%AE%97%E7%A5%A0.jpg" alt="金氏宗祠.jpg"></p>
<p>金氏宗祠。曾经也是宋徽宗敕封的「江南第一家」。后因郡内大水，子孙散居浙江各地。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/25/5/%E8%B7%AF%E8%BF%87%E9%92%B1%E5%A1%98%E6%B1%9F.jpg" alt="路过钱塘江.jpg"></p>
<p>去年拍过上游的衢江，这次拍了下游。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/27/7/%E6%BB%B4%E6%B0%B4%E6%88%90%E5%86%B0.jpg" alt="滴水成冰.jpg"></p>
<p>冷</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/28/11/%E5%9F%8E%E7%AB%99%E7%9A%84%E9%98%B2%E6%9A%B4%E8%BD%A6.jpg" alt="城站的防暴车.jpg"></p>
<p>还有持枪巡逻的阿sir们，没敢拍。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/29/3/%E4%BD%A0%E7%9F%A5%E9%81%93%E5%AE%89%E5%88%A9%E5%90%97%EF%BC%9F.jpg" alt="你知道安利吗？.jpg"></p>
<p>终于见到了大名鼎鼎的安利！</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/31/0/%E8%8D%89%E6%9C%A8%E6%B7%B1%E6%B7%B1.jpg?imageMogr2/thumbnail/500x500" alt="草木深深.jpg"></p>
<p>回玉泉校区游荡。还爬了老和山，下山后接到同学电话，原来是上山前见到我的踪影，现在来电确认。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/32/15/%E5%9F%8E%E9%9A%8D%E9%98%81.jpg" alt="城隍阁.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/32/15/%E5%9F%8E%E9%9A%8D%E9%98%81-%E4%B8%9C%E5%8D%97%E5%BD%A2%E8%83%9C.jpg" alt="城隍阁-东南形胜.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/32/15/%E5%9F%8E%E9%9A%8D%E9%98%81%E7%9C%8B%E5%BB%B6%E5%AE%89%E8%B7%AF.jpg" alt="城隍阁看延安路.jpg"></p>
<p>城隍阁。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/33/25/%E7%81%AB%E7%81%B6.jpg?imageMogr2/thumbnail/500x500" alt="火灶.jpg"></p>
<p>过年在家烧火灶</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/33/46/%E5%89%AA%E4%BA%86%E7%9F%AD%E5%8F%91.jpg?imageMogr2/thumbnail/500x500" alt="剪了短发.jpg"></p>
<p>剪了短发，自拍一张。</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/35/8/%E5%A7%90%E5%A7%90%E5%AE%B6%E6%A5%BC%E4%B8%8B%E7%94%B5%E6%A2%AF%E5%8F%A3.jpg?imageMogr2/thumbnail/500x500" alt="姐姐家楼下电梯口.jpg"></p>
<p>姐姐家楼下电梯口</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/35/35/%E5%90%B4%E5%B1%B1%E5%BA%99%E4%BC%9A%E4%B9%8B%E6%9D%BF%E8%93%9D%E6%A0%B9.jpg" alt="吴山庙会之板蓝根.jpg"></p>
<p>吴山庙会。板蓝根还能这么吃？</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/36/2/%E6%9D%A8%E5%9C%A3%E5%88%9A%E9%A2%86%E8%AF%81.jpg?imageMogr2/thumbnail/500x500" alt="杨圣刚领证.jpg"></p>
<p>老同学领证结婚，一块吃了一顿饭</p>
<hr>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/18/15/36/38/%E6%8B%9C%E5%B9%B4%E4%B8%AD.jpg" alt="拜年中.jpg"></p>
<p>亲戚家拜年</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[古代有不少精通术数的高人，那么用兵打仗为什么不直接算算成功与否?]]></title>
      <url>http://lovenight.github.io/2016/04/01/%E5%8F%A4%E4%BB%A3%E6%9C%89%E4%B8%8D%E5%B0%91%E7%B2%BE%E9%80%9A%E6%9C%AF%E6%95%B0%E7%9A%84%E9%AB%98%E4%BA%BA%EF%BC%8C%E9%82%A3%E4%B9%88%E7%94%A8%E5%85%B5%E6%89%93%E4%BB%97%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E7%9B%B4%E6%8E%A5%E7%AE%97%E7%AE%97%E6%88%90%E5%8A%9F%E4%B8%8E%E5%90%A6/</url>
      <content type="html"><![CDATA[<p>知乎上看到一个问题<a href="https://www.zhihu.com/question/41992448" target="_blank" rel="external">古代有不少精通术数的高人，那么用兵打仗为什么不直接算算成功与否?</a>，回答顺便膜了一发，为免被删，在博客上也留一份：</p>
<a id="more"></a>
<p>宋之前一直有专门的官员执掌占卜事宜，战争这样的国家大事当然会算。春秋时代的《吴子兵法》中有八不卜与六不占，特意提出这十四个要点，正好说明出征前占卜是一种普遍行为：</p>
<blockquote>
<p>吴子曰：「凡料敌有不卜而与之战者八。一曰：”疾风大寒，早兴寐迁，刊木济水，不惮艰难。二曰：盛夏炎热，晏兴无间，行驱饥渴，务于取远。三曰：师既淹久，粮食无有，百姓怨怒，妖祥数起，上不能止。四曰：军资既竭，薪刍既寡，天多阴雨，欲掠无所。五曰：徒众不多，水地不利，人马疾疫，四邻不至。六曰：道远日暮，士众劳惧，倦而未食，解甲而息。七曰：将薄吏轻，士卒不固，三军数惊，师徒无助。八曰：陈而未定，舍而未毕，行坂涉险，半隐半出。诸如此者，击之无疑。」<br>「有不占而避之者六。一曰：土地广大，人民富众。二曰：上爱其下。惠施流布。三曰：赏信刑察，发必得时。四曰：陈功居列，任贤使能。五曰：师徒之众，兵甲之精。六曰：四邻之助，大国之援。凡此不如敌人，避之勿疑。所谓见可而进，知难而退也。」</p>
</blockquote>
<p>这种明显打不过和明显能赢的战争没必要占卜。《左传》中也有相关的战例：</p>
<blockquote>
<p>楚屈瑕将盟贰、轸。郧人军于蒲骚，将与随、绞、州、蓼伐楚师。莫敖患之。斗廉曰：「郧人军其郊，必不诫，且日虞四邑之至也。君次于郊郢，以御四邑。<strong>我以锐师宵加于郧，郧有虞心而恃其城，莫有斗志。若败郧师，四邑必离</strong>。」莫敖曰：「盍请济师于王？」对曰：「师克在和，不在众。商、周之不敌，君之所闻也。成军以出，又何济焉？」<strong>莫敖曰：「卜之？」对曰：「卜以决疑，不疑何卜？」遂败郧师于蒲骚，卒盟而还</strong>。</p>
</blockquote>
<p>从上面的分析和战例中，我们可以看到，占卜只不过是一种辅助的手段，是一样工具。好比人的外衣服。夏天快到了，谁还会穿棉大衣呢？每样工具都有特定的用途。战争中占卜的用途不是预知胜负，而是用于动员军队、振奋士气。</p>
<p>唐太宗李世民非常熟悉算命那一套，他四岁的时候，有个术士来他家里见到他，赞叹说「龙凤之姿，天日之表，年将二十，必能济世安民」。李渊大喜，给他取名「世民」。李世民十八岁的时候鼓动李渊起兵，李渊对他说，将来如果事成，你来当太子！还给李世民的长子取名「承乾」，给人一种钦定的感觉！</p>
<p>后来李世民率唐军南征北讨，在虎牢关以少胜多，一举击破郑王王世充与夏王窦建德的联军。从此有余力与李唐争雄的军阀都被消灭殆尽。李世民也因军功被封为史无前例的「天策上将」，为百官之首，可以自行组建领导班子「天策府」，俨然一个小朝廷。可是李渊却迟迟不肯立李世民为太子，李世民与李建成李元吉的矛盾日益激化，终于决定发动玄武门之变先下手为强，事先找人占吉凶。张公谨劝谏说：</p>
<blockquote>
<p>「凡卜筮者，将以决嫌疑，定犹豫，今既事在不疑，何卜之有？纵卜之不吉，势不可已，愿大王思之。」</p>
</blockquote>
<p>就算占卜结果不吉，我们难道就坐以待毙？如今箭在弦上不得不发，占卜又有何用！</p>
<p>李世民登基后，有次与卫国公李靖谈论兵法</p>
<blockquote>
<p>太宗曰：「阴阳术数，废之可乎？」<br>靖曰：「不可。兵者，诡道也。托之以阴阳术数，则使贪使愚，兹不可废也。」</p>
</blockquote>
<p>这一段就说得非常明白了，出征前占卜就是拿来忽悠那些不懂军事的人啊，他们拿衣服、图森破，给他们分析军事形势是对牛弹琴，不如直接告诉他们「老天爷已经研究决定了，这场战争我们能赢」更有效更直接。</p>
<p>当然，占卜结果不会事事吉利。周武王伐纣，路上大风吹折了军旗，雷声吓死了武王马车的御者。周公说今年逆太岁，占卜都是凶兆，还是回到我们的西方国家去吧。姜太公把他怒斥了一番，说商纣无道，杀害贤良，任用谗臣，失了天命人心，如今我们顺应历史的进程，征战必胜，你那些朽骨枯草懂什么？于是下令烧掉龟壳蓍草，继续前行。后来的事情我们都知道了，周朝延续了八百年，充分说明武王的自我奋斗、姜太公的决定权，都是很重要的！</p>
<p>清初噶尔丹叛乱，康熙命李文贞占卜，得复卦，上爻发动，爻辞「凶，有灾眚。用行师终有大败，以其国君凶，至于十年不克征」，脸都白了。康熙大笑说：</p>
<blockquote>
<p>今噶尔丹背天犯顺，自蹈危机，兆乃应彼，非应我也。</p>
</blockquote>
<p>于是亲自率军三次征讨噶尔丹，果然连获大捷。</p>
<p>如果你没有得到主帅的授意，自己私下起占卜成败还到处说，抓起来砍了。这是军令，不要拿自己的小命开玩笑。</p>
<p>今人研习卜筮，往往容易陷入命定与改命的怪圈，在这种小细节上纠结，得不偿失。古人的思想觉悟比你们不知道高到哪里去了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[推荐一个Chrome插件——RSS Feed Reader]]></title>
      <url>http://lovenight.github.io/2016/02/02/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AAChrome%E6%8F%92%E4%BB%B6%E2%80%94%E2%80%94RSS-Feed-Reader/</url>
      <content type="html"><![CDATA[<p>平时关注很多博客，要挨个去查看更新不现实。感谢IE，十年前就提供了RSS功能，订阅后会有提示。现在习惯用Chrome，需要装个插件：<a href="https://chrome.google.com/webstore/detail/rss-feed-reader/pnjaodmkngahhkoihejjehlcdlnohgmp?hl=zh-CN" target="_blank" rel="external">RSS Feed Reader</a></p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/2/2/15/54/28/RSS%20Feed%20Reader.jpg" alt="RSS Feed Reader.jpg"></p>
<p>右上角加号上的1表示浏览器当前页面有一个RSS源，点加号就可以订阅它。第一行的「岁月如歌」是我的博客，右侧的1表示更新了一篇新日志。</p>
<p>目前该插件有一个BUG，Android目录下的某个博客的所有文章，每次打开浏览器都被识别为新文章。没研究过是怎么回事。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[算命的结论真的会影响某些人一生吗？]]></title>
      <url>http://lovenight.github.io/2016/02/02/%E7%AE%97%E5%91%BD%E7%9A%84%E7%BB%93%E6%9E%9C%E7%9C%9F%E7%9A%84%E4%BC%9A%E5%BD%B1%E5%93%8D%E4%BA%BA%E7%9A%84%E4%B8%80%E7%94%9F%E5%90%97%EF%BC%9F/</url>
      <content type="html"><![CDATA[<p>现在在知乎上以膜蛤为主，有时候兴之所致，会认真地写一些回答。膜得太暴力，被封了个小号。把小号里唯一认真回答的在这里备份一下。</p>
<a id="more"></a>
<h1 id="算命的结论真的会影响某些人一生吗？">算命的结论真的会影响某些人一生吗？</h1><p>当然会影响啦。只是影响力大小不一，比如唐太宗李世民的「世民」二字就是算命先生钦点的：龙凤之姿，天日之表，其年将二十，必能济世安民矣。算命先生走后，李渊怕走漏风声，派人追杀。没想到这家伙跑得比西方记者还快，到处都找不着他，只能作罢。</p>
<p>不过，后来李世民受封天策上将，乃至夺权称帝，都是靠自我的奋斗，顺应了历史的进程，这些就不关算命先生什么事了。</p>
<p>李世民曾与卫国公李靖有一段对话：</p>
<pre><code>太宗曰：阴阳术数，废之可乎？
靖曰：不可。兵者，诡道也。托之以阴阳术数，则使贪使愚，兹不可废也。
</code></pre><p>上文中的阴阳术数就是现在俗称的算命，对统治者来说，这只是忽悠愚民的利器。还记得陈胜吴广是怎么起义的吗？把「陈胜王」三个字写在白绸上塞进鱼肚子，伪装成是天意。</p>
<p>更早的西汉末年，曾发生过一件极为讽刺的事。当时有算命先生算出一句谶言：刘秀当为天子。</p>
<p>可是当时有两个刘秀（也许有其他平民也叫这名字，不过登上历史舞台的就这两位），一个是汉中山靖王刘胜之后，由于汉武帝施行推恩令，到刘秀这一代已经失去了爵位，成了地道的农民，天天下地干农活。当他听说这个预言时，开玩笑说：何用知非仆邪？你们怎么知道不是我？</p>
<p>另一个刘秀是当朝国师、经学大儒刘歆(xin)，在数学上也有贡献，算出圆周率是3.15471。他为避汉哀帝刘欣的讳改名为刘秀。听到谶言后打算诛杀王莽，事败被杀。</p>
<p>真是成也谶言，败也谶言。</p>
<p>统治者用算命建立威望、聚拢人心，易学家用算命精研易理，算命先生用算命发财，普通人用算命寻找心理寄托。普通人被算命坑的例子就更多了，数不胜数。真正能从中受益的，一百个里有一个，已经很不错了。知乎上有个问题：<a href="https://www.zhihu.com/question/32228461" target="_blank" rel="external">有哪些东西是 1949 年后才有的，却常被我们当做传统文化？</a>其实在算命方面也有许多内容，是现代人创造，谎称传统。各位想算命的还是慎重。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[古龙小说前言不完全收集]]></title>
      <url>http://lovenight.github.io/2015/12/24/%E5%8F%A4%E9%BE%99%E5%B0%8F%E8%AF%B4%E5%89%8D%E8%A8%80%E4%B8%8D%E5%AE%8C%E5%85%A8%E6%94%B6%E9%9B%86/</url>
      <content type="html"><![CDATA[<p>今天看到个网文与金庸小说对比的问题，忽然想起早年看过的古龙。印象最深刻的居然不是小说情节，而是小说的前言。搜集了几篇回味一下：</p>
<hr>
<h1 id="《多情剑客无情剑》_代序">《多情剑客无情剑》 代序</h1><p>  　　（一）<br>　　在很多人心目中，武侠小说非但不是文学，甚至也不能算是小说，对一个写武侠小说的人说来，这实在是件很悲哀的事情，幸好还有一点事实是任何人都不能否认的──一样东西如果能存在就一定有它存在的价值。<br>　　武侠小说不但存在，而且已存在了很久！</p>
<p>　　关于武侠小说的源起，一向有很多种不同的说法：“从太史公的《游侠列传》开始，中国就有了武侠小说。”这当然是其中最堂皇的一种，可惜接受这种说法的人并不多。<br>　　因为武侠小说是传奇的，如果一定要将它和太史公那种严肃的传记文学，相提并论，就未免有点自欺欺人了。<br>　　在唐人的小说笔记中，才有些故事和武侠小说比较接近。<br>　　《唐人说荟》卷五，张鷟的《耳目记》中，就有段故事是非常“武侠”的。<br>　　“隋末，深州诸葛昂，性豪侠，渤海高瓒闻而造之，为设鸡肫而已，瓒小其用，明日大设，屈昂数十人，烹猪羊等长八尺，薄饼阔丈余，裹馅粗如庭柱，盘作酒碗行巡，自作金刚舞以送之。昂至后日，屈瓒所屈客数百人，大设，车行酒，马行炙，挫碓斩脍，硙砾蒜齑，唱夜又歌狮子舞。瓒明日，复烹一双子十余岁，呈其头颅手足，座客皆喉而吐之。<br><a id="more"></a><br>　　昂后日报设，先令美妾行酒，妾无故笑，昂叱下，头臾蒸此妾坐银盘，仍饰以脂粉，衣以锦绣，遂擘腿肉以啖，瓒诸人皆掩目，昂于奶房间撮肥肉食之，尽饱而止。瓒羞之，夜遁而去。”<br>　　这段故事描写诸葛昂和高瓒的豪野残酷，已令人不可思议，这种描写的手法，也已经很接近现代武侠小说中比较残酷的描写。<br>　　但这故事却是片断的，它的形式和小说还是有段很大的距离。当时民间的小说、传奇、平话、银字儿中，也有很多故事是非常“武侠”的，譬如说，盗盒的红线、昆仑奴、妙手空空儿、虬髯客，这些人物就几乎已经是现在武侠小说中人物的典型。</p>
<p>　　武侠小说中最主要的武器是剑，关于剑术的描写，从唐时已比现代武侠小说中描写得更神奇。<br>　　红线，大李将军，公孙大娘……这些人的剑术，都已被渲染得接近神话，杜甫的《观公孙大娘弟子舞剑器行》，其中对公孙大娘和她弟子李十二娘剑术的描写当然更生动而传神。<br>　　号称“草圣“的唐代大书法家，也曾自言：“始吾闻公主与担夫争路，而得笔法之意，后见公孙氏舞剑器，而得其神。”<br>　　“剑器”虽然不是剑，但其中的精髓却无疑是和剑术一脉相连的，由此可见，武侠小说中关于剑术和武功的描写，并非无根据。<br>　　这些古老的传说和记载，点点滴滴，都是武侠小说的起源，再经过民间的平话、弹词、和说书的改变，才渐渐演变成现在的这种型式。</p>
<p>　　（二）</p>
<p>　　《彭公案》、《施公案》、《七侠五义》、《小五义》和《三侠剑》就都是根据“说书”而写成的，已可算是我们这一代所能接触到的，最早的一批武侠小说。<br>　　可是这种小说中的英雄，大都不是可以令人热血沸腾的真正英雄，因为在清末那种社会环境里，根本就不鼓励人们做英雄，老成持重的君子，才是一般人认为应该受到表扬的。<br>　　这至少证明了武侠小说的一点价值……从一本武侠小说中，也可以看到作者当时的时代背景。<br>　　现代的武侠小说呢？</p>
<p>　　我有很多朋友都是智慧很高，很有文学修养的人，他们往往会对我道：“我从来没有看过武侠小说，几时送一套你认为最得意的给我，让我看看武侠小说里写的究竟是什么。”<br>　　我笑笑。<br>　　我只能笑笑，因为我懂得他们的意思。<br>　　他们认为武侠小说并不值得看，现在所以要看，只不过因为我是他们的朋友，而且有一种好奇。<br>　　他们认为武侠小说的读者，绝不会是他们那阶层的人，绝不会是思想新颖的高级知识分子。<br>　　他们嘴里虽说要看，其实心里早已否认了武侠小说的价值。<br>　　而他根本就没有看过武侠小说，根本就不知道武侠小说写的是什么。<br>　　我不怪他，并非因为武侠小说的确给了人一种根深蒂固的观念，使人认为就算不看也能知道它的内容。<br>　　因为武侠小说的确已落入了一些固定的形式。<br>　　──一个有志气”，“天赋异禀”的少年，如何去辛苦学武，学成后如何去扬眉吐气，出人头地。<br>　　这段经历中当然包括了无数次神话般的巧合与奇遇，当然也包括了一段仇恨，一段爱情，最后是报仇雪恨，有情人成了眷属。<br>　　──一个正直的侠客，如何运用他的智慧和武功，破了江湖中一个规模庞大的恶势力。<br>　　这位侠客不但“少年英俊，文武双全”，而且运气特别好，有时甚至能以“易容术”化妆成各式各样的人，连这些人的至亲好友，父母妻子都辨不出他的真伪。<br>　　这种写法并不坏，其中的人物有英雄侠士、风尘异人、节妇烈女，也有枭雄恶霸、荡妇淫娃、奸险小人，其中的情节一定很曲折离奇，紧张刺激，而且很香艳。<br>　　只可惜这种型式已写得太多了些，已成了俗套，成了公式，而且通常都写得太荒唐无稽，太鲜血淋淋，却忘了只有“人性”才是小说中不可缺少的。<br>　　人性并不仅是愤怒、仇恨、悲哀、恐惧，其中包括了爱与友情，慷慨与侠义，幽默与同情。<br>　　我们为什么要特别着重其中丑恶的一面？</p>
<p>　　（三）</p>
<p>　　我们这一代的武侠小说，如果真是由平江不肖生的《江湖奇侠传》开始，至还珠楼主的《蜀山剑侠传》到达巅峰，至王度卢的《铁骑银瓶》和朱贞木的《七杀碑》为一变，至金庸的《射鵰英雄传》又一变，到现在又有十几年了，现在无疑又已到了应该变的时候！<br>　　要求变，就得求新，就得突破那些陈旧的固定形式，尝试去吸收。<br>　　《战争与和平》写的是一个大时代中的动乱，和人性中善与恶的冲突，《人鼠之间》写的却是人性的骄傲和卑贱，《国际机场》写的是一个人如何在极度危险中重新认清自我，《小妇人》写的是青春与欢乐，《老人与海》写的是勇气的价值，和生命的可贵。<br>　　这些伟大的作家们，用他们敏锐的观察力，丰富的想象力，和一种悲天悯人的同情心，有力的刻划出人性，表达出他们的主题，使读者在悲欢感动之余，还能对这世上的人与事，看得更深，更远些。<br>　　这样的故事，这样的写法，武侠小说也同样可以用，为什么偏偏没有人用过？<br>　　谁规定武侠小说一定要怎么样，才能算“正宗”！<br>　　武狭小说也和别的小说一样，要能吸引人，能振奋人心，激起人心的共鸣，就是成功的！</p>
<p>　　有很多人都认为当今小说最蓬勃兴旺的地方，不在欧美，而在日本。<br>　　因为日本小说不但能保持它自己的悠久传统和独有趣味，还能吸收。<br>　　它吸收了中国的古典文学，也吸引了很多种西方思想。<br>　　日本作者能将外来文学作品的精华融会贯通，创造出一种新的民族风格的文学。武侠小说的作者为什么不能？<br>　　武侠小说既然也有自己悠久的传统和独特的趣味，若能再尽量吸收其它文学作品的精华，岂非也同样能创造出一种新的风格，独立的风格，让武侠小说也能在文学的领域中占一席地，让别人不能否认它的价值，让不看武侠小说的人也来看武侠小说！<br>　　这就是我们最大的愿望。<br>　　现在我们的力量也许还不够，但我们至少应该向这条路上走去，摆脱一切束缚往这条路上走去。<br>　　现在我们才起步虽已迟了些，却还是不太迟！</p>
<hr>
<h1 id="《风铃中的刀声》_风铃-马蹄-刀">《风铃中的刀声》 风铃.马蹄.刀</h1><p>  　　（一）<br>　　作为一个作家，总是会觉得自己像一条茧中的蛹，总是想要求一种突破，可是这种突破是需要煎熬的，有时候经过了很长久很长久的煎熬之后，还是不能化为蝴蝶，化作蚕，更不要希望练成丝了。<br>　　所以有许多作家困死在茧中，所以他们常常酗酒、吸毒、逃避、自暴自弃，甚至会把一根“雷明顿”的散弹猎枪含在喉咙里，用一根本来握笔的手指扳开枪擎口扣下扳机，把他自己和他的绝望同时毁灭。<br>　　创作是一件多么艰苦的事，除了他们自己之外恐怕很少有人能明白。<br>　　可是一个作家只要活着就一定要创作，否则他就会消失。<br>　　无声无息的消失就不如轰轰烈烈的毁灭了。</p>
<p>　　所以每一个作家都希望自己能够有一种新的突破，新的创作。对他们来说，这种意境简直已经接近“禅”与“道”。<br>　　在这段过程中，他们所受到的挫折辱骂与讪笑，甚至不会比唐三藏在求经的路途中所受的挫折和苦难少。<br>　　宗教、艺术、文学，在某一方面来讲是殊途同归的。在他们求新求变的过程中，总是免不了会有一些痛苦的煎熬。</p>
<p>　　（二）</p>
<p>　　作为一个已经写了二十五年武侠小说，已经写了两千余万字，而且已经被改编为两百多部武侠电影的作者来说，想求新求变，想创作突破，这种欲望也许已经比一个沉水的溺者，想看到一根浮木的希望更强烈。<br>　　只可惜这种希望往往是空的。<br>　　所以溺者死，作者亡，也是一件很平常的事，他们不死不亡的几率通常都不超过千分之一。</p>
<p>　　《风铃中的刀声》绝不是一条及时赶来的救援船，更不会是一块陆地。我最多只不过希望它是一根浮木而已，最多只不过希望它能带给我一点点生命上的绿意。</p>
<p>　　（三）</p>
<p>　　有一夜，在酒后，和倪匡兄，闲聊之中我忽然想起来这个名字。聊起来，故事也就来了，那时候谁也不知道这个故事是个什么样的故事，只不过有点故事的影子而已。有一天，酒后醉，醉后醒。这个故事的影子居然成了一点形。<br>　　然后在床上，在浴中，在车里，在樽边，在我还可以思想的时候，这个故事就好像一只蛹忽然化作了蝴蝶。<br>　　蝴蝶也有很多种，有的美，有的丑，有的平凡，有的珍贵。<br>　　这只蝴蝶会是一只什么样的蝴蝶？<br>　　谁知道？</p>
<p>　　（四）</p>
<p>　　有一夜，有很多朋友在我家里喝酒，其中有编者、有作家、有导演、有明星、有名士、有美人，甚至还有江湖豪客、武术名家。<br>　　我提议玩一种游戏，一种很不好玩的游戏。<br>　　我提议由一个人说一个名词，然后每个人都要在很短的时间里说出他们认为和那个名词有关的另外三个名词。<br>　　譬如说：一个人说出来的名词是“花生”。<br>　　另外一个人联想到三个名词就是“杰美·卡特”、“青春痘”、“红标米酒”。</p>
<p>　　那一天我提出来的是：“风铃”。<br>　　大家立刻联想到的有：<br>　　秋天、风、小孩的手、装饰、钉子、等待、音乐匣、悠闲、屋檐下、离别、幻想、门、问题、伴侣、寂寞、思情、警惕、忧郁、回忆、怀念……<br>　　在这些回答中有很多是会很容易就会和风铃联想到一起的，有一些回答却会使别人觉得很奇突，譬如说钉子。“你怎么会把钉子和风铃联想到一起？”我问那个做出这个回答的人。</p>
<p>　　这一次他的回答更绝：“没有钉子风铃怎么能挂得住？”小孩的手呢？小孩的手又和风铃有什么关系？<br>　　回答的人说：“你有没有看见过一个小孩在看到风铃时不用手去玩一玩的？”</p>
<p>　　“你呢？”他们问我：“你对于风铃的联想是什么？”<br>　　“我和你们有点不同。”我说：“大概是因为我是一个写小说的，而小说所写的总是人，所以我对每一件事情每一样东西联想到的都是人。”<br>　　“这次你联想到的是一些什么人？”<br>　　“浪子、远人、过客、离夫。”我忽然又说：“这次我甚至会联想到马蹄声。”<br>　　“马蹄声？风铃怎么会让你联想到马蹄声？”<br>　　我给他们的是三行在新诗中流传极广的名句：
　　</p>
<blockquote>
<p>我答答的马蹄，<br>是个美丽的错误，<br>我不是归人，是个过客。</p>
</blockquote>
<p>　　（五）</p>
<p>　　一个寂寞的少妇独坐在风铃下，等待着她所思念的远人归来，她的心情多么凄凉多么寂寞。<br>　　在这种情况下，每一种声音都会带给她无穷的幻想和希望，让她觉得远人已归。<br>　　等到她的希望和幻想破灭时，虽然会觉得哀伤痛苦，但是那一阵短短的希望毕竟还是美丽的。<br>　　所以诗人才会说：“是个美丽的错误”。<br>　　如果等到希望都没有的时候，那才是真正的悲哀。<br>　　在这一篇“风铃中的刀声”中，一开始我写的就是这么样的一个故事。</p>
<p>　　这个故事里当然也有刀。</p>
<p>　　（六）</p>
<p>　　一刀挥出，刀锋破空，震动了风铃。凄厉的刀声衬得风铃声更优雅美丽，这种声音最容易撩起人们的相思。<br>　　相思中的人果然回来了，可是他的归来却又让所有的希望全部碎灭。<br>　　这是个多么残酷的故事，不幸的是真实有时比故事残酷。<br>　　于是思念就变成了仇恨，感怀就变成了怨毒。<br>　　于是血就要开始流了。</p>
<p>　　“为什么武侠小说里总是少不了要有流血的故事？”有人问我。<br>　　“不是武侠小说里少不了要有流血，而是人世间永远都避免不了这样的事。”我说：“在这个世界上每一个角落里，随时随刻都可能有这一类的事发生。”<br>　　“这种事难道就永远不能停止？”<br>　　“当然可以阻止。”我说：“只不过要付出很大的代价而已。”<br>　　我又补充：“这种代价虽然每个人都可以付出，但却很少有人愿意付出。”<br>　　“为什么？”<br>　　“因为要付出这种代价就要牺牲。”<br>　　“牺牲什么？”<br>　　“牺牲自己。”我说：“抑制自己的愤怒，容忍别人的过失，忘记别人对自己的伤害，培养自己对别人的爱心。在某些方面来说，都可以算是一种自我牺牲。”<br>　　“我明白了。”问我话的朋友说：“这个世界上的血腥和暴力一直很难被阻止，就因为大多数人都不愿意去管这种事。”<br>　　他的神情严肃而沉痛：“因为要牺牲任何事都很容易，要牺牲自己却是非常困难。”<br>　　“是的。”<br>　　我也用一种同样严肃而沉痛的表情看着我的朋友，用一种仿佛风铃的声音对他说：<br>　　“可是如果你认为这个世界上已经没有愿意牺牲自己的人，那你就完全错了。”<br>　　我的朋友笑了，大笑！<br>　　我也笑。</p>
<p>　　（七）</p>
<p>　　我笑，是因为我开心，我开心是因为我的朋友都知道，武侠小说里写的并不是血腥与暴力，而是容忍、爱心与牺牲。<br>　　我也相信这一类的故事也同样可以激动人心。</p>
<hr>
<h1 id="《三少爷的剑》前言">《三少爷的剑》前言</h1><p>　　现代的社会越来越复杂，越来越现实。<br>　　现代人随时随地都会遭受到各式各样的约束。<br>　　可是以前不同。<br>　　“过去的日子都是好日子”，这句话我并不赞成。<br>　　可是过去的确有过好日子。<br>　　在现代的西方，你就算明知一个人是杀人犯，明知他杀了你的兄弟妻子，假如没有确实的证据，你也只有眼看着他逍遥法外。<br>　　因为你若想“以牙还牙，以血还血”，你去杀了他，那么你也变成一个杀人犯。<br><!-- more --><br>　　“报复”并不是种很好的法子，只不过那至少总比让恶人逍遥法外的好。<br>　　在以前某一种时代里，是不会有这种事的。<br>　　那是种很痛快的时代，快意恩仇，敢爱敢恨，善有善报，恶有恶报。<br>　　用不着老天替你报，你自己就可以报复。<br>　　我写的就是那种时代。<br>　　我写的就是那种时代中的江湖人。</p>
<p>　　在那种时代中，江湖中有各式各样的人。<br>　　有大侠，也有大盗；有镖客，也有刺客；有义士，也有隐士；有神偷，也有神捕；有侠女，也有妓女；有市井匹夫，也有世家子弟。<br>　　他们的生活通常都是多彩多姿的，充满了冒险和刺激。<br>　　有很多人对他们憎恶厌恨，也有很多人羡慕他们。<br>　　因为他们通常都衣着光鲜，出手豪阔，大碗喝酒，大块吃肉。<br>　　只可惜这只不过是他们快乐的一面──<br>　　他们还有另一面。<br>　　痛苦的一面。</p>
<p>　　神捕捉了神偷，设宴庆功，大吃大喝，喝得半死为止。<br>　　大盗捞了一票，分一点给穷人，自己去花天酒地，把钱花光为止。<br>　　大侠有名有势，不管走到哪里去，都会受到别人的尊敬和欢迎。<br>　　世家子弟们从小锦衣玉食，要什么有什么。<br>　　这种生活确实是值得羡慕的，可是你有没有看见过他们的另一面？</p>
<p>　　他们也有他们的寂寞和痛苦。<br>　　夜深人静，从大醉中醒来，忽然发现躺在自己旁边的是个自己连名字都不知道的人。<br>　　这种滋味你有没有尝试过？<br>　　在欢呼和喝彩声中，一个人回到家里，面对着漆黑的窗户，只希望快点天亮。<br>　　这种心情你有没有想到过？<br>　　今宵花天酒地，狂欢极乐，却连自己明日会在什么地方都不知道。<br>　　甚至连今宵酒醉在何地都不知道。<br>　　杨柳飞舞，晓风残月，这种意境虽然美，却又美得多么凄凉，多么让人心碎？<br>　　这种欢乐，你愿不愿意享受？<br>　　假如你要什么就有什么，这人生中还有什么是值得你去追求的？<br>　　这种空虚有谁知道？<br>　　我知道。<br>　　因为我也是个江湖人，也是个没有根的浪子，如果有人说我这是在慢性自杀，自寻死路，那只因为他不知道──<br>　　不知道我手里早已有了杯毒酒。<br>　　当然是最好的毒酒。</p>
<p>　　武侠小说中写的本就是江湖人，可是我现在想写的却有点不同。<br>　　我想写一系列的故事，每篇故事都以一个典型的代表人物为中心。<br>　　我想写他们的快乐，也要写他们的痛苦。<br>　　我想让他们来做一面镜子，让大家都可以从这面镜子中看出自己应该怎么做。<br>　　无论如何，他们总是可爱的人。<br>　　因为他们敢爱敢恨，敢哭敢笑，因为他们讲义气、有原则。<br>　　人生毕竟也是可爱的。</p>
<p>　　人活着，就应该懂得怎么去享受生命，怎么去追寻快乐。<br>　　一个人脸上若是脏了，是不是要去照照镜子才知道怎样去擦掉？<br>　　我只希望这面镜子也能做到这一点，能够帮助人擦掉生命中的污垢。<br>　　我真的希望每个人的人生都能变得很快乐。</p>
<p>　　一九七四、十、二七、黎明。</p>
<hr>
<h1 id="写在《天涯·明月·刀》之前">写在《天涯·明月·刀》之前</h1><p>　　在很多人心目中，武侠小说非但不是文学，甚至也不能算是小说。对一个写武侠小说的人说来，这实在是件很悲哀的事。幸好还有一点事实是任何人都不能否认的—一一样东西如果能存在，就一定有它存在的价值。<br>　　武侠小说不但存在，而且已存在了很久！</p>
<p>　　关于武侠小说的起源，一向有很多种不同的说法：“从太史公的游侠列传开始，中国就有了武侠小说。”这当然是其中最堂皇的一种，可惜接受这种说法的人并不多。<br>　　因为武侠小说是传奇的，如果一定要将它和太史公那种严肃的传记文学相提并论，就未免有点自欺欺人了。<br>　　在唐人的小说笔记中，才有些故事和武侠小说比较接近。<br>　　《唐人说荟》卷五，张鷟的《耳目记》中，就有段故事是非常“武侠”的。<br>　　“隋末，深州诸葛昂，性豪侠，渤海高瓒闻而造之，为设鸡肫而已，瓒小其用，明日大设，屈昂数十人，烹猪羊等长八尺，薄饼阔丈余，里裹粗如庭柱，盘作酒碗行巡，自作金刚舞以送之。<br>　　“昂至后日，高瓒所屈客数百人，大设，车行酒，马行炙，挫椎斩脍，硙轹蒜齑，唱夜叉歌狮子舞。<br>　　“瓒明日，复烹一双子十余岁，呈其头颅手足，座客皆喉而吐之。<br>　　“昂后日报设，先令美妾行酒，妾无故笑，昂叱下，须臾蒸此妾坐银盘，仍饰以脂粉，衣以锦绣，遂擘腿肉以啖，瓒诸人皆掩目，昂于奶房间撮肥肉食之，尽饱而止。<br>　　“瓒羞之，夜遁而去。”<br>　　这段故事描写诸葛昂和高瓒的豪野残酷，已令人不可思议。这种描写的手法，也已经很接近武侠小说中比较残酷的描写。<br>　　但这故事却是片段的，它的形式和小说还是有段很大的距离。<br>　　当时民间的小说、传奇、评话、银字儿中，也有很多故事是非常“武侠”的，譬如说，盗盒的红线、昆仑奴、妙手空空儿、虬髯客，这些人物就几乎已是现代武侠小说中人物的典型。</p>
<p>　　武侠小说中最主要的武器是剑，关于剑术的描写，从唐时就已比现代武侠小说中描写得更神奇。<br>　　红线、大李将军、公孙大娘……这些人的剑术，都已被渲染得接近神话杜甫的《观公孙大娘弟子舞剑器行》，其中对公孙大娘和她弟子李十二娘剑术的描写，当然更生动而传神！<br>　　号称“草圣”的唐代大书法家也曾自言：“始吾闻公主与担夫争路，而笔法之意，后见公孙氏舞剑器，直得其神。”<br>　　“剑器”虽然不是剑，但其中的精髓却无疑是和剑术一脉相通的。由此可见，武侠小说中关于剑术和武功的描写，并非全无根据。<br>　　这些古老的传说和记载，点点滴滴，都是武侠小说的起源，再经过民间评话、弹词和说书的改变，才渐渐演变成现在的这种形式。</p>
<p>　　（二）</p>
<p>　　《彭公案》、《施公案》、《七侠五义》、《小五义》、就是根据“说书”而写成的，已可算是我们这一代所能接触到的，最早的一种武侠小说。<br>　　可是这种小说中的英雄，大都不是可以令人热血沸腾的真正英雄，因为在清末那种社会环境里，根本就不鼓励人们做英雄，老成持重的君子，才是一般人认为应该受到表扬的。<br>　　这至少证明了武侠小说的一点价值——从一本武侠小说中，也可以看到作者当时的时代背景。<br>　　现代的武侠小说呢？</p>
<p>　　（三）</p>
<p>　　现代的武侠小说，若由平江不肖生的《江湖奇侠传》开始算起，大致可以分成三个时代。<br>　　写《蜀山剑侠传》的还珠楼主，是第一个时代的领袖。写《七杀碑》的朱贞木，写《铁骑银瓶》的王度庐可以算是第二个时代的代表。<br>　　到了金庸写《射雕》，将武侠小说带进了另一个局面。<br>　　这个时代，无疑是武侠小说最盛行的时代，写武侠小说的人，最多时曾经有三百个。</p>
<p>　　就因为武侠小说已经写得太多，读者们也看得太多，所以有很多读者看了一部书的前两本，就已经可以预测到结局。<br>　　最妙的是，越是奇诡的故事，读者越能猜到结局。<br>　　因为同样“奇诡”的故事已被写过无数次了。易容、毒药、诈死，最善良的女人就是“女魔头”——这些圈套都已很难令读者上钩。<br>　　所以情节的诡奇变化，已不能再算是武侠小说中最大的吸引力。<br>　　但人性中的冲突却是永远有吸引力的。<br>　　武侠小说中已不该再写神，写魔头，已应该开始写人，活生生的人，有血有肉的人！<br>　　武侠小说中的主角应该有人的优点，也应该有人的缺点，更应该有人的惑情。<br>　　写《包法利夫人》的大文豪福楼拜尔曾经夸下句海口，他说：“十九世纪后将再无小说。”<br>　　因为他认为所有的故事情节，所有的情感变化，都已被十九世纪的那些伟大的作家写尽了。<br>　　可是他错了。<br>　　他忽略了一点！<br>　　纵然是同样的故事情节，你若从不同的角度去看，写出来的小说就是完全不同的。<br>　　人类的观念和看法，本就在永不停地改变！随着时代改变！<br>　　武侠小说写的虽然是古代的事，也未尝不可注入作者自己新的观念。<br>　　因为小说本就是虚构的！<br>　　写小说不是写历史传记。写小说最大的目的，就是要吸引读者，感动读者。<br>　　武侠小说的情节若已无法改变，为什么不能改变一下，写人类的情感，人性的冲突，由情感的冲突中，制造高潮和动作。</p>
<p>　　应该怎样来写动作，的确也是武侠小说的一大难题。<br>　　我总认为“动作”并不一定就是“打”！<br>　　小说中的动作和电影画面的动作，可以给人一种生猛的刺激，但小说中瞄写的动作就是没有电影画面中这种鲜明刺激的力量。<br>　　小说中动作的描写，应该是简单的，短而有力的，虎虎有生气的，不落俗套的。<br>　　小说中动作的描写，应该先制造冲突，情感的冲突，事件的冲突，尽力将各种冲突堆构成一个高潮。<br>　　然后你再制造气氛，紧张的气氛，肃杀的气氛。<br>　　用气氛来烘托动作的刺激。<br>　　武侠小说毕竟不是国术指导。<br>　　武侠小说也不是教你如何去打人杀人的！<br>　　血和暴力，虽然永远有它的吸引力，但是太多的血和暴力，就会令人反胃了。</p>
<p>　　（四）</p>
<p>　　最近我的胃很不好，心情也不佳，所以除了维持《七种武器》和《陆小凤》两个连续性的故事外，已很久没有开新稿。<br>　　近月在报刊上连载的《历劫江湖》和《金剑残骨令》，都是我十五年前的旧书。我并不反对把“旧书新登”，因为温故而知新，至少可以让读者看到一个作家写作路线的改变！<br>　　《天涯·明月·刀》，是我最新的一篇稿子。我自己也不知道它是不是能给读者一点“新”的感受，我只知道我是在尽力朝这个方向走！<br>　　每在写一篇新稿之前，我总喜欢写一点自己对武狭小说的看法和感想，零零碎碎已写了很多。抛砖引玉，我希望读者们也能写一点自己的感想，让武侠小说能再往前走一步。<br>　　走一大步。</p>
<p>　　古　龙<br>　　一九七四、四、十七、夜、夜深。</p>
<hr>
<h1 id="《大人物》_谈“新”与“变”">《大人物》 谈“新”与“变”</h1><p>　　有一天我在台湾电视公司看排戏，排戏的大都是我的朋友，我的朋友们大都是很优秀的演员。<br>　　其中有一位不但是个优秀的演最，也是个优秀的剧作者，优秀的导演，曾经执导过一部出色而不落俗套的影片，在很多影展中获得彩声。<br>　　这么样一个人，当然很有智慧，很有文学修养，他忽然对我说：“我从来没有看过武侠小说，几时送一套你认为最得意的给我，让我看看武侠小说里写的究竟是些什么。”<br>　　我笑笑。<br>　　我只能笑笑，因为我懂得他的意思。<br>　　他认为武侠小说并不值得看，现在所以要看，只不过因为我是他的朋友，而且有一点好奇。<br>　　他认为武侠小说的读者绝不会是他那一阶层的人，绝不会是思想新颖的高级知识分子。<br>　　他嘴里说要看看，其实心里却早已否定了武侠小说的价值。<br>　　而他根本就没有看过武侠小说，根本就不知道武侠小说写的究竟是什么。<br>　　我不怪他也，并非因为他是我的朋友，所以才不怪他，而是因为武侠小说的确给予别人一种根深蒂固的观念，使人认为就算不看也能知道它的内容。<br>　　有这种观念的并不止他一个，很多人都对我说过同样的话。说话时的态度和心理也几乎完全相同。<br>　　因为武侠小说的确已落入了固定的形式。<br>　　武侠小说的形式大致可以分为几种：<br>　　一个有志气，而“天赋异禀”的少年，如何去辛苦学武，学成后如何扬眉吐气，出入头地。<br>　　这段历程中当然包括了无教次神话般的巧合与奇遇，当然，也包括了一段仇恨，一段爱情，最后是报仇雪恨，有情人终成了眷属。<br>　　一个正直的侠客，如何运用他的智慧和武功，破了江湖中一个为非作歹，规模庞大的恶势力，这位侠客不但“少年英俊，文武双全”，而且运气特别好，有时他甚至能以“易容术”化妆成各式各样的人，连这些人的至亲好友，父母妻子都辨不出真伪。<br>　　这种写法并不坏，其中的人物包括了英雄侠士，风尘异人，节妇烈女，也包括枭雄恶霸，歹徒小人，荡妇淫娃。<br>　　所以这种故事一定曲折离奇，紧张刺激，而且还很香艳。<br>　　这种形式并不坏，只可惜写得太多了些，已成了俗套，成了公式，假如有人将故事写得更奇秘些，就会被认为是“新”，故事的变化多些，就会被认为是在“变”，其实却根本没有突破这种形式。<br>　　“新”与“变”并不是这意思。<br>　　“红与黑”写的是一个少年如何引诱别人妻子的心理过程。“国际机场”写的是一个人如何在极度危险中如何重新认清自我，“小妇人”写的是青春与欢乐，“老人与海”写的是勇气和价值，以及生命的可贵，“人鼠之间”写的是人性的骄傲和卑贱……<br>　　这些伟大的作家们，因他们敏锐的观察力和丰富的想像力，有力的刻画出人性，表达了他们的主题，使读者在为他们书中的人物悲欢感动之余，还能对这世上的人与事，看得更深些，更远些。<br>　　他们表现的方式往往令人拍案叫绝。<br>　　这么样的故事，这么样的写法，武侠小说也一样可以用，为什么偏偏没有人写过？<br>　　谁规定武侠小说一定要怎么样写，才能算正宗的武侠小说？<br>　　武侠小说也和别的小说一样，只要你能吸引读者，使读者被你的人物故事所感动，你就算成功。</p>
<p>　　有一天我遇见了一个我很喜欢的女孩子，她读的书并不多，但却不笨。<br>　　当她知道我是个“作家”时，她眼睛里立刻发出了光，立刻问我：“你写的是什么小说？”<br>　　我说谎，却从不愿在我喜欢的人面前说谎，因为世上绝没有一个人的记忆力能好得始终能记得自己的谎言，我若喜欢她，就难免要时常和她相处，若时常相处，谎言就一定会被拆穿。<br>　　所以我说：“我写的是武侠小说。”<br>　　她听了之后，眼睛里那种兴奋而关怀的光辉立刻消失。<br>　　我甚至不敢去看她，因为我早已猜出了她会有什么样的表情。<br>　　过了很久，她才带着几分歉意告诉我：“我从不看武侠小说。”<br>　　直到我跟她很熟之后，我才敢问她：“为什么不看？”<br>　　她的回答使我很意外。<br>　　她说：“我看不懂。”<br>　　武侠小说本是通俗的，为什么会使人觉得看不懂？<br>　　我想了很久，才想通。<br>　　她看不懂的是武侠小说中那种“自成一格”的对话，那种繁复艰涩的招式名称，也看不懂那种四个字一句，很有“古风”的描写字句。<br>　　她奇怪，武侠小说为什么不能将文字写得简单明了些？为什么不将对话写得比较生活化些，比较有人情味？<br>　　我只能解释：“因为我们写的是古时的事，古代的人物。”<br>　　她立刻追问：“你怎么知道古时的人说话是什么样子的？你听过他们说话吗？”<br>　　我怔住，我不能回答！<br>　　她又说：“你们难道以为像平剧和古代小说中那种对话，就是古代人说话的方式？就算真的是，你们也不必那么样写呀，因为你们写小说的最大目的，就是要人看，别人若看不懂，就不看，别人不看，你们写什么？”<br>　　她说话的技巧并不高明，却很直接。<br>　　她说的道理也许并不完全对，但至少有点道理。<br>　　写小说，当然是给别人看的，看的人越多越好。<br>　　武侠小说当然有人看，但武侠小说的读者，几乎也和武侠小说本身一样，范围太窄，不看武侠小说的人，比看的人多得多。<br>　　我们若要争取更多的读者，就要想法子要不看武侠小说的人也来看武侠小说，想法子要他们对武侠小说的观念改变。<br>　　所以我们就要新，就要变！</p>
<p>　　要新，要变，就要尝试，就要吸收。<br>　　有很多人都认为当今小说最蓬勃兴旺的地方，不在欧美，而在日本。<br>　　因为日本的小说不但能保持它自己的悠久传统，还能吸收。<br>　　它吸收了中国的古典文学，也吸收了很多种西方思想。<br>　　日本作者先能将外来文学作品的精华融化贯通，创造出一种新的民族风格的文学，武侠小说的作者为什么不能。<br>　　有人说：“从太史公的游侠列传开始，中国就有了武侠小说。”<br>　　武侠小说既然也有自己悠久的传统，若能再尽量吸收其他文学作品的精华，总有一天，我们也能将武侠小说创造出一种新的风格，独立的风格，让武侠小说也能在文学的领域中占一席之地，让别人不能否认它的价值。<br>　　让不看武侠小说的人也来看武侠小说！<br>　　这就是我们最大的愿望。<br>　　现在我们的力量虽然还不够，但我们至少应该向这条路上去走，挣脱一切束缚往这条路上去走。<br>　　现在我们才起步虽已迟了些，却还不太迟！</p>
<p>　　一九六九.十二.二十一</p>
<hr>
<h1 id="《飞刀又见飞刀》_关于飞刀">《飞刀又见飞刀》 关于飞刀</h1><p>　　刀不仅是一种武器，而且在俗传的十八般武器中排名第一。<br>　　可是在某一方面来说，刀是比不上剑的，它没有剑那种高雅神秘浪漫的气质，也没有剑的尊贵。<br>　　剑有时候是一种华丽的装饰，有时候是一种身分和地位的象征。<br>　　在某一种时候，剑甚至是一种权力和威严的象征。<br>　　刀不是。<br>　　剑是优雅的，是属于贵族的，刀却是普遍化的，平民化的。<br>　　有关剑的联想，往往是在宫廷里，在深山里，在白云间。<br>　　刀却是和人类的生活息息相关的。<br>　　人出世以后，从剪断他脐带的剪刀开始，就和刀脱不开关系，切菜、裁衣、剪布、理发、修须、整甲、分肉、剖鱼、切面、示警、扬威、正法，这些事没有一件可以少得了刀。<br>　　人类的生活里，不能没有刀，好像人类的生活里，不能没有米和水一样。<br>　　奇怪的是，在人们的心目中，刀还比剑更残酷更惨烈更凶悍更野蛮更刚猛。<br>　　刀有很多种，有单刀、双刀、朴刀、戒刀、锯齿刀、砍山刀、鬼头刀、雁翎刀、五凤朝阳刀、鱼鳞紫金刀。<br>　　飞刀无疑也是刀的一种，虽然在正史中很少有记载，却更增加了它的神秘性与传奇性。<br>　　正于“扁钻”是不是属于刀的一种呢？那就无法可考了。<br>　　李寻欢这个人物是虚构的，李寻欢的“小李飞刀”当然也是。<br>　　大家都认为这个世界上根本不可能有李寻欢这样的人物，也不可能有“小李飞刀”这样的武器。<br>　　因为这个人物太侠义正气，屈己从人，这种武器太玄奇神妙，已经脱离了现实。<br>　　因为大家所谓的“现实”，是活在现代这个世界中的人们，而不是李寻欢那个时代。<br>　　所以李寻欢和他的小李飞刀是不是虚构的并不重要，重要的是这个人物是否他能活在他的读者们的心里，是否能激起大家的共鸣，是不是能让大家和他共悲喜同欢笑。<br>　　本来谁也不知道李寻欢和他的飞刀究竟是什么样子的，可是经过电影的处理后，却使得他们更形象化，也更大众化了。<br>　　从某一种角度看大众化就是俗，就是从俗，就是远离文学和艺术。　<br>　　可是我总认为在现在这么样一种社会形态中，大众化一点也没有什么不好。<br>　　那至少比一个人躲在象牙塔里独自哭泣的好。<br>　　有关李寻欢和他的飞刀的故事是一部小说，“飞刀·又见飞刀”这部小说，当然也和李寻欢的故事有密不可分的关系。<br>　　可是他们之间有很多完全不相同的地方。<br>　　──虽然这两个故事同样是李寻欢两代间的恩怨情仇，却是完全独立的。<br>　　──小李飞刀的故事虽然已经被很多次搬上银幕和萤光幕，但他的故事，却已经被写成小说很久了，“飞刀”的故事现在已经拍摄成电影了，小说却刚刚开始写。<br>　　这种例子就好像萧十一郎一样，先有电影才有小说。<br>　　这种情况可以避免很多不必要的枝节，使得故事更精简，变化更多。<br>　　因为电影是一种整体的作业，不知道要消耗多少人的心血，也不知道要消耗多少物力和财力。<br>　　所以写电影小说的时候，和写一般小说的心情是绝不相同的。<br>　　幸好写这两种小说还有一点相同的地方，总希望能让读者激起一点欢欣鼓舞之心，敌忾同仇之气。<br>　　我想这也许就是我写小说的最大目的之一。<br>　　──当然并不是全部目的。<br>　　还有一点我必须声明。<br>　　现在我腕伤犹未愈，还不能不停的写很多字，所以我只能由我口述，请人代笔。<br>　　这种写稿的方式，是我以前一直不愿意做的。<br>　　因为这样写稿常常会忽略很多文字上和故事上的细节，对于人性的刻划和感伤，也绝不会有自己用笔去写出来的那种体会。<br>　　最少绝不会有那种细致婉转的伤感，那么深的感触。<br>　　当然在文字上也会有一点欠缺的；因为中国文字的精巧，几乎就像是中国文人的伤感那么细腻。<br>　　幸好我也不必向各位抱歉，因为像这么样写出来的小说情节一定是比较流畅紧凑的，一定不会生涩苦闷冗长的毛病。<br>　　而生涩苦闷冗长一向是常常出现在我小说中的毛病。</p>
<p>　　古　龙<br>　　于病后，<br>　　非关病酒。不在酒后。<br>　　一九七七年二月十日夜</p>
<hr>
<h1 id="《欢乐英雄》_代序──说说武侠小说">《欢乐英雄》 代序──说说武侠小说</h1><p>　　又是个新的尝试，因为武侠小说实在已经到了应该变的时候。<br>　　在很多人心目中，武侠小说非但不是文学，不是文艺，甚至也不能算是小说。正如蚯蚓，虽然也会动，却很少人将它当做动物。<br>　　造成这种看法的固然是因为某些人的偏见，但我们自己也不能完全推卸责任。<br>　　武侠小说有时的确写得太荒唐太无稽，太鲜血淋漓，却忘了只有“人性”才是每本小说中都不可缺少的。<br>　　人性并不仅是愤怒、仇恨、悲哀、恐惧，其中也包括了爱与友情、慷慨与侠义、幽默与同情的，我们为什么要去特别强调其中丑恶的一面呢？<br>　　还有，我们这一代的武侠小说约莫由平江不肖生的《江湖奇侠传》开始，至王度庐的《铁骑银瓶》和朱贞木的《七杀碑》为一变，至金庸的《射雕英雄传》又一变，到现在已又有十几年了。<br>　　这十几年中，出版的武侠小说已算不出有几千几百种，有的故事简直成了老套，成为公式，老资格的读者只要一看开头，就可以猜到结局。<br>　　所以武侠小说作者若想提高自己的地位，就得变；若想提高读者的兴趣，也得变。<br>　　有人说，应该从“武”，变到“侠”，若将这句话说得更明白些，也就是说武侠小说应该多写些光明，少写些黑暗；多写些人性，少写些血。<br>　　也有人说，这么样一变，武侠小说根本就变了质，就不是“正宗”的武侠小说了，有的读者根本就不愿意接受，不能接受。<br>　　这两种说法也许都不错，所以我们只有尝试，不短地尝试。我们虽然不敢奢望别人将我们的武侠小说看成文学，至少总希望别人能将它看成“小说”，也和别的小说有同样的地位，同样能振奋人心，同样能激起人心的共鸣。<br>　　每一小节几乎都是个独立的故事，即使分开来看，也不会减少它的趣味──如果它还有一点趣味，这尝试就不能算失败。</p>
<hr>
<h1 id="《白玉老虎》_后记">《白玉老虎》 后记</h1><p>　　“白玉老虎”这故事，写的是一个人内心的冲突，情感与理智的冲突，情感与责任的冲突，情感与仇恨的冲突。<br>　　我总认为，故事情节的变化有穷尽时，只有情感的冲突才永远能激动人心。<br>　　这故事中主要写的是赵无忌这个人。<br>　　现在赵无忌内心的冲突已经被打成了一个结，死结。<br>　　所以这故事也应该告一段落。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[金华之行]]></title>
      <url>http://lovenight.github.io/2015/12/23/%E9%87%91%E5%8D%8E%E4%B9%8B%E8%A1%8C/</url>
      <content type="html"><![CDATA[<p>小毛驴同学2013年1月3日在金华二中向女友求婚，4日来到杭州西湖区民政局登记结婚——201314。我们几个仍在杭州的本科同学一块吃了顿饭。当时鸡爷老蔡老蒋都还没毕业，一转眼鸡爷已经毕业结婚，老蔡刚工作数月，老蒋还在发愁博士论文。2015年12月20日，终于轮到毛驴婚礼。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/16/32/50/%E9%87%91%E5%8D%8E%E7%AB%99.jpg" alt="金华站.jpg"><br>猪爷懒得开车，和老婆两个人坐着鸡爷的车去金华，我和老蔡乘高铁过去。鸡猪二爷出发晚，开车又慢。我们到金华时，他们车刚到萧山。毛驴开车来火车站接我们，没带家里的钥匙，父母又出门喝喜酒，只好带我们去市区找了家肯德基坐下聊天吃点东西。</p>
<a id="more"></a>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/16/32/50/%E5%9C%A8%E9%87%91%E5%8D%8E%E5%92%8C%E5%A4%A7%E5%AD%A6%E5%90%8C%E5%AD%A6%E4%B8%80%E8%B5%B7%E5%90%83%E9%A5%AD.jpg?imageMogr2/thumbnail/500x500" alt="在金华和大学同学一起吃饭.jpg"></p>
<p>直接在饭店与鸡爷等人碰头。终于见到猪爷的老婆，传说中的「默默」。大家吃吃聊聊到八点多。猪爷向我和老蔡传授相亲秘诀：如果你没有车，女方就不太想出去。如果你有辆好车，女方一看，车还不错，可以发展发展。默默在一边一个劲地附和，表示女生确实是这样的心态。猪爷的经历太奇葩，一律「日后再说」，我们两个老实人没法照搬。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/16/32/50/%E4%BA%94%E8%BF%9E%E5%9D%90Dota2.jpg?imageMogr2/thumbnail/500x500" alt="五连坐Dota2.jpg"><br>送两位妹子回宾馆休息后，我们五个步行来到附近的网吧开黑五连坐。第一次玩Dota2就不知不觉超神。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/16/32/50/%E7%87%95%E5%B0%BE%E6%B4%B2%E5%85%AC%E5%9B%AD2.jpg" alt="燕尾洲公园2.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/16/32/50/%E7%87%95%E5%B0%BE%E6%B4%B2%E5%85%AC%E5%9B%AD8.jpg" alt="燕尾洲公园8.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/16/32/50/%E7%87%95%E5%B0%BE%E6%B4%B2%E5%85%AC%E5%9B%AD11.jpg" alt="燕尾洲公园11.jpg"><br>第二天老蔡一大早起来去当伴郎，我们其他人中午一块找了家店吃午饭，又去逛了附近的燕尾洲公园。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/16/32/50/%E7%BB%91%E4%B8%9D%E5%B8%A6.jpg" alt="绑丝带.jpg"><br>到婚礼现场，毛驴正在绑丝带。毛驴的母亲也在，非常热情，开了两瓶啤酒和我们干了几杯。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/16/32/50/%E6%96%B0%E9%83%8E%E4%B8%8E%E6%96%B0%E5%A8%981.jpg" alt="新郎与新娘1.jpg"><br>上楼去看了新娘。和毛驴是高中同学，大一时经常来学校找他，还记得有次我打游戏很开心，边出门边大声说话，把刚上楼的她吓一跳。这次的中式红妆也非常漂亮。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/16/32/50/%E5%A9%9A%E7%A4%BC%E5%89%8D%E5%8E%BB%E7%BD%91%E5%90%A71.jpg" alt="婚礼前去网吧1.jpg"><br>等得无聊，和鸡猪爷夫妇一行五人又去网吧玩了两局。三连坐有点虚，一输一赢。网吧有个活动拍三张照片转发朋友圈就送饮料，照办后要了一杯菠萝橙汁。交差后就删了。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/16/32/50/%E5%BE%85%E5%BC%80%E5%A7%8B.jpg" alt="待开始.jpg"><br>入场时想塞红包给毛驴，结果说本科同学的红包一律不收。我们六人坐了半桌，坐等婚礼开始。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/16/32/50/%E5%8D%B3%E5%85%B4%E5%8F%91%E8%A1%A8%E7%88%B1%E6%83%85%E5%AE%A3%E8%A8%80.jpg?imageMogr2/thumbnail/500x500" alt="即兴发表爱情宣言.jpg"><br>毛驴即兴发表爱情宣言。</p>
<p>婚礼搞活动时被抽到，上台拿了几个玩具，全送给默默了。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/16/32/50/%E9%87%91%E5%8D%8E%E9%AB%98%E9%93%81%E7%AB%99%EF%BC%8C%E5%AF%B9%E9%9D%A2%E7%9A%84%E5%AF%B9%E9%9D%A2%E6%98%AF%E6%99%AE%E9%80%9A%E7%81%AB%E8%BD%A6%E7%AB%99.jpg" alt="金华高铁站，对面的对面是普通火车站.jpg"><br>结束后六人挤鸡爷的车来到金华火车站，放下我和老蔡坐高铁回杭。奇葩的火车站，高铁站居然在隔壁，没有直接通道，坐了电瓶车绕路三公里才来到这里。老板说刚载两个黑人过去。</p>
<hr>
<p>再放一些近期拍的照片</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/%E5%86%AC%E8%87%B3%E5%90%83%E9%BA%BB%E7%B3%8D.jpg?imageMogr2/thumbnail/500x500" alt="冬至吃麻糍.jpg"><br>东阳冬至必吃的食物，麻糍。方言叫「油麻袋」。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/%E5%8C%BB%E9%99%A2%E7%AD%89%E5%BE%85%E4%B8%AD.jpg" alt="医院等待中.jpg"><br>同德医院看病中</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/%E5%9C%B0%E9%93%81%E6%96%BD%E5%B7%A5%E7%9A%84%E5%B7%A8%E5%A4%A7%E5%90%8A%E8%87%82.jpg" alt="地铁施工的巨大吊臂.jpg"><br>地铁施工的巨大吊臂</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/%E5%9F%8E%E7%AB%99%E8%A5%BF%E7%9A%84%E6%B5%81%E6%B5%AA%E8%80%85.jpg" alt="城站西的流浪者.jpg"><br>城站西侧的流浪者</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/%E8%A5%BF%E6%B9%962.jpg" alt="西湖2.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/%E8%A5%BF%E6%B9%96%E5%9E%82%E6%9F%B3.jpg" alt="西湖垂柳.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/%E8%A5%BF%E6%B9%96%E6%B8%B8%E8%88%B9.jpg" alt="西湖游船.jpg"><br>与王DY见面当天，到早了，先在附近西湖逛了一番</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/%E5%AE%9D%E7%9F%B3%E5%B1%B17.jpg" alt="宝石山7.jpg"><br>与王DY见面后雅兴不减，独自撑伞夜游西湖，从一公园绕道断桥，一路走到浙大附中坐车回家。这是宝石山。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/%E8%A5%BF%E6%B9%96%E8%BE%B9%E7%9A%84%E8%82%AF%E5%BE%B7%E5%9F%BA.jpg" alt="西湖边的肯德基.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/%E8%A5%BF%E6%B9%96%E8%BE%B9%E7%9A%84%E8%82%AF%E5%BE%B7%E5%9F%BA2.jpg" alt="西湖边的肯德基2.jpg"><br>见面光顾着说话，吃得不多，横穿西湖后肚子饿，在肯德基吃点东西。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/%E5%B0%8F%E5%8C%BA%E5%A4%96%E7%9A%84%E5%8D%96%E5%94%B1%E6%AD%8C%E6%89%8B.jpg?imageMogr2/thumbnail/500x500" alt="小区外的卖唱歌手.jpg"><br>小区外的卖唱歌手，不是我喜欢的风格。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/%E6%88%91%E5%A7%90%E7%9A%84%E7%94%9F%E6%97%A5.jpg?imageMogr2/thumbnail/500x500" alt="我姐的生日.jpg"><br>214，这天是我姐的生日。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/2015%E5%B9%B4%E7%9A%84%E7%AC%AC%E4%B8%80%E5%9C%BA%E9%9B%AA.jpg" alt="2015年的第一场雪.jpg"><br>2015年的第一场雪</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/23/17/38/20/%E5%85%85%E5%85%B6%E9%87%8F%E5%8F%AA%E8%83%BD%E7%AE%97%E6%98%AF%E5%8E%86%E5%8F%B2%E8%AF%84%E8%AE%BA.jpg?imageMogr2/thumbnail/500x500" alt="充其量只能算是历史评论.jpg"><br>只是一部历史评论集。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python 3 抓取知乎指定答案下的点赞名单]]></title>
      <url>http://lovenight.github.io/2015/12/17/Python-3-%E6%8A%93%E5%8F%96%E7%9F%A5%E4%B9%8E%E6%8C%87%E5%AE%9A%E7%AD%94%E6%A1%88%E4%B8%8B%E7%9A%84%E7%82%B9%E8%B5%9E%E5%90%8D%E5%8D%95/</url>
      <content type="html"><![CDATA[<h1 id="抓包分析">抓包分析</h1><p>以<a href="https://www.zhihu.com/question/38490150/answer/77029343" target="_blank" rel="external">「如何看待《万万没想到西游篇》大电影在知乎上被众多大神唾弃的现象？ - 张兆杰的回答」</a>为例。</p>
<p>使用Chrome抓包发现，点击「等人赞同」链接时，浏览器向如下网址发送GET请求：</p>
<pre><code><span class="symbol">https:</span>/<span class="regexp">/www.zhihu.com/answer</span><span class="regexp">/26236952/voters</span>_profile
</code></pre><p>26236952是此答案对应的aid:<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/17/15/4/19/aid.png" alt="aid.png"></p>
<a id="more"></a>
<p>返回的JSON数据中有这么一项：</p>
<pre><code><span class="string">"next"</span>: <span class="string">"/answer/26236952/voters_profile?total=808&amp;offset=10&amp;follows=NYRY--TZ3-l5H4gXp5RoqQVv"</span>
</code></pre><p>下拉滚动条，浏览器会继续发送GET请求：</p>
<pre><code><span class="keyword">https</span>://www.zhihu.com/answer/<span class="number">26236952</span>/voters_profile?total=<span class="number">808</span>&amp;<span class="built_in">offset</span>=<span class="number">10</span>&amp;follows=NYRY<span class="comment">--TZ3-l5H4gXp5RoqQVv</span>
</code></pre><p>正好是next指向的网址。</p>
<p>每次GET请求返回的JSON数据都包含了10个点赞用户的信息，单个用户的信息如下：</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"zm-profile-card clearfix no-hovercard"</span>&gt;</span>
<span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"zg-right"</span>&gt;</span>
<span class="tag">&lt;<span class="title">button</span> <span class="attribute">data-follow</span>=<span class="value">"m:button"</span> <span class="attribute">data-id</span>=<span class="value">"6b500d547283f3cc186eafff2a8033b4"</span> <span class="attribute">class</span>=<span class="value">"zg-btn zg-btn-follow zm-rich-follow-btn small nth-0"</span>&gt;</span>关注她<span class="tag">&lt;/<span class="title">button</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;<span class="title">a</span> <span class="attribute">title</span>=<span class="value">"薛定谔的喵"</span>
<span class="attribute">data-tip</span>=<span class="value">"p$t$fang-ting-20-32"</span>
<span class="attribute">class</span>=<span class="value">"zm-item-link-avatar"</span>
<span class="attribute">target</span>=<span class="value">"_blank"</span>
<span class="attribute">href</span>=<span class="value">"/people/fang-ting-20-32"</span>&gt;</span>
<span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"https://pic1.zhimg.com/52ae34056536f4088c7667890f14aaa8_m.jpg"</span> <span class="attribute">class</span>=<span class="value">"zm-item-img-avatar"</span>&gt;</span>
<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
<span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"body"</span>&gt;</span>
<span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"author ellipsis"</span>&gt;</span>
<span class="tag">&lt;<span class="title">a</span> <span class="attribute">data-tip</span>=<span class="value">"p$t$fang-ting-20-32"</span> <span class="attribute">href</span>=<span class="value">"https://www.zhihu.com/people/fang-ting-20-32"</span> <span class="attribute">target</span>=<span class="value">"_blank"</span> <span class="attribute">class</span>=<span class="value">"zg-link"</span> <span class="attribute">title</span>=<span class="value">"薛定谔的喵"</span>&gt;</span>薛定谔的喵<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
<span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"bio hidden-phone"</span>&gt;</span>世界那么大，我来看看！<span class="tag">&lt;/<span class="title">span</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;<span class="title">ul</span> <span class="attribute">class</span>=<span class="value">"status"</span>&gt;</span>
<span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>13 赞同<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
<span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>6 感谢<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
<span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"hidden-phone"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"/people/fang-ting-20-32/asks"</span> <span class="attribute">target</span>=<span class="value">"_blank"</span>&gt;</span>0 提问<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
<span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"hidden-phone"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"/people/fang-ting-20-32/answers"</span> <span class="attribute">target</span>=<span class="value">"_blank"</span>&gt;</span>19 回答<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
<span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><p>由于0回答则必然0赞同0感谢，只须提取提问和回答数。</p>
<p>如果是匿名用户：</p>
<pre><code>&lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"zm-profile-card clearfix no-hovercard"</span>&gt;
&lt;span <span class="type">class</span>=<span class="string">"zm-item-link-avatar"</span>&gt;
&lt;img title=<span class="string">"匿名用户"</span> <span class="type">class</span>=<span class="string">"zm-item-img-avatar"</span> src=<span class="string">"https://pic2.zhimg.com/aadd7b895_m.jpg"</span>/&gt;
&lt;/span&gt;
&lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"body"</span>&gt;
匿名用户
&lt;/<span class="keyword">div</span>&gt;
&lt;/<span class="keyword">div</span>&gt;
</code></pre><hr>
<h1 id="使用说明">使用说明</h1><pre><code><span class="number">1.</span> 答案对应的aid需要自己在网页源码中找
<span class="number">2.</span> 如果需要获取完整的抓取结果，将下面save这一行取消注释
    <span class="preprocessor"># 想看完整结果可以保存到csv文件，用Excel查看</span>
    <span class="preprocessor"># save(infos, aid)</span>
<span class="number">3.</span> 首次使用时需要运行 ZhiHuClient().login(username, password) 登录一次，以后不需要
<span class="number">4.</span> 控制台输出如下：
    总赞数：<span class="number">822</span>，四零用户数：<span class="number">182</span>，比例：<span class="number">0.22141119221411193</span>
</code></pre><p><strong>四零用户</strong>是指：0赞同、0感谢、0提问、0回答。有些知友万年潜水，从来不提问和回答，他们的数据也会是四个0。所以四零用户不等于水军号。而且现在养水军号一般会养上一段时间伪装成正常号再使用，很难判断。<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/17/15/18/37/%E5%9B%9B%E9%9B%B6%E7%94%A8%E6%88%B7.png" alt="四零用户.png"></p>
<p><strong>改进空间</strong>：后来测了一下，发送GET请求的网址可以精简：</p>
<pre><code><span class="symbol">https:</span>/<span class="regexp">/www.zhihu.com/answer</span><span class="regexp">/26236952/voters</span>_profile?offset=<span class="number">10</span>
</code></pre><p>只需改变offset值就能获取不同的信息，可以改成多线程爬取。</p>
<hr>
<h1 id="脚本源码">脚本源码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: loveNight</span></span><br><span class="line"><span class="comment"># @Date:   2015-12-17 00:52:27</span></span><br><span class="line"><span class="comment"># @Last Modified by:   loveNight</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2015-12-17 02:50:20</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> BS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ZhiHuClient</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""连接知乎的工具类，维护一个Session</span><br><span class="line">    2015.11.11</span><br><span class="line"></span><br><span class="line">    用法：</span><br><span class="line"></span><br><span class="line">    client = ZhiHuClient()</span><br><span class="line"></span><br><span class="line">    # 第一次使用时需要调用此方法登录一次，生成cookie文件</span><br><span class="line">    # 以后可以跳过这一步</span><br><span class="line">    client.login("username", "password")</span><br><span class="line"></span><br><span class="line">    # 用这个session进行其他网络操作，详见requests库</span><br><span class="line">    session = client.getSession()</span><br><span class="line">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 网址参数是账号类型</span></span><br><span class="line">    TYPE_PHONE_NUM = <span class="string">"phone_num"</span></span><br><span class="line">    TYPE_EMAIL = <span class="string">"email"</span></span><br><span class="line">    loginURL = <span class="string">r"http://www.zhihu.com/login/&#123;0&#125;"</span></span><br><span class="line">    homeURL = <span class="string">r"http://www.zhihu.com"</span></span><br><span class="line">    captchaURL = <span class="string">r"http://www.zhihu.com/captcha.gif"</span></span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.86 Safari/537.36"</span>,</span><br><span class="line">        <span class="string">"Accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"</span>,</span><br><span class="line">        <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate"</span>,</span><br><span class="line">        <span class="string">"Host"</span>: <span class="string">"www.zhihu.com"</span>,</span><br><span class="line">        <span class="string">"Upgrade-Insecure-Requests"</span>: <span class="string">"1"</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    captchaFile = os.path.join(sys.path[<span class="number">0</span>], <span class="string">"captcha.gif"</span>)</span><br><span class="line">    cookieFile = os.path.join(sys.path[<span class="number">0</span>], <span class="string">"cookie"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        os.chdir(sys.path[<span class="number">0</span>])  <span class="comment"># 设置脚本所在目录为当前工作目录</span></span><br><span class="line"></span><br><span class="line">        self.__session = requests.Session()</span><br><span class="line">        self.__session.headers = self.headers  <span class="comment"># 用self调用类变量是防止将来类改名</span></span><br><span class="line">        <span class="comment"># 若已经有 cookie 则直接登录</span></span><br><span class="line">        self.__cookie = self.__loadCookie()</span><br><span class="line">        <span class="keyword">if</span> self.__cookie:</span><br><span class="line">            print(<span class="string">"检测到cookie文件，直接使用cookie登录"</span>)</span><br><span class="line">            self.__session.cookies.update(self.__cookie)</span><br><span class="line">            soup = BS(self.open(<span class="string">r"http://www.zhihu.com/"</span>).text, <span class="string">"html.parser"</span>)</span><br><span class="line">            print(<span class="string">"已登陆账号： %s"</span> % soup.find(<span class="string">"span"</span>, class_=<span class="string">"name"</span>).getText())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"没有找到cookie文件，请调用login方法登录一次！"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 登录</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self, username, password)</span>:</span></span><br><span class="line">        <span class="string">"""</span><br><span class="line">        验证码错误返回：</span><br><span class="line">        &#123;'errcode': 1991829, 'r': 1, 'data': &#123;'captcha': '请提交正确的验证码 :('&#125;, 'msg': '请提交正确的验证码 :('&#125;</span><br><span class="line">        登录成功返回：</span><br><span class="line">        &#123;'r': 0, 'msg': '登陆成功'&#125;</span><br><span class="line">        """</span></span><br><span class="line">        self.__username = username</span><br><span class="line">        self.__password = password</span><br><span class="line">        self.__loginURL = self.loginURL.format(self.__getUsernameType())</span><br><span class="line">        <span class="comment"># 随便开个网页，获取登陆所需的_xsrf</span></span><br><span class="line">        html = self.open(self.homeURL).text</span><br><span class="line">        soup = BS(html, <span class="string">"html.parser"</span>)</span><br><span class="line">        _xsrf = soup.find(<span class="string">"input"</span>, &#123;<span class="string">"name"</span>: <span class="string">"_xsrf"</span>&#125;)[<span class="string">"value"</span>]</span><br><span class="line">        <span class="comment"># 下载验证码图片</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            captcha = self.open(self.captchaURL).content</span><br><span class="line">            <span class="keyword">with</span> open(self.captchaFile, <span class="string">"wb"</span>) <span class="keyword">as</span> output:</span><br><span class="line">                output.write(captcha)</span><br><span class="line">            <span class="comment"># 人眼识别</span></span><br><span class="line">            print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">            print(<span class="string">"已打开验证码图片，请识别！"</span>)</span><br><span class="line">            subprocess.call(self.captchaFile, shell=<span class="keyword">True</span>)</span><br><span class="line">            captcha = input(<span class="string">"请输入验证码："</span>)</span><br><span class="line">            os.remove(self.captchaFile)</span><br><span class="line">            <span class="comment"># 发送POST请求</span></span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">"_xsrf"</span>: _xsrf,</span><br><span class="line">                <span class="string">"password"</span>: self.__password,</span><br><span class="line">                <span class="string">"remember_me"</span>: <span class="string">"true"</span>,</span><br><span class="line">                self.__getUsernameType(): self.__username,</span><br><span class="line">                <span class="string">"captcha"</span>: captcha</span><br><span class="line">            &#125;</span><br><span class="line">            res = self.__session.post(self.__loginURL, data=data)</span><br><span class="line">            print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">            <span class="comment"># print(res.text) # 输出脚本信息，调试用</span></span><br><span class="line">            <span class="keyword">if</span> res.json()[<span class="string">"r"</span>] == <span class="number">0</span>:</span><br><span class="line">                print(<span class="string">"登录成功"</span>)</span><br><span class="line">                self.__saveCookie()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"登录失败"</span>)</span><br><span class="line">                print(<span class="string">"错误信息 ---&gt;"</span>, res.json()[<span class="string">"msg"</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getUsernameType</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""判断用户名类型</span><br><span class="line">        经测试，网页的判断规则是纯数字为phone_num，其他为email</span><br><span class="line">        """</span></span><br><span class="line">        <span class="keyword">if</span> self.__username.isdigit():</span><br><span class="line">            <span class="keyword">return</span> self.TYPE_PHONE_NUM</span><br><span class="line">        <span class="keyword">return</span> self.TYPE_EMAIL</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__saveCookie</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""cookies 序列化到文件</span><br><span class="line">        即把dict对象转化成字符串保存</span><br><span class="line">        """</span></span><br><span class="line">        <span class="keyword">with</span> open(self.cookieFile, <span class="string">"w"</span>) <span class="keyword">as</span> output:</span><br><span class="line">            cookies = self.__session.cookies.get_dict()</span><br><span class="line">            json.dump(cookies, output)</span><br><span class="line">            print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">            print(<span class="string">"已在同目录下生成cookie文件："</span>, self.cookieFile)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__loadCookie</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""读取cookie文件，返回反序列化后的dict对象，没有则返回None"""</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(self.cookieFile):</span><br><span class="line">            print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">            <span class="keyword">with</span> open(self.cookieFile, <span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">                cookie = json.load(f)</span><br><span class="line">                <span class="keyword">return</span> cookie</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open</span><span class="params">(self, url, delay=<span class="number">0</span>, timeout=<span class="number">10</span>)</span>:</span></span><br><span class="line">        <span class="string">"""打开网页，返回Response对象"""</span></span><br><span class="line">        <span class="keyword">if</span> delay:</span><br><span class="line">            time.sleep(delay)</span><br><span class="line">        <span class="keyword">return</span> self.__session.get(url, timeout=timeout)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getSession</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.__session</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">URL_PREFIX = <span class="string">r'https://www.zhihu.com'</span></span><br><span class="line">re_question = re.compile(<span class="string">r'&gt;(\d+)\s*?提问&lt;'</span>)</span><br><span class="line">re_answer = re.compile(<span class="string">r'&gt;(\d+)\s*?回答&lt;'</span>)</span><br><span class="line">session = ZhiHuClient().getSession()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getVoters</span><span class="params">(aid)</span>:</span></span><br><span class="line">    url = <span class="string">r'https://www.zhihu.com/answer/&#123;aid&#125;/voters_profile'</span>.format(aid=aid)</span><br><span class="line">    infos = []</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="comment"># print("正在访问网址：", url)</span></span><br><span class="line">        data = session.get(url).json()</span><br><span class="line">        url = URL_PREFIX + data[<span class="string">"paging"</span>][<span class="string">"next"</span>]</span><br><span class="line">        infos.extend([getVoterInfo(x) <span class="keyword">for</span> x <span class="keyword">in</span> data[<span class="string">"payload"</span>]])</span><br><span class="line">        <span class="keyword">if</span> url == URL_PREFIX:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 想看完整结果可以保存到csv文件，用Excel查看</span></span><br><span class="line">    <span class="comment"># save(infos, aid)</span></span><br><span class="line">    count40(infos)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count40</span><span class="params">(infos)</span>:</span></span><br><span class="line">    total = len(infos)</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> info <span class="keyword">in</span> infos:</span><br><span class="line">        <span class="keyword">if</span> info:</span><br><span class="line">            <span class="keyword">if</span> info[<span class="number">1</span>] == info[<span class="number">2</span>] == <span class="number">0</span>:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">    print(<span class="string">"总赞数：%s，四零用户数：%s，比例：%s"</span> % (total, count, count / total))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(infos, aid)</span>:</span></span><br><span class="line">    result_file = os.path.join(sys.path[<span class="number">0</span>], str(aid) + <span class="string">".csv"</span>)</span><br><span class="line">    <span class="keyword">with</span> open(result_file, <span class="string">"w"</span>, encoding=<span class="string">'gbk'</span>) <span class="keyword">as</span> output:</span><br><span class="line">        output.write(<span class="string">"昵称,提问,回答,头像,主页\n"</span>)</span><br><span class="line">        <span class="keyword">for</span> info <span class="keyword">in</span> infos:</span><br><span class="line">            <span class="keyword">if</span> info:</span><br><span class="line">                info = map(str, info)</span><br><span class="line">                output.write(<span class="string">","</span>.join(info) + <span class="string">"\n"</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                output.write(<span class="string">"匿名用户,,,,\n"</span>)</span><br><span class="line">    print(<span class="string">"脚本执行完毕，请查看"</span>, result_file)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getVoterInfo</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BS(html, <span class="string">"lxml"</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="string">'img title="匿名用户"'</span> <span class="keyword">in</span> html:</span><br><span class="line">        tmp = soup.find(<span class="string">"a"</span>, class_=<span class="string">"zg-link"</span>)</span><br><span class="line">        name = tmp[<span class="string">"title"</span>]</span><br><span class="line">        user_url = tmp[<span class="string">"href"</span>]</span><br><span class="line">        avatar_url = soup.find(<span class="string">"img"</span>, class_=<span class="string">"zm-item-img-avatar"</span>)[<span class="string">"src"</span>]</span><br><span class="line">        question_count = int(re_question.findall(html)[<span class="number">0</span>])</span><br><span class="line">        answer_count = int(re_answer.findall(html)[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span> name, question_count, answer_count, avatar_url, user_url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 第一次使用时需要调用此方法登录一次，生成cookie文件</span></span><br><span class="line">    <span class="comment"># 以后可以跳过这一步</span></span><br><span class="line">    <span class="comment"># ZhiHuClient().login(username, password)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如何看待《万万没想到西游篇》大电影在知乎上被众多大神唾弃的现象？ - 张兆杰的回答</span></span><br><span class="line">    <span class="comment"># https://www.zhihu.com/question/38490150/answer/77029343</span></span><br><span class="line">    <span class="comment"># getVoters(26236952)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 能利用爬虫技术做到哪些很酷很有趣很有用的事情？ - Emily L 的回答</span></span><br><span class="line">    <span class="comment"># https://www.zhihu.com/question/27621722/answer/48177710</span></span><br><span class="line">    <span class="comment"># getVoters(14668992)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如何评价杭州女生郭文景被哈佛录取？ - 匿名用户的回答</span></span><br><span class="line">    <span class="comment"># https://www.zhihu.com/question/38444099/answer/76550778</span></span><br><span class="line">    <span class="comment"># getVoters(26045034)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 行列式的本质是什么？ - 童哲的回答</span></span><br><span class="line">    <span class="comment"># https://www.zhihu.com/question/36966326/answer/70687817</span></span><br><span class="line">    <span class="comment"># getVoters(23695740)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 为什么男生比女生多，却有很多优质女生找不到男朋友？ - Mingo鸣哥的回答</span></span><br><span class="line">    <span class="comment"># https://www.zhihu.com/question/37373471/answer/77068061</span></span><br><span class="line">    <span class="comment"># getVoters(26252564)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 什么时候才是开掉「技术合伙人」的最佳时机？ - 匿名用户的回答</span></span><br><span class="line">    <span class="comment"># https://www.zhihu.com/question/38531356/answer/76871265</span></span><br><span class="line">    getVoters(<span class="number">26173592</span>)</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[知乎环境清理脚本-Python 3]]></title>
      <url>http://lovenight.github.io/2015/12/15/%E7%9F%A5%E4%B9%8E%E7%8E%AF%E5%A2%83%E6%B8%85%E7%90%86%E8%84%9A%E6%9C%AC-Python-3/</url>
      <content type="html"><![CDATA[<h1 id="缘起">缘起</h1><p>书接上文：<a href="http://lovenight.github.io/2015/12/14/%E7%BA%B7%E4%BA%89%E4%B8%96%E4%BA%8B%E6%97%A0%E7%A9%B7%E5%B0%BD/">《纷争世事无穷尽》</a>，昨晚写了简单的脚本，先在本机运行几天，排除各类Bug后再挂到SAE。</p>
<p>由于网址总数不多（一万七千左右），没用Bloom过滤器，直接使用txt保存+set查重复。SAE上貌似不能直接创建文件，得改成使用数据库。另外SAE只支持Python 2.7，还得改一些语法。</p>
<a id="more"></a>
<hr>
<h1 id="说明">说明</h1><h2 id="功能简介">功能简介</h2><p>忽略已存在的提问，仅扫描并举报新出现的提问。为免爬得太快被封，仅使用单线程。</p>
<p>脚本中一共有三个类：</p>
<ul>
<li><strong>ZhiHuClient</strong>：登录类，维护一个登录知乎的session。<br>首次使用时需要调用<code>ZhiHuClient().login(username, password)</code>方法登录并生成Cookies，人肉识别验证码。以后就可以直接用Cookies登录了。</li>
<li><strong>Topics</strong>：待扫描的话题类。</li>
<li><strong>Scanner</strong>：扫描和举报的工具类，脚本入口是<code>scanning()</code>方法。<br>首次使用时需调用<code>firstScanning()</code>方法抓取已存在的问题网址。</li>
</ul>
<p>完成初始化后，每次启动脚本只需一行代码：</p>
<pre><code><span class="function"><span class="title">Scanner</span><span class="params">()</span></span>.<span class="function"><span class="title">scanning</span><span class="params">()</span></span>
</code></pre><p>输出如下：</p>
<pre><code>==================================================
检测到cookie文件，直接使用cookie登录
已登陆账号： ........
已读取 checkedURLs <span class="number">16931</span> 个
开始扫描
已举报： 壬申、癸卯、戊申、乙卯，男，求先生看看事业……? <span class="number">2015</span>-<span class="number">12</span>-<span class="number">16</span> <span class="number">12</span>:<span class="number">03</span>:<span class="number">07</span>
已举报： 请帮忙看看这个八字，地支三合火，水为用神，又要走伤官大运 有点怕？ <span class="number">2015</span>-<span class="number">12</span>-<span class="number">16</span> <span class="number">12</span>:<span class="number">22</span>:<span class="number">47</span>
已举报： 请各位高手随缘看一下婚姻和事业，以后发展怎么样？ <span class="number">2015</span>-<span class="number">12</span>-<span class="number">16</span> <span class="number">12</span>:<span class="number">39</span>:<span class="number">16</span>
已举报： 能不能解释我做过的一些能预示未来的梦？ <span class="number">2015</span>-<span class="number">12</span>-<span class="number">16</span> <span class="number">12</span>:<span class="number">46</span>:<span class="number">29</span>
已举报： 有没有算命的骗子在街上误拉住一位易学大师算命，反倒被大师算得跪地求解的事件？ <span class="number">2015</span>-<span class="number">12</span>-<span class="number">16</span> <span class="number">12</span>:<span class="number">53</span>:<span class="number">41</span>
已举报： 老婆要生了，求个宝宝的名字，姓于，多谢？ <span class="number">2015</span>-<span class="number">12</span>-<span class="number">16</span> <span class="number">13</span>:<span class="number">39</span>:<span class="number">11</span>
已举报： 麻烦大师帮忙看看手相？ <span class="number">2015</span>-<span class="number">12</span>-<span class="number">16</span> <span class="number">13</span>:<span class="number">49</span>:<span class="number">33</span>
已举报： 求大神帮忙想个老人居住的地方的名字，复古，自然，朴实，有活力的？ <span class="number">2015</span>-<span class="number">12</span>-<span class="number">16</span> <span class="number">13</span>:<span class="number">55</span>:<span class="number">46</span>
已举报： 从命理学角度看，如梵高这般死后才被世人承认而获得成就的人生可以被推断出来吗？ <span class="number">2015</span>-<span class="number">12</span>-<span class="number">16</span> <span class="number">14</span>:<span class="number">10</span>:<span class="number">14</span>
已举报： 求算子嗣？ <span class="number">2015</span>-<span class="number">12</span>-<span class="number">16</span> <span class="number">14</span>:<span class="number">21</span>:<span class="number">35</span>
</code></pre><p>每天不定时会集中收到私信通知处理结果，在<a href="https://www.zhihu.com/community/report" target="_blank" rel="external">https://www.zhihu.com/community/report</a>可以看到本账号举报结果汇总：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/16/15/40/46/%E4%B8%BE%E6%8A%A5%E7%BB%93%E6%9E%9C.jpg" alt="举报结果.jpg"><br>脚本跑了一天半，举报了120个左右的新问题，关闭率在95%以上。从图上最后一列可以发现，虽然脚本一律以「针对具体病情的求药问药」为理由举报所有问题，但是管理员接到举报，自己也会判断属于哪一类。所以不再需要在脚本中加入判断逻辑。</p>
<h2 id="改进空间">改进空间</h2><ol>
<li><del><code>Scanner</code>类的<code>canReport()</code>方法用于检测一个问题是否符合举报条件；<code>getReason()</code>方法判断举报原因。这两个规则还没开始写，目前一律以「针对具体病情的求药问药」为理由举报所有问题。</del>管理员自己会判断</li>
<li>知乎管理员会私信回复举报结果。添加读取和保存举报结果的功能。</li>
<li>添加判断和举报回答的功能。</li>
<li>保存网址改成保存到数据库</li>
<li>改成Python 2.7 的语法</li>
<li>知乎崩溃时，程序也会报错。</li>
</ol>
<hr>
<h1 id="ChangeLog">ChangeLog</h1><ul>
<li>2015年12月17日，每个话题下所有问题的网址保存在单独的文件中</li>
<li>2015年12月14日，扫描和举报相关话题下所有新问题。</li>
</ul>
<hr>
<h1 id="源代码">源代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__author__ = <span class="string">"loveNight"</span></span><br><span class="line">__version__ = <span class="string">"beta 2.0"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> BS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ZhiHuClient</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""连接知乎的工具类，维护一个Session</span><br><span class="line">    2015.11.11</span><br><span class="line"></span><br><span class="line">    用法：</span><br><span class="line"></span><br><span class="line">    client = ZhiHuClient()</span><br><span class="line"></span><br><span class="line">    # 第一次使用时需要调用此方法登录一次，生成cookie文件</span><br><span class="line">    # 以后可以跳过这一步</span><br><span class="line">    client.login("username", "password")</span><br><span class="line"></span><br><span class="line">    # 输出登录后的用户名</span><br><span class="line">    soup = BS(client.open(r"http://www.zhihu.com/").text, "lxml")</span><br><span class="line">    print(soup.find("span", class_="name").getText())</span><br><span class="line"></span><br><span class="line">    # 输出登录后的网页</span><br><span class="line">    print(client.open(r"http://www.zhihu.com/").text.encode("gbk", "ignore").decode("gbk"))</span><br><span class="line"></span><br><span class="line">    # 用这个session进行其他网络操作，详见requests库</span><br><span class="line">    session = client.getSession()</span><br><span class="line">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 网址参数是账号类型</span></span><br><span class="line">    TYPE_PHONE_NUM = <span class="string">"phone_num"</span></span><br><span class="line">    TYPE_EMAIL = <span class="string">"email"</span></span><br><span class="line">    loginURL = <span class="string">r"http://www.zhihu.com/login/&#123;0&#125;"</span></span><br><span class="line">    homeURL = <span class="string">r"http://www.zhihu.com"</span></span><br><span class="line">    captchaURL = <span class="string">r"http://www.zhihu.com/captcha.gif"</span></span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.86 Safari/537.36"</span>,</span><br><span class="line">        <span class="string">"Accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"</span>,</span><br><span class="line">        <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate"</span>,</span><br><span class="line">        <span class="string">"Host"</span>: <span class="string">"www.zhihu.com"</span>,</span><br><span class="line">        <span class="string">"Upgrade-Insecure-Requests"</span>: <span class="string">"1"</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    captchaFile = os.path.join(sys.path[<span class="number">0</span>], <span class="string">"captcha.gif"</span>)</span><br><span class="line">    cookieFile = os.path.join(sys.path[<span class="number">0</span>], <span class="string">"cookie"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        os.chdir(sys.path[<span class="number">0</span>])  <span class="comment"># 设置脚本所在目录为当前工作目录</span></span><br><span class="line"></span><br><span class="line">        self.__session = requests.Session()</span><br><span class="line">        self.__session.headers = self.headers  <span class="comment"># 用self调用类变量是防止将来类改名</span></span><br><span class="line">        <span class="comment"># 若已经有 cookie 则直接登录</span></span><br><span class="line">        self.__cookie = self.__loadCookie()</span><br><span class="line">        <span class="keyword">if</span> self.__cookie:</span><br><span class="line">            print(<span class="string">"检测到cookie文件，直接使用cookie登录"</span>)</span><br><span class="line">            self.__session.cookies.update(self.__cookie)</span><br><span class="line">            soup = BS(self.open(<span class="string">r"http://www.zhihu.com/"</span>).text, <span class="string">"lxml"</span>)</span><br><span class="line">            print(<span class="string">"已登陆账号： %s"</span> % soup.find(<span class="string">"span"</span>, class_=<span class="string">"name"</span>).getText())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"没有找到cookie文件，请调用login方法登录一次！"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 登录</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self, username, password)</span>:</span></span><br><span class="line">        <span class="string">"""</span><br><span class="line">        验证码错误返回：</span><br><span class="line">        &#123;'errcode': 1991829, 'r': 1, 'data': &#123;'captcha': '请提交正确的验证码 :('&#125;, 'msg': '请提交正确的验证码 :('&#125;</span><br><span class="line">        登录成功返回：</span><br><span class="line">        &#123;'r': 0, 'msg': '登陆成功'&#125;</span><br><span class="line">        """</span></span><br><span class="line">        self.__username = username</span><br><span class="line">        self.__password = password</span><br><span class="line">        self.__loginURL = self.loginURL.format(self.__getUsernameType())</span><br><span class="line">        <span class="comment"># 随便开个网页，获取登陆所需的_xsrf</span></span><br><span class="line">        html = self.open(self.homeURL).text</span><br><span class="line">        soup = BS(html, <span class="string">"lxml"</span>)  <span class="comment"># 需要第三方库lxml，也可以用标准库中的html.parser</span></span><br><span class="line">        _xsrf = soup.find(<span class="string">"input"</span>, &#123;<span class="string">"name"</span>: <span class="string">"_xsrf"</span>&#125;)[<span class="string">"value"</span>]</span><br><span class="line">        <span class="comment"># 下载验证码图片</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            captcha = self.open(self.captchaURL).content</span><br><span class="line">            <span class="keyword">with</span> open(self.captchaFile, <span class="string">"wb"</span>) <span class="keyword">as</span> output:</span><br><span class="line">                output.write(captcha)</span><br><span class="line">            <span class="comment"># 人眼识别</span></span><br><span class="line">            print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">            print(<span class="string">"已打开验证码图片，请识别！"</span>)</span><br><span class="line">            subprocess.call(self.captchaFile, shell=<span class="keyword">True</span>)</span><br><span class="line">            captcha = input(<span class="string">"请输入验证码："</span>)</span><br><span class="line">            os.remove(self.captchaFile)</span><br><span class="line">            <span class="comment"># 发送POST请求</span></span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">"_xsrf"</span>: _xsrf,</span><br><span class="line">                <span class="string">"password"</span>: self.__password,</span><br><span class="line">                <span class="string">"remember_me"</span>: <span class="string">"true"</span>,</span><br><span class="line">                self.__getUsernameType(): self.__username,</span><br><span class="line">                <span class="string">"captcha"</span>: captcha</span><br><span class="line">            &#125;</span><br><span class="line">            res = self.__session.post(self.__loginURL, data=data)</span><br><span class="line">            print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">            <span class="comment"># print(res.text) # 输出脚本信息，调试用</span></span><br><span class="line">            <span class="keyword">if</span> res.json()[<span class="string">"r"</span>] == <span class="number">0</span>:</span><br><span class="line">                print(<span class="string">"登录成功"</span>)</span><br><span class="line">                self.__saveCookie()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"登录失败"</span>)</span><br><span class="line">                print(<span class="string">"错误信息 ---&gt;"</span>, res.json()[<span class="string">"msg"</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getUsernameType</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""判断用户名类型</span><br><span class="line">        经测试，网页的判断规则是纯数字为phone_num，其他为email</span><br><span class="line">        """</span></span><br><span class="line">        <span class="keyword">if</span> self.__username.isdigit():</span><br><span class="line">            <span class="keyword">return</span> self.TYPE_PHONE_NUM</span><br><span class="line">        <span class="keyword">return</span> self.TYPE_EMAIL</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__saveCookie</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""cookies 序列化到文件</span><br><span class="line">        即把dict对象转化成字符串保存</span><br><span class="line">        """</span></span><br><span class="line">        <span class="keyword">with</span> open(self.cookieFile, <span class="string">"w"</span>) <span class="keyword">as</span> output:</span><br><span class="line">            cookies = self.__session.cookies.get_dict()</span><br><span class="line">            json.dump(cookies, output)</span><br><span class="line">            print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">            print(<span class="string">"已在同目录下生成cookie文件："</span>, self.cookieFile)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__loadCookie</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""读取cookie文件，返回反序列化后的dict对象，没有则返回None"""</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(self.cookieFile):</span><br><span class="line">            print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">            <span class="keyword">with</span> open(self.cookieFile, <span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">                cookie = json.load(f)</span><br><span class="line">                <span class="keyword">return</span> cookie</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open</span><span class="params">(self, url, delay=<span class="number">0</span>, timeout=<span class="number">10</span>)</span>:</span></span><br><span class="line">        <span class="string">"""打开网页，返回Response对象"""</span></span><br><span class="line">        <span class="keyword">if</span> delay:</span><br><span class="line">            time.sleep(delay)</span><br><span class="line">        <span class="keyword">return</span> self.__session.get(url, timeout=timeout)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getSession</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.__session</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Topics</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""待扫描的话题类，从topics.json文件中读取</span><br><span class="line"></span><br><span class="line">    用法：</span><br><span class="line">    t = Topics()</span><br><span class="line">    topics = t.topics</span><br><span class="line">    topics.update(dict2)</span><br><span class="line">    t.save2File</span><br><span class="line">    # 也可以这样更新</span><br><span class="line">    t.save2File(dict2)</span><br><span class="line">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, filename=<span class="string">"topics.json"</span>)</span>:</span></span><br><span class="line">        self.wholeFilename = os.path.join(sys.path[<span class="number">0</span>], filename)</span><br><span class="line">        <span class="keyword">with</span> open(self.wholeFilename, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                self.topics = json.load(f)</span><br><span class="line">            <span class="keyword">except</span> Exception:</span><br><span class="line">                <span class="comment"># 如果文件为空或出错，则重新初始化</span></span><br><span class="line">                self.topics = &#123;</span><br><span class="line">                    <span class="number">19699134</span>:<span class="string">"术数"</span>,</span><br><span class="line">                    <span class="number">19564692</span>:<span class="string">"占卜"</span>,</span><br><span class="line">                    <span class="number">19659169</span>:<span class="string">"玄学"</span>,</span><br><span class="line">                    <span class="number">19633456</span>:<span class="string">"算卦"</span>,</span><br><span class="line">                &#125;</span><br><span class="line">                self.save2File()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save2File</span><span class="params">(self, topic_dicts=None)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> topic_dicts:</span><br><span class="line">            self.topics.update(topic_dicts)</span><br><span class="line">        <span class="keyword">with</span> open(self.wholeFilename, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            json.dump(self.topics, f)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Question</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""问题类"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Scanner</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""扫描类，用于执行扫描操作</span><br><span class="line">    由于数据量不大，直接把某话题下所有的问题都存进txt文件，不使用布隆过滤器</span><br><span class="line">    """</span></span><br><span class="line">    re_questionId = re.compile(<span class="string">r'data-id="(\d+)"'</span>)</span><br><span class="line">    re_xsrf = re.compile(<span class="string">r'name="_xsrf"\s+value="([^"]*?)"'</span>)</span><br><span class="line">    re_maxPage = re.compile(<span class="string">r'href="\?page=(\d+)"'</span>)</span><br><span class="line"></span><br><span class="line">    reportURL = <span class="string">r'https://www.zhihu.com/report'</span></span><br><span class="line">    questionListUrl = <span class="string">r'https://www.zhihu.com/topic/&#123;topicId&#125;/questions?page=&#123;page&#125;'</span></span><br><span class="line">    URL_PREFIX = <span class="string">r'https://www.zhihu.com'</span></span><br><span class="line">    reportResultUrl = <span class="string">r'https://www.zhihu.com/community/report?page=&#123;page&#125;'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        client = ZhiHuClient()</span><br><span class="line">        self.session = client.getSession()</span><br><span class="line">        self.open = client.open</span><br><span class="line">        self.post = self.session.post</span><br><span class="line">        self.topics = Topics().topics</span><br><span class="line">        self.loadCheckedURLs()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">scanning</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""持续扫描"""</span></span><br><span class="line">        print(<span class="string">"开始扫描"</span>)</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            <span class="keyword">for</span> topicId <span class="keyword">in</span> self.topics.keys():</span><br><span class="line">                page = <span class="number">1</span></span><br><span class="line">                flag = <span class="keyword">True</span></span><br><span class="line">                <span class="keyword">while</span> flag:</span><br><span class="line">                    url = self.questionListUrl.format(topicId = topicId, page=page)</span><br><span class="line">                    html = self.open(url).text</span><br><span class="line">                    soup = BS(html, <span class="string">"html.parser"</span>)</span><br><span class="line">                    tags = soup(<span class="string">"a"</span>, class_=<span class="string">"question_link"</span>)</span><br><span class="line">                    questionURLs = [self.URL_PREFIX + x[<span class="string">"href"</span>] <span class="keyword">for</span> x <span class="keyword">in</span> tags]</span><br><span class="line">                    <span class="keyword">for</span> x <span class="keyword">in</span> questionURLs:</span><br><span class="line">                        <span class="keyword">if</span> x <span class="keyword">in</span> self.topicCheckedURLs[topicId]:</span><br><span class="line">                            flag = <span class="keyword">False</span></span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            self.topicCheckedURLs[topicId].add(x)</span><br><span class="line">                            <span class="keyword">if</span> <span class="keyword">not</span> x <span class="keyword">in</span> self.allCheckedURLs:</span><br><span class="line">                                self.reportQuestion(x)</span><br><span class="line">                                self.allCheckedURLs.add(x)</span><br><span class="line">                    page += <span class="number">1</span></span><br><span class="line">            <span class="comment"># 写入文件</span></span><br><span class="line">            self.saveCheckedURLs()</span><br><span class="line">            time.sleep(<span class="number">60</span>) <span class="comment"># 间隔一分钟</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reportQuestion</span><span class="params">(self, questionURL)</span>:</span></span><br><span class="line">        <span class="string">"""检查问题，符合条件则举报"""</span></span><br><span class="line">        html = self.open(questionURL).text</span><br><span class="line">        <span class="keyword">if</span> self.canReport(html):</span><br><span class="line">            postData = self.getPostData(html)</span><br><span class="line">            res = self.post(self.reportURL, data = postData, timeout = <span class="number">15</span>)</span><br><span class="line">            print(<span class="string">"已举报： %s %s"</span> % (BS(html,<span class="string">"html.parser"</span>).find(<span class="string">"title"</span>).getText().replace(<span class="string">r"- 知乎"</span>,<span class="string">""</span>).strip(), str(datetime.datetime.now())[:-<span class="number">7</span>]))</span><br><span class="line">            <span class="keyword">return</span> res.json()[<span class="string">"msg"</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getPostData</span><span class="params">(self, html)</span>:</span></span><br><span class="line">        <span class="string">"""构造举报用的Post请求</span><br><span class="line">        """</span></span><br><span class="line">        questionId = self.re_questionId.findall(html)[<span class="number">0</span>]</span><br><span class="line">        xsrf = self.re_xsrf.findall(html)[<span class="number">0</span>]</span><br><span class="line">        postData = &#123;</span><br><span class="line">            <span class="string">"type"</span>:<span class="string">"question"</span>,</span><br><span class="line">            <span class="string">"id"</span>:questionId,</span><br><span class="line">            <span class="string">"reason"</span>:self.getReason(html),</span><br><span class="line">            <span class="string">"_xsrf"</span>:xsrf</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> postData</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getReason</span><span class="params">(self, html)</span>:</span></span><br><span class="line">        <span class="string">"""从问题描述中判断举报原因</span><br><span class="line"></span><br><span class="line">        暂时一律使用「代为完成的个人任务」，慢慢改进算法</span><br><span class="line">        原因代号：</span><br><span class="line">        10005 问题表意不明</span><br><span class="line">        10006 代为完成的个人任务</span><br><span class="line">        10007 投票、征集类问题</span><br><span class="line">        10008 包含主观个人判断</span><br><span class="line">        10009 包含未经证实的传言</span><br><span class="line">        10010 针对具体病情的求药问药</span><br><span class="line">        """</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"10010"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">canReport</span><span class="params">(self, html)</span>:</span></span><br><span class="line">        <span class="string">"""符合举报条件</span><br><span class="line">        以后慢慢改进算法，目前一律返回True</span><br><span class="line">        """</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">firstScanning</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""脚本首次运行时扫描一次，找出扫描话题下所有已经存在的问题"""</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">r'F:\hexo\知乎清理脚本\Scanned.txt'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            self.allCheckedURLs = set(f.read().strip().split(<span class="string">'\n'</span>))</span><br><span class="line">        <span class="keyword">for</span> topicId <span class="keyword">in</span> self.topics.keys():</span><br><span class="line">            self.topicCheckedURLs[topicId] = set(self.getQuestionUrls(topicId))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 临时</span></span><br><span class="line">            tmp = [url <span class="keyword">for</span> url <span class="keyword">in</span> self.topicCheckedURLs[topicId] <span class="keyword">if</span> <span class="keyword">not</span> url <span class="keyword">in</span> self.allCheckedURLs]</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> tmp:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    self.reportQuestion(x)</span><br><span class="line">                <span class="keyword">except</span> Exception:</span><br><span class="line">                    print(<span class="string">"举报失败："</span>, x)</span><br><span class="line"></span><br><span class="line">        self.saveCheckedURLs()</span><br><span class="line">        print(<span class="string">"第一次扫描完成!"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">saveCheckedURLs</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""保存已扫描URL</span><br><span class="line">        SAE上貌似不能直接保存文件，需要使用数据库，届时再改，先在本机运行几天</span><br><span class="line">        """</span></span><br><span class="line">        <span class="keyword">for</span> topicId, file <span class="keyword">in</span> self.scannedUrlFiles.items():</span><br><span class="line">            <span class="keyword">with</span> open(file, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(<span class="string">"\n"</span>.join(self.topicCheckedURLs[topicId]))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">loadCheckedURLs</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""读取已扫描URL</span><br><span class="line">        不同话题下的问题互相交叉</span><br><span class="line">        """</span></span><br><span class="line">        self.scannedUrlFiles = &#123;topicId:os.path.join(sys.path[<span class="number">0</span>], topicName + <span class="string">"Scanned.txt"</span>) <span class="keyword">for</span> topicId,topicName <span class="keyword">in</span> self.topics.items()&#125;</span><br><span class="line">        self.topicCheckedURLs = dict()</span><br><span class="line">        self.allCheckedURLs = set()</span><br><span class="line">        <span class="keyword">for</span> topicId,file <span class="keyword">in</span> self.scannedUrlFiles.items():</span><br><span class="line">            <span class="keyword">if</span> os.path.isfile(file):</span><br><span class="line">                <span class="keyword">with</span> open(file, <span class="string">'r'</span>, encoding = <span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    self.topicCheckedURLs[topicId] = set(f.read().strip().split(<span class="string">'\n'</span>))</span><br><span class="line">                    self.allCheckedURLs |= self.topicCheckedURLs[topicId]</span><br><span class="line">                    print(<span class="string">"已读取 %s 话题 checkedURLs %s 个"</span> % (self.topics[topicId],len(self.topicCheckedURLs[topicId])))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.topicCheckedURLs[topicId] = set()</span><br><span class="line">        print(<span class="string">"载入完毕，一共有不重复 checkedURLs %s 个"</span> % len(self.allCheckedURLs))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getQuestionUrls</span><span class="params">(self, topicId)</span>:</span></span><br><span class="line">        <span class="string">"""返回指定话题下所有的问题URL列表</span><br><span class="line">        为免爬得太快被封，使用单线程</span><br><span class="line">        """</span></span><br><span class="line">        urls = []</span><br><span class="line">        <span class="comment"># 获取最大页数</span></span><br><span class="line">        url = self.questionListUrl.format(topicId = topicId, page = <span class="number">1</span>)</span><br><span class="line">        maxPage = self.getMaxPageNum(url)</span><br><span class="line">        pageURLs = (self.questionListUrl.format(topicId = topicId, page = x) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, maxPage+<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> pageURLs:</span><br><span class="line">            print(<span class="string">"正在扫描 %s 话题下的网址： %s"</span> %(self.topics[topicId], url))</span><br><span class="line">            time.sleep(<span class="number">0.3</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                html = self.open(url).text</span><br><span class="line">            <span class="keyword">except</span> Exception:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            soup = BS(html, <span class="string">"html.parser"</span>)</span><br><span class="line">            tags = soup(<span class="string">"a"</span>, class_=<span class="string">"question_link"</span>)</span><br><span class="line">            questionURLs = [self.URL_PREFIX + x[<span class="string">"href"</span>] <span class="keyword">for</span> x <span class="keyword">in</span> tags]</span><br><span class="line">            urls.extend(questionURLs)</span><br><span class="line">        <span class="keyword">return</span> urls</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getMaxPageNum</span><span class="params">(self, url)</span>:</span></span><br><span class="line">        <span class="string">"""提取网页上的最大页码数"""</span></span><br><span class="line">        pageNums = [int(x) <span class="keyword">for</span> x <span class="keyword">in</span> self.re_maxPage.findall(self.open(url).text)]</span><br><span class="line">        <span class="keyword">return</span> max(pageNums)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getAllReportResult</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""读取所有举报处理结果"""</span></span><br><span class="line">        url = self.reportResultUrl.format(page = <span class="number">1</span>)</span><br><span class="line">        maxPage = self.getMaxPageNum(url)</span><br><span class="line">        pageURLs = (self.reportResultUrl.format(page = x) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,maxPage+<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># client = ZhiHuClient()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 第一次使用时需要调用此方法登录一次，生成cookie文件</span></span><br><span class="line">    <span class="comment"># 以后可以跳过这一步</span></span><br><span class="line">    <span class="comment"># client.login("username", "password")</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    s = Scanner()</span><br><span class="line">    <span class="comment"># # 首次运行脚本时初始化，将已有话题的网址存到文件中。</span></span><br><span class="line">    <span class="comment"># s.firstScanning()</span></span><br><span class="line">    s = s.scanning()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 增加新话题</span></span><br><span class="line">    <span class="comment"># t = Topics()</span></span><br><span class="line">    <span class="comment"># topics = t.topics</span></span><br><span class="line">    <span class="comment"># topics[19633456] = "算卦"</span></span><br><span class="line">    <span class="comment"># t.save2File()</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android笔记之Notification]]></title>
      <url>http://lovenight.github.io/2015/12/10/Android%E7%AC%94%E8%AE%B0%E4%B9%8BNotification/</url>
      <content type="html"><![CDATA[<p>Android API中的通知（Notification）随着版本升级改了好几次。手头的《第一行代码》虽然号称「基于Android 4.X」，但里面的Notification却使用了API Level 11（Android 2.3.3）就已经deprecated的<code>setLatestEventInfo()</code>方法。在网上搜索一番，整理如下：</p>
<a id="more"></a>
<hr>
<h1 id="API_简介">API 简介</h1><p>API docs</p>
<ul>
<li><a href="http://developer.android.com/intl/zh-cn/reference/android/app/Notification.html" target="_blank" rel="external">Notification</a></li>
<li><a href="http://developer.android.com/intl/zh-cn/reference/android/app/Notification.Builder.html" target="_blank" rel="external">Notification.Builder</a></li>
</ul>
<pre><code><span class="comment">// 常用字段</span>
contentIntent  设置PendingIntent对象，点击时发送该Intent
defaults       添加默认效果
flags          设置flag位，例如FLAG_NO_CLEAR等
icon           设置图标
sound          设置声音
tickerText     显示在状态栏中的文字
when           发送此通知的时间戳

<span class="comment">// 效果常量</span>
DEFAULT_ALL      使用所有默认值，比如声音，震动，闪屏等等
DEFAULT_LIGHTS   使用默认闪光提示
DEFAULT_SOUNDS   使用默认提示声音
DEFAULT_VIBRATE  使用默认手机震动

<span class="comment">// 以上的效果常量可以叠加：</span>
notification.defaults = DEFAULT_SOUND|DEFAULT_VIBRATE;
notification.defaults |= DEFAULT_LIGHTS;

<span class="comment">// 最好在真机上测试，震动效果模拟器上没有。</span>
<span class="comment">// 加入手机震动，一定要在AndroidManifest.xml中加入权限：</span>
&lt;uses-permission android:name=<span class="string">"android.permission.VIBRATE"</span> /&gt;

<span class="comment">// Flag</span>
FLAG_AUTO_CANCEL   该通知能被状态栏的清除按钮给清除掉
FLAG_NO_CLEAR      该通知能被状态栏的清除按钮给清除掉
FLAG_ONGOING_EVENT 通知放置在正在运行
FLAG_INSISTENT     是否一直进行，比如音乐一直播放，知道用户响应

<span class="comment">// NotificationManager的常用方法</span>
<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancelAll</span><span class="params">()</span>     <span class="comment">// 移除所有通知(只是针对当前Context下的Notification)</span>
<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancel</span><span class="params">(<span class="keyword">int</span> id)</span> <span class="comment">// 移除标记为id的通知 (只是针对当前Context下的所有Notification)</span>
<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notify</span><span class="params">(String tag ,<span class="keyword">int</span> id, Notification notification)</span> <span class="comment">// 将通知加入状态栏，标签为tag，标记为id</span>
<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notify</span><span class="params">(<span class="keyword">int</span> id, Notification notification)</span>  <span class="comment">// 将通知加入状态栏，标记为id</span>

<span class="comment">// Notification的常用方法</span>
<span class="comment">// 通知提示音</span>
Uri soundUri </span>= Uri.fromFile(<span class="keyword">new</span> File(<span class="string">"/system/media/audio/ringtones/Basic_tone.ogg"</span>));
notification.sound = soundUri;
<span class="comment">// 通知震动，第0、2、4..表示静止时间，1、3、5...表示震动时间</span>
<span class="keyword">long</span>[] vibrates = {<span class="number">0</span>, <span class="number">1000</span>, <span class="number">1000</span>, <span class="number">1000</span>};
notification.vibrate = vibrates;
<span class="comment">// LED灯</span>
notification.ledARGB = Color.GREEN;
notification.ledOnMS = <span class="number">1000</span>;
notification.ledOffMS = <span class="number">1000</span>;
notification.flags = Notification.FLAG_SHOW_LIGHTS;
</code></pre><hr>
<h1 id="各版本用法">各版本用法</h1><h2 id="API_Level_&lt;_11_（Android_2-3-3）">API Level &lt; 11 （Android 2.3.3）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">NotificationManager notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>,MainActivity.class);</span><br><span class="line">PendingIntent contentIndent = PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">0</span>, intent, PendingIntent.FLAG_UPDATE_CURRENT);</span><br><span class="line">Notification notification = <span class="keyword">new</span> Notification(R.drawable.ic_launcher,<span class="string">""</span>,System.currentTimeMillis() );</span><br><span class="line">notification.setLatestEventInfo(MainActivity.<span class="keyword">this</span>, <span class="string">"您的BMI值过高"</span>, <span class="string">"通知监督人"</span>, contentIndent);</span><br><span class="line"><span class="comment">//加i是为了显示多条Notification</span></span><br><span class="line">notificationManager.notify(i,notification);</span><br></pre></td></tr></table></figure>
<h2 id="API_11_&lt;=_Level_&lt;_16)_（Android_4-1-2）">API 11 &lt;= Level &lt; 16) （Android 4.1.2）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">NotificationManager notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,MainActivity.class);</span><br><span class="line">PendingIntent contentIndent = PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">0</span>, intent, PendingIntent.FLAG_UPDATE_CURRENT);</span><br><span class="line">Notification.Builder builder = <span class="keyword">new</span> Notification.Builder(context)</span><br><span class="line">            .setAutoCancel(<span class="keyword">true</span>)</span><br><span class="line">            .setContentTitle(<span class="string">"title"</span>)</span><br><span class="line">            .setContentText(<span class="string">"describe"</span>)</span><br><span class="line">            .setContentIntent(contentIndent)</span><br><span class="line">            .setSmallIcon(R.drawable.ic_launcher)</span><br><span class="line">            .setWhen(System.currentTimeMillis())</span><br><span class="line">            .setOngoing(<span class="keyword">true</span>);</span><br><span class="line">notification=builder.getNotification();</span><br><span class="line"><span class="comment">//加i是为了显示多条Notification</span></span><br><span class="line">notificationManager.notify(i,notification);</span><br></pre></td></tr></table></figure>
<h2 id="API_Level_&gt;=_16_（Android_4-1-2）">API Level &gt;= 16 （Android 4.1.2）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//api 16</span></span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>,MainActivity.class);</span><br><span class="line">PendingIntent p = PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">0</span>, intent, <span class="number">0</span>);</span><br><span class="line">notification = <span class="keyword">new</span> Notification.Builder(<span class="keyword">this</span>)</span><br><span class="line">        <span class="comment">// .addAction(icon, "拉下后的标题", p) //在这条通知下面添加一个icon图标button，点击触发p事件，例如 phone的挂断</span></span><br><span class="line">        .setContentTitle(<span class="string">"拉下后的标题"</span>)</span><br><span class="line">        .setContentText(<span class="string">"第一行内容"</span>)</span><br><span class="line">        <span class="comment">// .setContent(RemoteViews)//自定义的remoteviews</span></span><br><span class="line">        <span class="comment">// .setFullScreenIntent(p, true)//不会再通知栏直接显示，但拉下后可以显示内容</span></span><br><span class="line">        <span class="comment">// .setDeleteIntent(null)// 通知消失时的动作</span></span><br><span class="line">        <span class="comment">// .setContentIntent(p)//点击的动作 相当于点击button</span></span><br><span class="line">        <span class="comment">// .setLights(Color.GREEN, 1000, 1000)// LED 灯</span></span><br><span class="line">        <span class="comment">// .setNumber(22)//</span></span><br><span class="line">        <span class="comment">// .setOngoing(true)//不能被用户x掉，会一直显示，如音乐播放等</span></span><br><span class="line">        <span class="comment">// .setPriority(2)//优先级</span></span><br><span class="line">        <span class="comment">// .setProgress(max, progress, indeterminate)//进度条</span></span><br><span class="line">        <span class="comment">// .setSound(uri)//声音提示</span></span><br><span class="line">        <span class="comment">// .setSound(sound, streamType)//科设置 streamtype</span></span><br><span class="line">        <span class="comment">// .setStyle(style)//style设置 http://developer.android.com/reference/android/app/Notification.Style.html</span></span><br><span class="line">        <span class="comment">// .setVibrate(long[])//设置震动</span></span><br><span class="line">        .setOnlyAlertOnce(<span class="keyword">true</span>)<span class="comment">//一次而已</span></span><br><span class="line">        .setSmallIcon(R.drawable.page)<span class="comment">//落下前显示的图标</span></span><br><span class="line">        .setSubText(<span class="string">"第二行内容"</span>+<span class="string">"\n"</span>+<span class="string">"!!!!!!!!!!"</span>)</span><br><span class="line">        .setContentInfo(<span class="string">"额外的内容"</span>)<span class="comment">//添加到了右下角</span></span><br><span class="line">        <span class="comment">// .setShowWhen(true)//是否允许setwhen</span></span><br><span class="line">        .setWhen(System.currentTimeMillis()+<span class="number">300</span>)<span class="comment">//何时通知 这里延迟了300ms，前提设置了setshowwher</span></span><br><span class="line">        .setTicker(<span class="string">"直接在标题栏显示的通知"</span>, <span class="keyword">null</span>)</span><br><span class="line">        .setLargeIcon(</span><br><span class="line">                BitmapFactory.decodeResource(getResources(),</span><br><span class="line">                        R.drawable.ic_launcher))<span class="comment">//落下后显示的图标</span></span><br><span class="line">        .build();<span class="comment">//生成实例 api 16后不再使用getNotification（）</span></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line">mNotificationManager.notify(R.drawable.ic_launcher, notification);</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="DEMO">DEMO</h1><p>Activity不可见时在状态栏显示通知<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">    <span class="comment">/** Called when the activity is first created. */</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.main);</span><br><span class="line">        clearNotification();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        showNotification();</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        clearNotification();</span><br><span class="line">        <span class="keyword">super</span>.onStart();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 在状态栏显示通知</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showNotification</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 创建一个NotificationManager的引用</span></span><br><span class="line">        NotificationManager notificationManager = (NotificationManager)</span><br><span class="line">            <span class="keyword">this</span>.getSystemService(android.content.Context.NOTIFICATION_SERVICE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义Notification的各种属性</span></span><br><span class="line">        Notification notification =<span class="keyword">new</span> Notification(R.drawable.icon,</span><br><span class="line">                <span class="string">"督导系统"</span>, System.currentTimeMillis());</span><br><span class="line">        <span class="comment">//FLAG_AUTO_CANCEL   该通知能被状态栏的清除按钮给清除掉</span></span><br><span class="line">        <span class="comment">//FLAG_NO_CLEAR      该通知不能被状态栏的清除按钮给清除掉</span></span><br><span class="line">        <span class="comment">//FLAG_ONGOING_EVENT 通知放置在正在运行</span></span><br><span class="line">        <span class="comment">//FLAG_INSISTENT     是否一直进行，比如音乐一直播放，知道用户响应</span></span><br><span class="line">        notification.flags |= Notification.FLAG_ONGOING_EVENT; <span class="comment">// 将此通知放到通知栏的"Ongoing"即"正在运行"组中</span></span><br><span class="line">        notification.flags |= Notification.FLAG_NO_CLEAR; <span class="comment">// 表明在点击了通知栏中的"清除通知"后，此通知不清除，经常与FLAG_ONGOING_EVENT一起使用</span></span><br><span class="line">        notification.flags |= Notification.FLAG_SHOW_LIGHTS;</span><br><span class="line">        <span class="comment">//DEFAULT_ALL     使用所有默认值，比如声音，震动，闪屏等等</span></span><br><span class="line">        <span class="comment">//DEFAULT_LIGHTS  使用默认闪光提示</span></span><br><span class="line">        <span class="comment">//DEFAULT_SOUNDS  使用默认提示声音</span></span><br><span class="line">        <span class="comment">//DEFAULT_VIBRATE 使用默认手机震动，需加上&lt;uses-permission android:name="android.permission.VIBRATE" /&gt;权限</span></span><br><span class="line">        notification.defaults = Notification.DEFAULT_LIGHTS;</span><br><span class="line">        <span class="comment">//叠加效果常量</span></span><br><span class="line">        <span class="comment">//notification.defaults=Notification.DEFAULT_LIGHTS|Notification.DEFAULT_SOUND;</span></span><br><span class="line">        notification.ledARGB = Color.BLUE;</span><br><span class="line">        notification.ledOnMS =<span class="number">5000</span>; <span class="comment">//闪光时间，毫秒</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置通知的事件消息</span></span><br><span class="line">        CharSequence contentTitle =<span class="string">"督导系统标题"</span>; <span class="comment">// 通知栏标题</span></span><br><span class="line">        CharSequence contentText =<span class="string">"督导系统内容"</span>; <span class="comment">// 通知栏内容</span></span><br><span class="line">        Intent notificationIntent =<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, MainActivity.class); <span class="comment">// 点击该通知后要跳转的Activity</span></span><br><span class="line">        PendingIntent contentItent = PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">0</span>, notificationIntent, <span class="number">0</span>);</span><br><span class="line">        notification.setLatestEventInfo(<span class="keyword">this</span>, contentTitle, contentText, contentItent);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把Notification传递给NotificationManager</span></span><br><span class="line">        notificationManager.notify(<span class="number">0</span>, notification);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除通知</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">clearNotification</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 启动后删除之前我们定义的通知</span></span><br><span class="line">        NotificationManager notificationManager = (NotificationManager) <span class="keyword">this</span></span><br><span class="line">                .getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line">        notificationManager.cancel(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<h1 id="参考资料">参考资料</h1><ul>
<li><a href="http://blog.csdn.net/wwzqj/article/details/44098587" target="_blank" rel="external">Android Notification的setLatestEventInfo()@deprecate</a></li>
<li><a href="http://blog.csdn.net/maclay/article/details/8985966" target="_blank" rel="external">简单记录，Notification.builder的简单实用</a></li>
<li><a href="http://www.oschina.net/code/snippet_270292_14489" target="_blank" rel="external">Android Notification通知详解</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[自己写的实用VBA代码合集]]></title>
      <url>http://lovenight.github.io/2015/12/10/%E8%87%AA%E5%B7%B1%E5%86%99%E7%9A%84%E5%AE%9E%E7%94%A8VBA%E4%BB%A3%E7%A0%81%E5%90%88%E9%9B%86/</url>
      <content type="html"><![CDATA[<p>以前工作需要研究过一段时间的VBA，写了一些宏，大大简化了Word和Excel的操作。现整理记录如下，以备不时之需。</p>
<p>Visual Basic for Applications（VBA）是微软开发出来在其桌面应用程序中执行通用的自动化(OLE)任务的编程语言。主要能用来扩展Windows的应用程式功能，特别是Microsoft Office软件，如Word、Excel、Access、Powerpoint。在以上程序中按下Alt+F11即可打开VBA专用的IDE，无需额外安装。</p>
<p>如果不明白一个操作如何用代码实现，可以使用录制宏的功能，手动操作一次，查看宏代码并精简——录制得到的代码包括了大量可以删除的默认设置。</p>
<p>IDE中将光标定位到某个函数，按下F1可看到该函数的全中文帮助，非常方便。</p>
<a id="more"></a>
<h1 id="遍历所有已打开的word文档">遍历所有已打开的word文档</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">For</span> <span class="keyword">Each</span> docOpened <span class="keyword">In</span> Documents</span><br><span class="line">   ……</span><br><span class="line"><span class="keyword">Next</span> docOpened</span><br></pre></td></tr></table></figure>
<h1 id="Word_将目录下所有文档转换为txt，并删除原文档">Word 将目录下所有文档转换为txt，并删除原文档</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 目录下doc转txt()</span><br><span class="line"><span class="comment">'目录下所有word文档转为txt，并删除word文档</span></span><br><span class="line"><span class="comment">'保存在原目录</span></span><br><span class="line">    <span class="comment">'遍历所有文件夹，把带路径的文件名存入字典</span></span><br><span class="line">    <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line">    <span class="keyword">Dim</span> Path <span class="keyword">As</span> <span class="built_in">String</span>, t <span class="comment">'Path为路径,t用于计算程序执行花费的时间</span></span><br><span class="line">    <span class="keyword">Set</span> objshell = CreateObject(<span class="string">"Shell.Application"</span>)</span><br><span class="line">    <span class="keyword">Set</span> objfolder = objshell.BrowseForFolder(<span class="number">0</span>, <span class="string">"选择文件夹"</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">If</span> <span class="keyword">Not</span> objfolder <span class="keyword">Is</span> <span class="literal">Nothing</span> <span class="keyword">Then</span> Path = objfolder.self.Path &amp; <span class="string">"\"</span></span><br><span class="line">    <span class="keyword">Set</span> objfolder = <span class="literal">Nothing</span></span><br><span class="line">    <span class="keyword">Set</span> objshell = <span class="literal">Nothing</span></span><br><span class="line">    <span class="comment">'创建字典用于存储路径和文件名</span></span><br><span class="line">    <span class="keyword">Dim</span> DicPath, DicFile, i <span class="keyword">As</span> <span class="built_in">Integer</span>, Ke, ContentName <span class="keyword">As</span> <span class="built_in">String</span>, FileName <span class="keyword">As</span> <span class="built_in">String</span>, MsgTxt</span><br><span class="line">    <span class="keyword">Set</span> DicPath = CreateObject(<span class="string">"Scripting.Dictionary"</span>)</span><br><span class="line">    <span class="keyword">Set</span> DicFile = CreateObject(<span class="string">"Scripting.Dictionary"</span>)</span><br><span class="line">    DicPath.Add Path, <span class="string">""</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="comment">'存所有路径</span></span><br><span class="line">    <span class="keyword">Do</span> <span class="keyword">While</span> i &lt; DicPath.count</span><br><span class="line">        Ke = DicPath.keys</span><br><span class="line">        ContentName = Dir(Ke(i), vbDirectory)</span><br><span class="line">        <span class="keyword">Do</span> <span class="keyword">While</span> ContentName &lt;&gt; <span class="string">""</span></span><br><span class="line">            <span class="comment">'若有子文件夹，则添加</span></span><br><span class="line">            <span class="comment">'跳过当前的目录及上层目录</span></span><br><span class="line">            <span class="keyword">If</span> ContentName &lt;&gt; <span class="string">"."</span> <span class="keyword">And</span> ContentName &lt;&gt; <span class="string">".."</span> <span class="keyword">Then</span></span><br><span class="line">                <span class="keyword">If</span> GetAttr(Ke(i) &amp; ContentName) = vbDirectory <span class="keyword">Then</span></span><br><span class="line">                    DicPath.Add (Ke(i) &amp; ContentName &amp; <span class="string">"\"</span>), <span class="string">""</span></span><br><span class="line">                <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">                ContentName = Dir</span><br><span class="line">        <span class="keyword">Loop</span></span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">    <span class="keyword">Loop</span></span><br><span class="line">    <span class="comment">'存所有doc文件名</span></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> Ke <span class="keyword">In</span> DicPath.keys</span><br><span class="line">        FileName = Dir(Ke &amp; <span class="string">"*.doc"</span>)</span><br><span class="line">        <span class="keyword">Do</span> <span class="keyword">While</span> FileName &lt;&gt; <span class="string">""</span></span><br><span class="line">            DicFile.Add (Ke &amp; FileName), <span class="string">""</span></span><br><span class="line">            FileName = Dir</span><br><span class="line">        <span class="keyword">Loop</span></span><br><span class="line">    <span class="keyword">Next</span> Ke</span><br><span class="line">    <span class="comment">'打开文件</span></span><br><span class="line">    Application.DisplayAlerts = wdAlertsNone</span><br><span class="line">    <span class="keyword">Dim</span> myDoc</span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> Ke <span class="keyword">In</span> DicFile.keys</span><br><span class="line">        <span class="keyword">Set</span> myDoc = Documents.Open(Ke)</span><br><span class="line">        <span class="comment">'原路径另存为TXT</span></span><br><span class="line">        ActiveDocument.SaveAs2 FileName:=myDoc.Path &amp; <span class="string">"\"</span> &amp; Left(myDoc.Name, InStrRev(myDoc.Name, <span class="string">"."</span>) - <span class="number">1</span>) &amp; <span class="string">".txt"</span>, FileFormat:=wdFormatText</span><br><span class="line">        <span class="comment">'处理完成后关闭并删除原word文档</span></span><br><span class="line">        ActiveDocument.Close</span><br><span class="line">        Kill Ke</span><br><span class="line">    <span class="keyword">Next</span> Ke</span><br><span class="line">    MsgBox <span class="string">"Done！"</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<h1 id="获取网页源代码">获取网页源代码</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> httpRequest <span class="keyword">As</span> <span class="built_in">Object</span></span><br><span class="line">    <span class="keyword">Set</span> httpRequest = CreateObject(<span class="string">"MSXML2.XMLHTTP.3.0"</span>)</span><br><span class="line">    httpRequest.Open <span class="string">"GET"</span>, <span class="string">"http://develop.100ppi.com/tmp/autoproduct/ccq2/ci/cha_num.php?pid="</span> &amp; ItemID &amp; <span class="string">"&amp;sdate="</span> &amp; sDate &amp; <span class="string">"&amp;edate="</span> &amp; eDate, <span class="literal">False</span></span><br><span class="line">    httpRequest.Send</span><br><span class="line">    txtTemp = httpRequest.responseText</span><br><span class="line">    或txtTemp = StrConv(httpRequest.responsebody, vbUnicode)</span><br></pre></td></tr></table></figure>
<h1 id="汉字编码成URL用的字符串">汉字编码成URL用的字符串</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> Escape(<span class="keyword">ByVal</span> strText <span class="keyword">As</span> <span class="built_in">String</span>) <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    <span class="keyword">Set</span> JS = CreateObject(<span class="string">"msscriptcontrol.scriptcontrol"</span>)</span><br><span class="line">    JS.Language = <span class="string">"JavaScript"</span></span><br><span class="line">    Escape = JS.eval_r(<span class="string">"encodeURI('"</span> &amp; Replace(strText, <span class="string">"'"</span>, <span class="string">"\'"</span>) &amp; <span class="string">"');"</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<h1 id="Excel合并相同文件名的单元格，不同文件名的行填充不同的背景色">Excel合并相同文件名的单元格，不同文件名的行填充不同的背景色</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Integer</span>, j <span class="keyword">As</span> <span class="built_in">Integer</span>, k <span class="keyword">As</span> <span class="built_in">Integer</span> <span class="comment">'i用于遍历，j用于计数须合并的行数,k用于填充颜色</span></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line">k = <span class="number">0</span></span><br><span class="line"><span class="keyword">With</span> wbTmp</span><br><span class="line">    <span class="keyword">Do</span> <span class="keyword">While</span> .Cells(i + <span class="number">1</span>, <span class="number">1</span>) &lt;&gt; <span class="string">""</span></span><br><span class="line">        j = <span class="number">1</span></span><br><span class="line">        <span class="keyword">Do</span> <span class="keyword">While</span> .Cells(i, <span class="number">1</span>) = .Cells(i + j, <span class="number">1</span>)</span><br><span class="line">           j = j + <span class="number">1</span></span><br><span class="line">        <span class="keyword">Loop</span></span><br><span class="line">        <span class="keyword">If</span> j &gt; <span class="number">1</span> <span class="keyword">Then</span></span><br><span class="line">            .Range(.Cells(i, <span class="number">1</span>), .Cells(i + j - <span class="number">1</span>, <span class="number">1</span>)).Merge</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">If</span> (k <span class="keyword">Mod</span> <span class="number">2</span> = <span class="number">1</span>) <span class="keyword">Then</span></span><br><span class="line">            .Cells(i, <span class="number">1</span>).Resize(j, <span class="number">5</span>).Interior.Color = <span class="number">5296274</span></span><br><span class="line">        <span class="keyword">Else</span>: .Cells(i, <span class="number">1</span>).Resize(j, <span class="number">5</span>).Interior.Color = <span class="number">49407</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        k = k + <span class="number">1</span></span><br><span class="line">        i = i + j</span><br><span class="line">    <span class="keyword">Loop</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br></pre></td></tr></table></figure>
<h1 id="若同目录下不存在某文件夹，则创建">若同目录下不存在某文件夹，则创建</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> sr</span><br><span class="line">sr = Dir(ThisWorkbook.Path &amp; <span class="string">"\上海办待导入txt"</span>, vbDirectory)</span><br><span class="line"><span class="keyword">If</span> sr = <span class="string">""</span> <span class="keyword">Then</span></span><br><span class="line">    MkDir ThisWorkbook.Path &amp; <span class="string">"\上海办待导入txt"</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br></pre></td></tr></table></figure>
<h1 id="提取word文档里的图片">提取word文档里的图片</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 存成html()</span><br><span class="line">Application.ScreenUpdating = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> FileName <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    FileName = InputBox(<span class="string">"请输入文件名"</span>)</span><br><span class="line">    Selection.Copy</span><br><span class="line">    Documents.Add DocumentType:=wdNewBlankDocument</span><br><span class="line">    Selection.PasteAndFormat (wdPasteDefault)</span><br><span class="line">    <span class="comment">'若无目录则创建</span></span><br><span class="line">    <span class="keyword">If</span> Dir(<span class="string">"D:\backup\140591\桌面\报告temp\"</span>, vbDirectory) = <span class="string">""</span> <span class="keyword">Then</span> MkDir <span class="string">"D:\backup\140591\桌面\报告temp\"</span></span><br><span class="line">    ActiveDocument.SaveAs FileName:=<span class="string">"D:\backup\140591\桌面\报告temp\"</span> &amp; FileName, FileFormat:=wdFormatHTML, _</span><br><span class="line">        LockComments:=<span class="literal">False</span>, Password:=<span class="string">""</span>, AddToRecentFiles:=<span class="literal">True</span>, WritePassword _</span><br><span class="line">        :=<span class="string">""</span>, ReadOnlyRecommended:=<span class="literal">False</span>, EmbedTrueTypeFonts:=<span class="literal">False</span>, _</span><br><span class="line">        SaveNativePictureFormat:=<span class="literal">False</span>, SaveFormsData:=<span class="literal">False</span>, SaveAsAOCELetter:= _</span><br><span class="line">        <span class="literal">False</span></span><br><span class="line">    ActiveWindow.View.Type = wdWebView</span><br><span class="line"></span><br><span class="line">    ActiveDocument.Close <span class="literal">False</span></span><br><span class="line">Application.ScreenUpdating = <span class="literal">True</span></span><br><span class="line">MsgBox <span class="string">"已完成！"</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<h1 id="Excel双击则复制单元格内容到剪切板">Excel双击则复制单元格内容到剪切板</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Worksheet_BeforeDoubleClick(<span class="keyword">ByVal</span> Target <span class="keyword">As</span> Range, Cancel <span class="keyword">As</span> <span class="built_in">Boolean</span>)</span><br><span class="line">    <span class="keyword">With</span> CreateObject(<span class="string">"new:&#123;1C3B4210-F441-11CE-B9EA-00AA006B1A69&#125;"</span>)</span><br><span class="line">        .SetText Target</span><br><span class="line">        .PutInClipboard</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<h1 id="用对话框打开Excel文件">用对话框打开Excel文件</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iFileName = Application.GetOpenFilename(<span class="string">"Excel文件 (*.xlsx;*.xls), *.xlsx;*.xls"</span>)</span><br></pre></td></tr></table></figure>
<h1 id="Excel按指定列升序排列">Excel按指定列升序排列</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">With</span> wbf.Sort</span><br><span class="line">    .SortFields.Clear</span><br><span class="line">    .SortFields.Add <span class="keyword">Key</span>:=Range(<span class="string">"B1"</span>), SortOn:=xlSortOnValues, <span class="keyword">Order</span>:=xlAscending <span class="comment">'descending，递减。Ascending，递增</span></span><br><span class="line">    .SetRange Range(<span class="string">"A1"</span>).CurrentRegion <span class="comment">'排序区域</span></span><br><span class="line">    .Header = xlGuess <span class="comment">'第一行包含标题</span></span><br><span class="line">    .MatchCase = <span class="literal">False</span> <span class="comment">'不区分大小写</span></span><br><span class="line">    .Orientation = xlTopToBottom</span><br><span class="line">    .SortMethod = xlPinYin</span><br><span class="line">    .Apply</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br></pre></td></tr></table></figure>
<h1 id="Excel汇总同目录文件">Excel汇总同目录文件</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Sub HzWb()</span><br><span class="line">    Dim bt As Range, r As Long, c As Long</span><br><span class="line">    r = 1    '1 是表头的行数</span><br><span class="line">    c = 8    '8 是表头的列数</span><br><span class="line">    Range(Cells(r + 1, "A"), Cells(65536, c)).ClearContents    ' 清除汇总表中原表数据</span><br><span class="line">    Application.ScreenUpdating = False</span><br><span class="line">    Dim FileName As String, wb As Workbook, Erow As Long, fn As String, arr As Variant</span><br><span class="line">    FileName = Dir(ThisWorkbook.Path &amp; "\*.xls") '返回一个Excel文件，可匹配到.xlsx</span><br><span class="line">    Do While FileName &lt;&gt; ""</span><br><span class="line">        If FileName &lt;&gt; ThisWorkbook.Name Then    ' 判断文件是否是本工作簿</span><br><span class="line">            Erow = Range("A1").CurrentRegion.Rows.Count + 1    ' 取得汇总表中第一条空行行号</span><br><span class="line">            fn = ThisWorkbook.Path &amp; "\" &amp; FileName</span><br><span class="line">            Set wb = GetObject(fn)    ' 将fn 代表的工作簿对象赋给变量</span><br><span class="line">            Set sht = wb.Worksheets(1)    ' 汇总的是第1 张工作表</span><br><span class="line">            ' 将数据表中的记录保存在arr 数组里</span><br><span class="line">            arr = sht.Range(sht.Cells(r + 1, "A"), sht.Cells(65536, "B").End(xlUp).Offset(0, 8))</span><br><span class="line">            ' 将数组arr 中的数据写入工作表</span><br><span class="line">            Cells(Erow, "A").Resize(UBound(arr, 1), UBound(arr, 2)) = arr</span><br><span class="line">            wb.Close False</span><br><span class="line">        End If</span><br><span class="line">        FileName = Dir    ' 用Dir 函数取得其他文件名，并赋给变量</span><br><span class="line">    Loop</span><br><span class="line">    Application.ScreenUpdating = True</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure>
<h1 id="Excel_将指定数据另存为txt文件">Excel 将指定数据另存为txt文件</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">'新建一张表用于存放待保存的数据</span></span><br><span class="line"><span class="keyword">Set</span> wbTmp = ThisWorkbook.Worksheets.Add(after:=wb)</span><br><span class="line"></span><br><span class="line"><span class="comment">'复制待保存的数据</span></span><br><span class="line">wb.Cells(<span class="number">2</span> + iJx, <span class="string">"C"</span>).Resize(iSc, <span class="number">1</span>).Copy wbTmp.Cells(<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">wb.Cells(<span class="number">2</span> + iJx, <span class="string">"R"</span>).Resize(iSc, <span class="number">1</span>).Copy wbTmp.Cells(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">'将新表复制出来成为一个单独的文件并另存为txt</span></span><br><span class="line">wbTmp.Copy</span><br><span class="line">ActiveWorkbook.SaveAs FileName:=ThisWorkbook.Path &amp; <span class="string">"\自定义文件名.txt"</span>, FileFormat:=xlText, CreateBackup:=<span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">'关闭上一步出现的新Workbook</span></span><br><span class="line">ActiveWorkbook.Close <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">'删除原文件中的临时表</span></span><br><span class="line">wbTmp.Delete</span><br></pre></td></tr></table></figure>
<h1 id="Word替换昨日今日去年之类的字眼">Word替换昨日今日去年之类的字眼</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 替换昨今去()</span><br><span class="line"><span class="keyword">Dim</span> Yesterday_Day <span class="keyword">As</span> <span class="built_in">Integer</span>, Yesterday <span class="keyword">As</span> <span class="built_in">String</span>, Yesterday_Month <span class="keyword">As</span> <span class="built_in">Integer</span>, Yesterday_Year <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line"><span class="keyword">Dim</span> Today_Day <span class="keyword">As</span> <span class="built_in">Integer</span>, Today_Month <span class="keyword">As</span> <span class="built_in">Integer</span>, Today_Year <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">Yesterday = DateAdd(<span class="string">"d"</span>, -<span class="number">1</span>, <span class="built_in">Date</span>)</span><br><span class="line">Yesterday_Day = Day(Yesterday)</span><br><span class="line">Yesterday_Month = Month(Yesterday)</span><br><span class="line">Yesterday_Year = Year(Yesterday)</span><br><span class="line">Today_Day = Day(<span class="built_in">Date</span>)</span><br><span class="line">Today_Month = Month(<span class="built_in">Date</span>)</span><br><span class="line">Today_Year = Year(<span class="built_in">Date</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">'选择性粘贴</span></span><br><span class="line">    Selection.PasteAndFormat (wdPasteDefault)</span><br><span class="line"></span><br><span class="line">    Selection.Find.ClearFormatting</span><br><span class="line">    Selection.Find.Replacement.ClearFormatting</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">'取消所有超链接</span></span><br><span class="line">    <span class="keyword">Dim</span> cc <span class="keyword">As</span> Field</span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> cc <span class="keyword">In</span> ActiveDocument.Fields</span><br><span class="line">    <span class="keyword">If</span> cc.Type = wdFieldHyperlink <span class="keyword">Then</span></span><br><span class="line">    cc.Unlink</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    <span class="keyword">Set</span> cc = <span class="literal">Nothing</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">'替换昨天、昨日</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"昨[天日]&#123;1&#125;"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = Yesterday_Month &amp; <span class="string">"月"</span> &amp; Yesterday_Day &amp; <span class="string">"日"</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">False</span></span><br><span class="line">        .MatchWildcards = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'替换今天、今日</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"今[天日]&#123;1&#125;"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = Today_Month &amp; <span class="string">"月"</span> &amp; Today_Day &amp; <span class="string">"日"</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">False</span></span><br><span class="line">        .MatchWildcards = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'替换今年</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"今年"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = Today_Year &amp; <span class="string">"年"</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">False</span></span><br><span class="line">        .MatchWildcards = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'替换去年</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"去年"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = Today_Year - <span class="number">1</span> &amp; <span class="string">"年"</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">False</span></span><br><span class="line">        .MatchWildcards = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'删象屿期货的段前符号</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = ChrW(<span class="number">61548</span>)</span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">True</span></span><br><span class="line">        .MatchWildcards = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'手动换行符替换成回车符</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"^l"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = <span class="string">"^p"</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">True</span></span><br><span class="line">        .MatchWildcards = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'段与段顶多只隔一行，将任意个回车符号替换成二个</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"(^13)@"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = <span class="string">"^p^p"</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">False</span></span><br><span class="line">        .MatchWildcards = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'全选+剪切</span></span><br><span class="line">    Selection.WholeStory</span><br><span class="line">    Selection.Cut</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<h1 id="Word_删除新闻中的多余代码和文字">Word 删除新闻中的多余代码和文字</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 新闻排版()</span><br><span class="line"><span class="comment">'</span></span><br><span class="line"><span class="comment">'</span></span><br><span class="line">    <span class="comment">'选择性粘贴</span></span><br><span class="line">    Selection.PasteAndFormat (wdPasteDefault)</span><br><span class="line"></span><br><span class="line">    Selection.Find.ClearFormatting</span><br><span class="line">    Selection.Find.Replacement.ClearFormatting</span><br><span class="line"></span><br><span class="line">    <span class="comment">'删图片</span></span><br><span class="line">    <span class="keyword">Dim</span> oInlineShape <span class="keyword">As</span> InlineShape</span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> oInlineShape <span class="keyword">In</span> ActiveDocument.InlineShapes</span><br><span class="line">        oInlineShape.Delete</span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">'取消所有超链接</span></span><br><span class="line">    <span class="keyword">Dim</span> cc <span class="keyword">As</span> Field</span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> cc <span class="keyword">In</span> ActiveDocument.Fields</span><br><span class="line">    <span class="keyword">If</span> cc.Type = wdFieldHyperlink <span class="keyword">Then</span></span><br><span class="line">    cc.Unlink</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    <span class="keyword">Set</span> cc = <span class="literal">Nothing</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">'删(微博)[微博]</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"[\[\（\(]微博[\）\]\)]"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">False</span></span><br><span class="line">        .MatchWildcards = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'删(博客,微博)</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"(博客,微博)"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = <span class="string">"^p^p"</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">True</span></span><br><span class="line">        .MatchWildcards = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'删象屿期货的段前符号</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = ChrW(<span class="number">61548</span>)</span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">True</span></span><br><span class="line">        .MatchWildcards = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'删小标题后的/</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"/^p"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = <span class="string">"^p"</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">True</span></span><br><span class="line">        .MatchWildcards = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'删股票代码</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"\([\-0-9.]&#123;1,&#125;[,^s]&#123;1,&#125;[\-0-9.]&#123;1,&#125;[,^s]&#123;1,&#125;[\-0-9.%]&#123;1,&#125;\)"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">False</span></span><br><span class="line">        .MatchWildcards = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'删股票涨跌值</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"\[[\-0-9.%]&#123;1,&#125;\]"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">False</span></span><br><span class="line">        .MatchWildcards = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'删[2.98% 资金 研报]</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"\[[\-0-9.%]&#123;1,&#125;^s资金^s研报\]"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">False</span></span><br><span class="line">        .MatchWildcards = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'删(600648,股吧)</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"\([0-9]&#123;6&#125;,[股吧基金]&#123;2,3&#125;\)"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = <span class="string">""</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">False</span></span><br><span class="line">        .MatchWildcards = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'手动换行符替换成回车符</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"^l"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = <span class="string">"^p"</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">True</span></span><br><span class="line">        .MatchWildcards = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'段与段顶多只隔一行，将任意个回车符号替换成二个</span></span><br><span class="line">    <span class="keyword">With</span> Selection.Find</span><br><span class="line">        .<span class="keyword">Text</span> = <span class="string">"(^13)@"</span></span><br><span class="line">        .Replacement.<span class="keyword">Text</span> = <span class="string">"^p^p"</span></span><br><span class="line">        .Forward = <span class="literal">True</span></span><br><span class="line">        .Wrap = wdFindContinue</span><br><span class="line">        .MatchByte = <span class="literal">False</span></span><br><span class="line">        .MatchWildcards = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.Find.Execute Replace:=wdReplaceAll</span><br><span class="line"></span><br><span class="line">    <span class="comment">'全选+剪切</span></span><br><span class="line">    Selection.WholeStory</span><br><span class="line">    Selection.Cut</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android真机调试时DDMS无法查看/data目录]]></title>
      <url>http://lovenight.github.io/2015/12/08/Android%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E6%97%B6DDMS%E6%97%A0%E6%B3%95%E6%9F%A5%E7%9C%8B-data%E7%9B%AE%E5%BD%95/</url>
      <content type="html"><![CDATA[<h1 id="问题与解决方法">问题与解决方法</h1><p>如题。<code>/data</code>的文件权限是<code>drwxrwx--x</code>。</p>
<ul>
<li>第一位d代表文件类型，d是directory目录；</li>
<li>后三位rwx代表创建者的权限，r读，w写，x执行</li>
<li>再后三rwx位代表同组者的权限</li>
<li>最后三位–x是其他人的权限，这里只有x执行，将它改成rwx即可。</li>
</ul>
<p>在cmd中运行adb命令</p>
<pre><code>adb <span class="keyword">shell</span> <span class="keyword">su</span> -c <span class="string">"chmod 777 /data"</span>
</code></pre><p>子目录需要使用同样的命令修改权限才可操作。</p>
<a id="more"></a>
<hr>
<h1 id="chmod_命令">chmod 命令</h1><h2 id="说明">说明</h2><p>Linux/Unix 的档案调用权限分为三级 : 档案拥有者、群组、其他。利用 chmod 可以藉以控制档案如何被他人所调用。</p>
<pre><code>chmod [-cfvR] [--help] [--version] mode file...
参数说明：
-<span class="ruby">c <span class="symbol">:</span> 若该档案权限确实已经更改，才显示其更改动作
</span>-<span class="ruby">f <span class="symbol">:</span> 若该档案权限无法被更改也不要显示错误讯息
</span>-<span class="ruby">v <span class="symbol">:</span> 显示权限变更的详细资料
</span>-<span class="ruby"><span class="constant">R</span> <span class="symbol">:</span> 对目前目录下的所有档案与子目录进行相同的权限变更(即以递回的方式逐个变更)
</span>-<span class="ruby">-help <span class="symbol">:</span> 显示辅助说明
</span>-<span class="ruby">-version <span class="symbol">:</span> 显示版本
</span>mode: 权限设定字串，格式如下 : [ugoa...][[+-=][rwxX]...][,...]，其中
    u 表示该档案的拥有者user
    g 表示与该档案的拥有者属于同一个群体者group
    o 表示其他以外的人other
    a 表示这三者皆是all
    + 表示增加权限、- 表示取消权限、= 表示唯一设定权限。
    r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该档案是个子目录或者该档案已经被设定过为可执行。
    -<span class="ruby">----------------
</span>    也可以用数字来表示权限如 chmod 777 file，三个数字分别表示user、group、other权限
        r=4，w=2，x=1。7表示rwx，依次类推
</code></pre><h2 id="范例">范例</h2><h3 id="所有人皆可读取">所有人皆可读取</h3><pre><code>chmod <span class="literal">a</span>+r file1 file2
</code></pre><h3 id="拥有者、同组者可写入，其他人不可写入">拥有者、同组者可写入，其他人不可写入</h3><pre><code>chmod ug+w,o-w <span class="type">file</span>
</code></pre><h3 id="只有该档案拥有者可以执行">只有该档案拥有者可以执行</h3><pre><code>chmod <span class="keyword">u</span>+x <span class="keyword">file</span>
</code></pre><h3 id="当前目录下的所有档案与子目录皆设为任何人可读取">当前目录下的所有档案与子目录皆设为任何人可读取</h3><pre><code>chmod -R <span class="literal">a</span>+r *
</code></pre><h3 id="所有人皆可读写执行">所有人皆可读写执行</h3><pre><code>chmod <span class="operator">a</span>=rwx <span class="built_in">file</span>
chmod <span class="number">777</span> <span class="built_in">file</span>    <span class="comment"># 与上等效</span>
</code></pre><h3 id="创建者、同组者读写执行，其他人仅执行">创建者、同组者读写执行，其他人仅执行</h3><pre><code>chmod ug=rwx,o=x <span class="type">file</span>
chmod <span class="number">771</span> <span class="type">file</span>    <span class="comment"># 与上等效</span>
</code></pre><h3 id="使程序拥有root权限">使程序拥有root权限</h3><pre><code>chmod <span class="number">4755</span> filename
</code></pre><p>　　</p>
<hr>
<h1 id="Linux常用命令全集">Linux常用命令全集</h1><ul>
<li><a href="http://itlab.idcquan.com/linux/special/linuxcom/" target="_blank" rel="external">Linux常用命令全集</a></li>
</ul>
<hr>
<h1 id="参考资料">参考资料</h1><ul>
<li><a href="http://blog.csdn.net/jason_wks/article/details/7310364" target="_blank" rel="external">Eclipse DDMS 无法查看手机/data/data</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[自占此次相亲结果如何]]></title>
      <url>http://lovenight.github.io/2015/12/06/%E8%87%AA%E5%8D%A0%E4%B8%8E%E7%8E%8BDY%E7%9B%B8%E4%BA%B2%E5%8F%91%E5%B1%95%E5%A6%82%E4%BD%95/</url>
      <content type="html"><![CDATA[<p>过段时间与西后里的王DY见面，自占将来会不会有发展。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/6/18/46/3/%E4%B8%8E%E7%8E%8BDY%E6%9C%89%E6%B2%A1%E6%9C%89%E5%8F%91%E5%B1%95.jpg" alt="与王DY有没有发展.jpg"></p>
<a id="more"></a>
<p>财爻戌土持世，休囚又逢日建辰土来冲，为自己经济状况不佳。子孙伏而不出，后继乏力。明年寅月冲开四爻官鬼申金，生旺子孙午火，跳槽加薪之象。正好符合我自己的计划。</p>
<p>妻财两现，以初爻丑土为用，丑土月耗日扶又入空亡，兼之变卦六冲，这次相亲没戏。</p>
<p>应爻亥水临月，对方的条件好很多。飞神亥水生合伏神寅木，临勾陈，表示和一位朋友非常合得来，暗生情愫。但是亥水入日墓，动弹不得，女方不会主动。三爻官鬼酉金动化回头克，克尽无用，不生应爻，这位朋友对她没有情意。</p>
<p>六爻中并不需要参考爻辞，这里只有一爻独发，不妨看看。有时与事暗合，爻辞参与占断，会有神来之笔。</p>
<blockquote>
<p>九三。井渫不食。为我心恻。可用汲。王明。并受其福。</p>
</blockquote>
<p>三爻的位置是中部偏下，井水里的杂质已经沉淀到了底部，此段井水可以饮用，但是没有人来取食，只因五爻的阳爻所阻。上卦为坎，坎为忧，故称心恻。不过五爻的阻碍并不会持续太久，清除之后，三爻位置处的井水就可以顺利打上来饮用了。五爻为尊位，对应到人事，就是最尊贵的「王」。「王明」即疏通五爻，上下皆受其福。</p>
<p>光看这爻辞，症结都在九五爻，只要九五一通，皆大欢喜。难道关键在我身上？怎么和六爻的分析结果截然相反。暂且记录下来，且看结果如何。</p>
<p><strong>12月16日更新</strong><br>13日乙未年戊子月癸亥日晚见面喝茶聊了两小时，16日丙寅日己亥时再约看电影时对方表示「我觉得我们做朋友挺好」。与六爻占断结果相符，至于对方的私事，就不得而知了。这一例也验证了六爻不需看爻辞。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[bat拖曳获取文件信息]]></title>
      <url>http://lovenight.github.io/2015/12/01/bat%E6%8B%96%E6%9B%B3%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E4%BF%A1%E6%81%AF/</url>
      <content type="html"><![CDATA[<p>有时候我们需要使用命令行处理文件，需要定期、多次重复时，手动输入或者复制粘贴路径和文件名效率非常低下。此时可以使用bat命令减轻工作量。</p>
<p>bat是Windows下的批处理文件，每一行都是一条DOS命令。</p>
<a id="more"></a>
<h1 id="获取文件属性">获取文件属性</h1><pre><code>@<span class="keyword">echo</span> off
<span class="keyword">echo</span> 无后缀名： %~n1
<span class="keyword">echo</span> 有后缀名： %~nx1
<span class="keyword">echo</span> 绝对路径： %<span class="number">1</span>
<span class="keyword">echo</span> 短路径名的绝对路径： %~s1
<span class="keyword">echo</span> 驱动器和路径： %~dp1
<span class="keyword">echo</span> 驱动器： %~d1
<span class="keyword">echo</span> 路径： %~p1
<span class="keyword">echo</span> 文件属性： %~a1
<span class="keyword">echo</span> 日期/时间： %~t1
<span class="keyword">echo</span> 文件大小： %~z1
<span class="built_in">pause</span>
</code></pre><p>把上述命令存入txt文件，将后缀名改为.bat。随便找个文件拖到.bat文件的图标上：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/1/0/24/39/3.png" alt="3.png"></p>
<h1 id="简单demo：编译运行Java文件">简单demo：编译运行Java文件</h1><p>初学Java时用命令行编译和运行，每次都要cd入目录，手输javac和java命令，非常不便。于是偷懒写了个.bat文件：</p>
<pre><code>@echo off
javac <span class="preprocessor">%</span>~<span class="label">nx1</span>
java <span class="preprocessor">%</span>~<span class="label">n1</span>
pause
</code></pre><p>每次写完一拖就搞定！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Wifi连接Android真机调试]]></title>
      <url>http://lovenight.github.io/2015/11/30/Wifi%E8%BF%9E%E6%8E%A5Android%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95/</url>
      <content type="html"><![CDATA[<p>一向使用真机调试，数据线用久了有些接触不良，动作幅度一大，adb就断开链接。再买一根数据线是下下策，干脆买了个360随身Wifi，将手机通过Wifi连上电脑进行调试。没有数据线的牵绊轻松了许多。</p>
<p>电脑与手机用其他方式连在同一个局域网中也可以使用下面的方法。</p>
<a id="more"></a>
<hr>
<h1 id="手动方法">手动方法</h1><p>1.在手机上安装终端类App，<strong>开启Root权限</strong>，打开App，输入以下命令：</p>
<pre><code>su
setprop service<span class="class">.adb</span><span class="class">.tcp</span><span class="class">.port</span> <span class="number">5555</span>
stop adbd
start adbd
</code></pre><p>其中，su表示获取root权限</p>
<p>2.查看手机的Wifi连接，获取手机IP地址。</p>
<p>3.电脑上打开CMD，输入如下命令：</p>
<pre><code><span class="label">adb</span> connect 手机<span class="literal">IP</span>地址
</code></pre><p>命令行输入adb devices或者Eclipse的DDMS都可以看到已连接的设备，可以直接进行真机调试</p>
<hr>
<h1 id="APP">APP</h1><p>每次连电脑都要在手机上输一大串终端命令实在太繁琐，干脆写了个APP代劳。必须给该APP<strong>开启Root权限</strong>。连上Wifi后打开APP点击按钮：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/30/19/2/6/APP2.png?imageMogr2/thumbnail/500x500" alt="APP2.png"></p>
<p>Github：<a href="https://github.com/loveNight/AndroidTerminal" target="_blank" rel="external">loveNight/AndroidTerminal</a></p>
<p>Eclipse + ADT插件写的。导入工程后直接用USB调试装到自己手机上使用。</p>
<h2 id="核心代码">核心代码</h2><p>手机上运行终端命令的代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.DataOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * CMD 命令行执行工具</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CmdUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String COMMAND_SU = <span class="string">"su"</span>; <span class="comment">// 表示获取root权限（APP必须已root）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String COMMAND_LINE_END = <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String COMMAND_EXIT = <span class="string">"exit\n"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * Android手机用Wifi连上电脑ADB调试</span><br><span class="line">     * 须在手机终端输入如下命令</span><br><span class="line">     * 此终端必须已经Root</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] wifiConnectToComputer = &#123;</span><br><span class="line">        <span class="string">"setprop service.adb.tcp.port 5555"</span>,</span><br><span class="line">        <span class="string">"stop adbd"</span>,</span><br><span class="line">        <span class="string">"start adbd"</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">execute</span><span class="params">(String[] commands)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//----------------- 待写：检查此手机是否已经Root-------------</span></span><br><span class="line"></span><br><span class="line">        Runtime runtime = Runtime.getRuntime();</span><br><span class="line"></span><br><span class="line">        Process process = <span class="keyword">null</span>;</span><br><span class="line">        DataOutputStream output = <span class="keyword">null</span>; <span class="comment">// 用于向终端进程输入命令</span></span><br><span class="line">        BufferedReader successResult = <span class="keyword">null</span>;</span><br><span class="line">        BufferedReader errorResult = <span class="keyword">null</span>;</span><br><span class="line">        StringBuilder successMsg = <span class="keyword">null</span>;</span><br><span class="line">        StringBuilder errorMsg = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            process = runtime.exec(COMMAND_SU);</span><br><span class="line">            output = <span class="keyword">new</span> DataOutputStream(process.getOutputStream());</span><br><span class="line">            <span class="keyword">for</span> (String command : commands) &#123;</span><br><span class="line">                <span class="keyword">if</span> (command == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                output.write(command.getBytes());</span><br><span class="line">                output.writeBytes(COMMAND_LINE_END); <span class="comment">// 输完一行命令要按回车</span></span><br><span class="line">                output.flush();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            output.writeBytes(COMMAND_EXIT);</span><br><span class="line">            output.flush();</span><br><span class="line">            process.waitFor(); <span class="comment">// 当前线程等待，直到process线程执行结束</span></span><br><span class="line"></span><br><span class="line">            successMsg = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            errorMsg = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            successResult = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(process.getInputStream()));</span><br><span class="line">            errorResult = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(process.getErrorStream()));</span><br><span class="line"></span><br><span class="line">            String s;</span><br><span class="line">            <span class="keyword">while</span> ( (s = successResult.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                successMsg.append(s).append(<span class="string">"\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> ( (s = errorResult.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                errorMsg.append(s).append(<span class="string">"\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123; <span class="comment">// 回收资源</span></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (output != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        output.close();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (successResult != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        successResult.close();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (errorResult != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        errorResult.close();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (process != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    process.destroy();</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Result(successMsg == <span class="keyword">null</span> ? <span class="keyword">null</span> : successMsg.toString()</span><br><span class="line">                , errorMsg == <span class="keyword">null</span> ? <span class="keyword">null</span> : errorMsg.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Result</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> String successMsg;</span><br><span class="line">        <span class="keyword">public</span> String errorMsg;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Result</span><span class="params">(String successMsg, String errorMsg)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>();</span><br><span class="line">            <span class="keyword">this</span>.successMsg = successMsg;</span><br><span class="line">            <span class="keyword">this</span>.errorMsg = errorMsg;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>获取手机IP地址需要Wifi权限：</p>
<pre><code>&lt;uses-permission android:<span class="property">name</span>=<span class="string">"android.permission.ACCESS_WIFI_STATE"</span>/&gt;
</code></pre><p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.net.wifi.WifiInfo;</span><br><span class="line"><span class="keyword">import</span> android.net.wifi.WifiManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WifiUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> WifiUtils wifiUtils;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">WifiUtils</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> WifiUtils <span class="title">getInstance</span><span class="params">(Context context)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (wifiUtils == <span class="keyword">null</span>) &#123;</span><br><span class="line">            wifiUtils = <span class="keyword">new</span> WifiUtils(context);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> wifiUtils;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 获取手机IP地址</span><br><span class="line">     * 必须连上wifi</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getIpAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        WifiManager wifiManager = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);</span><br><span class="line">        WifiInfo wifiInfo = wifiManager.getConnectionInfo();</span><br><span class="line">        result = wifiInfo.getIpAddress();</span><br><span class="line">        <span class="keyword">return</span> intToIp(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 直接获取的IP地址是一个4字节的整数</span><br><span class="line">     * 需要手动处理成常见的192.168.1.155形式</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">intToIp</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (i &amp; <span class="number">0xFF</span> ) + <span class="string">"."</span> +</span><br><span class="line">        ((i &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span>) + <span class="string">"."</span> +</span><br><span class="line">        ((i &gt;&gt; <span class="number">16</span> ) &amp; <span class="number">0xFF</span>) + <span class="string">"."</span> +</span><br><span class="line">        ( i &gt;&gt; <span class="number">24</span> &amp; <span class="number">0xFF</span>) ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的Sublime Text 3 配置]]></title>
      <url>http://lovenight.github.io/2015/11/30/%E6%88%91%E7%9A%84Sublime-Text-3-%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h1 id="下载">下载</h1><ul>
<li><a href="http://www.sublimetext.com/3" target="_blank" rel="external">Sublime Text 3 官方下载地址</a></li>
<li><a href="http://pan.baidu.com/s/1sj02k2L" target="_blank" rel="external">Sublime Text 3 汉化破解版</a></li>
</ul>
<hr>
<h1 id="资料：">资料：</h1><ul>
<li><a href="http://sublime-text.readthedocs.org/en/latest/index.html" target="_blank" rel="external">Sublime Text 非官方文档</a></li>
</ul>
<hr>
<h1 id="技巧">技巧</h1><p><code>-用户</code>或<code>-User</code>后缀的菜单项，其对应的配置文件都保存在<code>Packages\User</code>文件夹下，将它们上传到Github，便于同步。</p>
<a id="more"></a>
<hr>
<h1 id="个人最常用的快捷键">个人最常用的快捷键</h1><p>快捷键完整版见后文，这里只列个人习惯。</p>
<p>四种 Goto ：<br>Ctrl + P  文件定位<br>Ctrl + ;  词语定位 #<br>Ctrl + R  函数定位 @<br>Ctrl + G  行号定位 :</p>
<p>括号前后移动光标：Ctrl + M<br>以单词为单位前后移动光标：Ctrl + Left/Right<br>Ctrl+→ 向右单位性地移动光标，快速移动光标。<br>重新打开刚刚关闭的标签页：Ctrl + Shift + T<br>当前行与上/下一行交换位置：Shift + Ctrl + Up/Down<br>向光标前插入一行：Shift + Ctrl + Enter<br>向光标后插入一行：Ctrl + Enter<br>复制光标所在整行，插入到下一行：Ctrl + Shift + D<br>合并选中的多行代码为一行：Ctrl + J<br>快速折叠文件内所有函数：Ctrl + K + 1 （数字表示级别）</p>
<p>代码格式化： Ctrl + Shift + P，输入reindent lines。（一般输几个字母就出现了命令，直接回车）</p>
<hr>
<h1 id="插件">插件</h1><p>先装插件管理器(Package Control)：<a href="https://packagecontrol.io/installation" target="_blank" rel="external">https://packagecontrol.io/installation</a></p>
<p><strong>安装插件</strong>：Ctrl+Shift+P，输入install，等待几秒后出现插件列表，输插件名再回车就能自动安装。下文插件名加链接的可以点进去学习使用方法。建议安装插件后都进设置菜单配置一下。<br><strong>删除插件</strong>：Ctrl+Shift+P，输入remove package，选择插件再回车。</p>
<ul>
<li><strong>ConvertToUTF8</strong>：GBK编码兼容。</li>
<li><strong>FileHeader</strong>：文件模板，可自动更新修改时间。<br>Ctrl+Shift+A 插入文件头。<code>Packages\FileHeader\template</code>中的 body 对应文件模板，header 对应文件头</li>
<li><strong>JsFormat</strong>：javascript格式化，包括Json。切换Syntax后按 Ctrl+Alt+F 格式化。</li>
<li><a href="https://wakatime.com/" target="_blank" rel="external"><strong>wakatime</strong></a>：自动记录code时间，支持多种编辑器和IDE。<br>先到官网注册，登录后在右上角点用户名，选择<code>Setting</code>，左侧选<code>Account</code>，复制Api Key。Sublime中安装此插件会用到。以后就可以登录网站查看自己的code时间统计图。</li>
<li><a href="http://colorsublime.com/" target="_blank" rel="external"><strong>ColorSublime</strong></a>：用来安装其官网上的所有主题。<br>安装此插件后，Ctrl+Shift+P，输入install theme并回车，等待片刻即缓存其官网所有主题到本地，按上下键可以即时预览效果，回车键安装。</li>
<li><a href="https://github.com/gornostal/Modific" target="_blank" rel="external"><strong>Git</strong></a>：如其名，还没学会使用</li>
<li><a href="https://github.com/gornostal/Modific" target="_blank" rel="external"><strong>Modific</strong></a>：高亮相对于上次Git或SVN提交有所变动的行。</li>
<li><a href="https://github.com/spadgos/sublime-jsdocs" target="_blank" rel="external"><strong>DocBlockr</strong></a>：生成Java风格的函数注释，用法与效果都和Eclipse相同。</li>
<li><a href="https://github.com/aziz/PlainTasks" target="_blank" rel="external"><strong>PlainTasks</strong></a>：待办事件表</li>
<li><a href="https://packagecontrol.io/packages/ColorPicker" target="_blank" rel="external"><strong>ColorPicker</strong></a>：需要输入颜色时，可直接打开调色板选颜色。快捷键Ctrl+Shift+C，与ConvertToUTF8冲突，在<code>Packages\ConvertToUTF8</code>下找到对应操作系统的<code>Default.sublime-keymap</code>文件，把快捷键改掉</li>
<li><a href="https://github.com/facelessuser/TabsExtra" target="_blank" rel="external"><strong>TabsExtra</strong></a>：安装后右键单击Sublime里的文件标签，选clone就能在新标签中打开同一文件。配合Alt+Shift+2可以方便地分屏浏览。</li>
<li><a href="http://damnwidget.github.io/anaconda/" target="_blank" rel="external"><strong>Anaconda</strong></a>：Python代码自动补全、PEP8格式化等</li>
<li><a href="http://docs.emmet.io/" target="_blank" rel="external"><strong>Emment</strong></a>：快速编写HTML和CSS代码</li>
</ul>
<hr>
<h1 id="代码段_Snippet">代码段 Snippet</h1><p>以Eclipse中常用的syso为例，把它照搬到Sublime Text中：</p>
<p>单击菜单中的<code>工具</code>，<code>新代码段...</code>，删掉默认内容，粘贴下方代码并保存到<code>Packages\User\Java Snippets</code>文件夹，文件名为<code>Print.sublime-snippet</code>。写Java代码时只须输入<code>syso</code>再按回车就能快速插入<code>System.out.println()</code> 了。</p>
<p>后缀必须是<code>.sublime-snippet</code>，文件名可以自由命名，目录结构也可以随意更改，只要在<code>Packages\User\</code>下就行。每个文件中只能写包含一个<code>&lt;snippet&gt;</code>结点<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">snippet</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 快速补全的内容 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1表示第一个输入点，1后加冒号和字符表示默认值 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 如System.out.println($&#123;1:"Hello World"&#125;)，可输入多行代码 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">content</span>&gt;</span><span class="cdata">&lt;![CDATA[System.out.println($&#123;1&#125;);]]&gt;</span><span class="tag">&lt;/<span class="title">content</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 触发字符 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Eclipse中可以用syso快速插入Java的输出语句 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">tabTrigger</span>&gt;</span>syso<span class="tag">&lt;/<span class="title">tabTrigger</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 指定的语法才会触发，可选 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 此处的语法指的是Ctrl+Shift+P，Set Syntax中设置的语法 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 必须把完整的语言名写在后缀中 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">scope</span>&gt;</span>source.java<span class="tag">&lt;/<span class="title">scope</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 触发时的提示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">description</span>&gt;</span>System.out.println()<span class="tag">&lt;/<span class="title">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">snippet</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Sublime Text 3 为每种语法（Syntax）都设置了Snippet。</p>
<p>查看方法：把Sublime Text 3 根目录下<code>Packages</code>文件夹中任意文件复制出来，改后缀为<code>.rar</code>，解压缩。后缀为<code>.sublime-snippet</code>的就是了。可以用Sublime打开。</p>
<hr>
<h1 id="设置">设置</h1><h2 id="Sublime_Text_设置">Sublime Text 设置</h2><p><code>首选项</code>，<code>设置-用户</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 开启选中范围内搜索</span></span><br><span class="line">    <span class="string">"auto_find_in_selection"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 侧边栏文件夹显示加粗，区别于文件</span></span><br><span class="line">    <span class="string">"bold_folder_labels"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"color_scheme"</span>: <span class="string">"Packages/Color Scheme - Default/Solarized (Dark).tmTheme"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用 unix 风格的换行符</span></span><br><span class="line">    <span class="string">"default_line_ending"</span>: <span class="string">"unix"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 覆盖操作系统设置的DPI，否则标签上的中文显示为方块</span></span><br><span class="line">    <span class="string">"dpi_scale"</span>: <span class="number">1.0</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// true则禁用Emmet的tab键功能</span></span><br><span class="line">    <span class="comment">// "disable_tab_abbreviations": true,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 右侧代码预览时给所在区域加上边框</span></span><br><span class="line">    <span class="string">"draw_minimap_border"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保证在文件保存时，在结尾插入一个换行符。</span></span><br><span class="line">    <span class="comment">// 这样 git 提交时不会生产额外的 diff</span></span><br><span class="line">    <span class="string">"ensure_newline_at_eof_on_save"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认显示行号右侧的代码段闭合展开三角号</span></span><br><span class="line">    <span class="string">"fade_fold_buttons"</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"font_face"</span>: <span class="string">"Microsoft YaHei Mono"</span>,</span><br><span class="line">    <span class="string">"font_size"</span>: <span class="number">13</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当前行高亮</span></span><br><span class="line">    <span class="string">"highlight_line"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 高亮未保存文件</span></span><br><span class="line">    <span class="string">"highlight_modified_tabs"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"ignored_packages"</span>:</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"Vintage"</span></span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 窗口失焦立即保存文件</span></span><br><span class="line">    <span class="string">"save_on_focus_lost"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动移除行尾多余空格</span></span><br><span class="line">    <span class="string">"trim_trailing_white_space_on_save"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"trim_automatic_white_space"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭自动更新</span></span><br><span class="line">    <span class="string">"update_check"</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动换行</span></span><br><span class="line">    <span class="string">"word_wrap"</span>: <span class="string">"true"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Tab转空格</span></span><br><span class="line">    <span class="string">"translate_tabs_to_spaces"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Anaconda_设置">Anaconda 设置</h2><p><code>首选项</code>，<code>插件设置</code>，<code>Anaconda</code>，<code>Settings - User</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">//忽略各种空格不对, 超过80字, import的函数没有使用的提醒,</span></span><br><span class="line">    <span class="string">"pep8_ignore"</span>: [<span class="string">"E501"</span>, <span class="string">"W292"</span>, <span class="string">"E303"</span>, <span class="string">"W391"</span>, <span class="string">"E225"</span>, <span class="string">"E302"</span>, <span class="string">"W293"</span>, <span class="string">"E402"</span>],</span><br><span class="line">    <span class="string">"pyflakes_explicit_ignore"</span>:</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"UnusedImport"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">//保存文件后自动pep8格式化</span></span><br><span class="line">    <span class="string">"auto_formatting"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">//库函数的提示</span></span><br><span class="line">    <span class="string">"enable_signatures_tooltip"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"merge_signatures_and_doc"</span>:<span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span><br><span class="line">        Set is a false to disable Anaconda Linting totally</span><br><span class="line">    */</span></span><br><span class="line">    <span class="string">"anaconda_linting"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="快捷键设置">快捷键设置</h2><p><code>首选项</code>，<code>按键绑定-用户</code>：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line"><span class="comment">// 代码提示</span></span><br><span class="line">&#123; <span class="string">"keys"</span>: [<span class="string">"alt+space"</span>], <span class="string">"command"</span>: <span class="string">"auto_complete"</span> &#125;,</span><br><span class="line">&#123; <span class="string">"keys"</span>: [<span class="string">"alt+space"</span>], <span class="string">"command"</span>: <span class="string">"replace_completion_with_auto_complete"</span>, <span class="string">"context"</span>:</span><br><span class="line">  [</span><br><span class="line">    &#123; <span class="string">"key"</span>: <span class="string">"last_command"</span>, <span class="string">"operator"</span>: <span class="string">"equal"</span>, <span class="string">"operand"</span>: <span class="string">"insert_best_completion"</span> &#125;,</span><br><span class="line">    &#123; <span class="string">"key"</span>: <span class="string">"auto_complete_visible"</span>, <span class="string">"operator"</span>: <span class="string">"equal"</span>, <span class="string">"operand"</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">    &#123; <span class="string">"key"</span>: <span class="string">"setting.tab_completion"</span>, <span class="string">"operator"</span>: <span class="string">"equal"</span>, <span class="string">"operand"</span>: <span class="literal">true</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 跳转到函数定义</span></span><br><span class="line">&#123; <span class="string">"keys"</span>: [<span class="string">"ctrl+alt+d"</span>], <span class="string">"command"</span>: <span class="string">"goto_definition"</span> &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<hr>
<h1 id="编译系统">编译系统</h1><h2 id="编译运行Java">编译运行Java</h2><p>Sublime Text 3默认将文件存为UTF-8编码，如果要手动输命令编译Sublime Text 3 写的Java源文件，必须加<code>-encoding UTF-8</code>参数</p>
<h3 id="方法一：">方法一：</h3><p>打开Sublime Text 3，依次点击<code>工具</code>、<code>编译系统</code>、<code>新编译系统</code>，粘贴下面的代码并保存为<code>My-----Java.sublime-build</code>。文件名加这么多斜杠是为了能在菜单中一眼找出来。</p>
<p>然后按Ctrl+Shift+P，输入<code>My---</code>，选择<code>Build With:My-----Java</code>并回车，即可将刚才的文件设置为当前编译系统。Ctrl+B编译，Ctrl+Shift+B运行。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 命令和参数，未指定路径则在PATH环境变量中找</span></span><br><span class="line">    <span class="string">"cmd"</span>: [<span class="string">"javac"</span>,<span class="string">"-encoding"</span>,<span class="string">"UTF-8"</span>,<span class="string">"-d"</span>,<span class="string">"."</span>,<span class="string">"$file"</span>],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可选。获取cmd的错误输出</span></span><br><span class="line">    <span class="string">"file_regex"</span>: <span class="string">"^(...*?):([0-9]*):?([0-9]*)"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可选。`工具`菜单中`编译`为`自动`时生效</span></span><br><span class="line">    <span class="string">"selector"</span>: <span class="string">"source.java"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可选。输出"cmd"的编码。必须是合法的Python编码，缺省为"UTF-8"</span></span><br><span class="line">    <span class="string">"encoding"</span>:<span class="string">"GBK"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// variants 可选。用来替代主构建系统的备选。如果构建系统的"selector"与激活的文件匹配，变量"name"则会出现在 Command Palette 中。</span></span><br><span class="line">    <span class="string">"variants"</span>:</span><br><span class="line">        [</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                 <span class="comment">// 仅在"variants"中是合法的 (详见 variants)。用来标识系统中不同的构建系统。如果"name"是"Run" ,则会显示在Tools | Build System 菜单下，并且可以使用Ctrl + Shift + B调用</span></span><br><span class="line">                <span class="string">"name"</span>: <span class="string">"Run"</span>,</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 可选。如果该选项为"true" ，"cmd"则可以通过shell运行。</span></span><br><span class="line">                <span class="string">"shell"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">                <span class="string">"cmd"</span> :  [<span class="string">"start"</span>,<span class="string">"cmd"</span>,<span class="string">"/c"</span>, <span class="string">"java $&#123;file_base_name&#125; &amp;echo. &amp; pause"</span>],</span><br><span class="line">                <span class="comment">// /c是执行完命令后关闭cmd窗口,</span></span><br><span class="line">                <span class="comment">// /k是执行完命令后不关闭cmd窗口。</span></span><br><span class="line">                <span class="comment">// echo. 相当于输入一个回车</span></span><br><span class="line">                <span class="comment">// pause命令使cmd窗口按任意键后才关闭</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 可选。在运行首行的"cmd"前会切换到该目录。运行结束后会切换到原来的目录。</span></span><br><span class="line">                <span class="string">"working_dir"</span>: <span class="string">"$&#123;file_path&#125;"</span>,</span><br><span class="line"></span><br><span class="line">                <span class="string">"encoding"</span>:<span class="string">"GBK"</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 还有：</span></span><br><span class="line">    <span class="comment">// line_regex 可选。当"cmd"的错误输出中，file_regex与该行不匹配，如果line_regex存在，并且确实与当前行匹配， 则遍历整个缓冲区，直到与file regex匹配的行出现，并用这两个匹配决定最终要跳转的文件或行。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// target 可选。运行的Sublime Text命令，缺省为"exec" (Packages/Default/exec.py)。该命令从 .build-system中获取配置数据。用来替代缺省的构建系统命令。注意，如果你希望替代构建系统的缺省命令，请在.sublime-build 文件中专门设置。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// env 可选。在环境变量被传递给"cmd"前，将他们封装成词典。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// path 可选。该选项可以在调用"cmd"前替换当前进程的PATH 。原来的 PATH 将在运行后恢复。使用这个选项可以在不修改系统设置的前提下将目录添加到 PATH 中。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="方法二：">方法二：</h3><p>在JDK的bin目录下新建<code>runJava.bat</code>文件：</p>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@echo</span> off</span><br><span class="line">cd <span class="variable">%~</span>dp1</span><br><span class="line">echo Compiling <span class="variable">%~</span>nx1......</span><br><span class="line"><span class="keyword">if</span> exist <span class="variable">%~</span>n1.class (</span><br><span class="line">    del <span class="variable">%~</span>n1.class</span><br><span class="line">)</span><br><span class="line">javac -encoding UTF-<span class="number">8</span> <span class="variable">%~</span>nx1</span><br><span class="line"><span class="keyword">if</span> exist <span class="variable">%~</span>n1.class (</span><br><span class="line">    echo ------Output------</span><br><span class="line">    java <span class="variable">%~</span>n1</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>用上面的方法新建并设置为当前编译系统，按Ctrl+B即可编译+运行，这种方法的缺点是无法在控制台输入，如果程序需要输入内容，则直接报错<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="string">"shell_cmd"</span>: <span class="string">"runJava.bat \"$file\""</span>,</span><br><span class="line"> <span class="string">"file_regex"</span>: <span class="string">"^(...*?):([0-9]*):?([0-9]*)"</span>,</span><br><span class="line"> <span class="string">"selector"</span>: <span class="string">"source.java"</span>,</span><br><span class="line"> <span class="string">"encoding"</span>: <span class="string">"GBK"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="运行_Python">运行 Python</h2><p>用法同上，仅粘贴代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"shell_cmd"</span>: <span class="string">"python -u \"$file\""</span>,</span><br><span class="line">    <span class="string">"file_regex"</span>: <span class="string">"^[ ]*File \"(...*?)\", line ([0-9]*)"</span>,</span><br><span class="line">    <span class="string">"selector"</span>: <span class="string">"source.python"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认是utf-8，控制台无法输出中文。</span></span><br><span class="line">    <span class="comment">// Window Code Page 936，指的是GBK编码</span></span><br><span class="line">    <span class="string">"encoding"</span>:<span class="string">"cp936"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<h1 id="快捷键汇总">快捷键汇总</h1><h2 id="选择类">选择类</h2><blockquote>
<ul>
<li>Ctrl+D 选中光标所占的文本，继续操作则会选中下一个相同的文本。</li>
<li>Alt+F3 选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。举个栗子：快速选中并更改所有相同的变量名、函数名等。</li>
<li>Ctrl+L 选中整行，继续操作则继续选择下一行，效果和 Shift+↓ 效果一样。</li>
<li>Ctrl+Shift+L 先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。</li>
<li>Ctrl+Shift+M 选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。</li>
<li>Ctrl+M 光标移动至括号内结束或开始的位置。</li>
<li>Ctrl+Enter 在下一行插入新行。举个栗子：即使光标不在行尾，也能快速向下插入一行。</li>
<li>Ctrl+Shift+Enter 在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。</li>
<li>Ctrl+Shift+[ 选中代码，按下快捷键，折叠代码。</li>
<li>Ctrl+Shift+] 选中代码，按下快捷键，展开代码。</li>
<li>Ctrl+K+0 展开所有折叠代码。</li>
<li>Ctrl+← 向左单位性地移动光标，快速移动光标。</li>
<li>Ctrl+→ 向右单位性地移动光标，快速移动光标。</li>
<li>shift+↑ 向上选中多行。</li>
<li>shift+↓ 向下选中多行。</li>
<li>Shift+← 向左选中文本。</li>
<li>Shift+→ 向右选中文本。</li>
<li>Ctrl+Shift+← 向左单位性地选中文本。</li>
<li>Ctrl+Shift+→ 向右单位性地选中文本。</li>
<li>Ctrl+Shift+↑ 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。</li>
<li>Ctrl+Shift+↓ 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。</li>
<li>Ctrl+Alt+↑ 向上添加多行光标，可同时编辑多行。</li>
<li>Ctrl+Alt+↓ 向下添加多行光标，可同时编辑多行。</li>
</ul>
</blockquote>
<h2 id="编辑类">编辑类</h2><blockquote>
<ul>
<li>Ctrl+J 合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。</li>
<li>Ctrl+Shift+D 复制光标所在整行，插入到下一行。</li>
<li>Tab 向右缩进。只对光标后（或者选中的）的代码有效</li>
<li>Shift+Tab 向左缩进。</li>
<li>Ctrl+[ 向左缩进。对整行有效</li>
<li>Ctrl+] 向右缩进。对整行有效</li>
<li>Ctrl+K+K 从光标处开始删除代码至行尾。按住Ctrl，按两次K。</li>
<li>Ctrl+Shift+K 删除整行。</li>
<li>Ctrl+/ 注释单行。</li>
<li>Ctrl+Shift+/ 注释多行。</li>
<li>Ctrl+K+U 转换大写。</li>
<li>Ctrl+K+L 转换小写。</li>
<li>Ctrl+Z 撤销。</li>
<li>Ctrl+Y 恢复撤销。</li>
<li>Ctrl+U 软撤销，感觉和 Gtrl+Z 一样。</li>
<li>Ctrl+F2 设置书签，F2切换书签</li>
<li>Ctrl+T 左右字母互换。</li>
<li>F6 单词检测拼写</li>
</ul>
</blockquote>
<h2 id="搜索类">搜索类</h2><blockquote>
<ul>
<li>Ctrl+F 打开底部搜索框，查找关键字。</li>
<li>Ctrl+shift+F 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找，略高端，未研究。</li>
<li>Ctrl+P 打开搜索框。举个栗子：1、输入当前项目中的文件名，快速搜索文件，2、输入@和关键字，查找文件中函数名，3、输入：和数字，跳转到文件中该行代码，4、输入#和关键字，查找变量名。</li>
<li>Ctrl+G 打开搜索框，自动带：，输入数字跳转到该行代码。举个栗子：在页面代码比较长的文件中快速定位。</li>
<li>Ctrl+R 打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。</li>
<li>Ctrl+： 打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。</li>
<li>Esc 退出光标多行选择，退出搜索框，命令框等。</li>
<li>Ctrl+Shift+P 打开命令框。场景栗子：打开命名框，输入关键字，调用sublime text或插件的功能，例如使用package安装插件。</li>
</ul>
</blockquote>
<h2 id="显示类">显示类</h2><blockquote>
<ul>
<li>Ctrl+Tab 按文件浏览过的顺序，切换当前窗口的标签页。</li>
<li>Ctrl+PageDown 向左切换当前窗口的标签页。</li>
<li>Ctrl+PageUp 向右切换当前窗口的标签页。</li>
<li>Alt+Shift+1 窗口分屏，恢复默认1屏（非小键盘的数字）</li>
<li>Alt+Shift+2 左右分屏-2列</li>
<li>Alt+Shift+3 左右分屏-3列</li>
<li>Alt+Shift+4 左右分屏-4列</li>
<li>Alt+Shift+5 等分4屏</li>
<li>Alt+Shift+8 垂直分屏-2屏</li>
<li>Alt+Shift+9 垂直分屏-3屏</li>
<li>Ctrl+K+B 开启/关闭侧边栏。</li>
<li>F11 全屏模式</li>
<li>Shift+F11 免打扰模式</li>
</ul>
</blockquote>
<hr>
<h2 id="多重选择（Multi-Selection）">多重选择（Multi-Selection）</h2><p>多重选择功能允许在页面中同时存在多个光标，让很多本来需要正则表达式、高级搜索和替换才能完成的任务也变得游刃有余了。</p>
<p>激活多重选择的方法有两几种：</p>
<blockquote>
<ul>
<li>按住 Ctrl 然后在页面中希望中现光标的位置点击。</li>
<li>选择数行文本，然后按下 Shift + Ctrl + L。</li>
<li>通过反复按下 Ctrl + D 即可将全文中与光标当前所在位置的词相同的词逐一加入选择，而直接按下 Alt+F3即可一次性选择所有相同的词。</li>
<li>按下鼠标中键来进行垂直方向的纵列选择，也可以进入多重编辑状态。</li>
</ul>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[白云外的一阵风]]></title>
      <url>http://lovenight.github.io/2015/11/28/%E7%99%BD%E4%BA%91%E5%A4%96%E7%9A%84%E4%B8%80%E9%98%B5%E9%A3%8E/</url>
      <content type="html"><![CDATA[<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/4/2/35/%E9%B2%9C%E8%8A%B1.jpg" alt="鲜花.jpg"></p>
<p>年龄一大，难免要操心终生大事——操心的不是我，而是各路亲戚。我只想着如何避免这些事，老婆孩子是一条枷锁，使自己的下半生不得自由。可惜事与愿违，越来越大的压力，使我很难再坚持这样的做法。母亲身体不好，每次谈及这方面的事，总是说自己这几年还可以帮忙带带小孩，再晚就带不动了。听到心里总感觉无限心酸。</p>
<a id="more"></a>
<p>但我自己又很明确自己的心意，可能由于荷尔蒙作怪，以前羡慕过别人成双成对，也曾经狂热地喜欢过女神。不过从来没有想过成家后会怎么样——也许是因为女神压根没令我看到这方面的希望，我才没想。只有生病躺在床上一动不动的时候，才会觉得有个人在一边照顾也挺好。这样的想法挺自私的。把付出看作是对自己的限制，不想承受，却又偶尔希望接受他人的照顾。</p>
<p>迫于压力而结婚，既对不起我自己，也对不起女方。女生总对婚姻有无限向往，而我并不是值得托付终生居家过日子的人，也不想往那个方向作出改变。事情陷入了死结，究竟要怎么办呢？等吧。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E9%87%91%E6%80%9D%E7%BE%8E%E5%A9%9A%E7%A4%BC7.jpg?imageMogr2/thumbnail/500x500" alt="金思美婚礼7.jpg"></p>
<p>这两年是同龄人结婚的高发期，像我这种朋友挺少的人，光是这一年也参加了三次婚宴，一次订婚。朋友圈里各种晒婚礼、晒大肚子、晒小孩，仍然没有什么成家的想法。朋友圈里的照片看上去光鲜又精彩，但是和一些朋友多聊了聊，婚姻又没有TA们想象得那么好。</p>
<p>正在码字的时候，又收到毛驴的微信，12月20日在金华结婚。打算到时候坐鸡爷或猪爷的车一块过去，挺热闹的。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%AE%8F.jpg" alt="宏.jpg"></p>
<p>晚上和同学吃饭，聊到自己不想结婚，同学说，「你还没遇到能令你想结婚的人」。这是青春期情窦初开时就听过的话，那时有一种盲目的信仰，就如鸡汤里说的那样，总有一天你会遇上一个人，惊艳了时光，温柔了岁月，让你觉得所有的等待都是值得的。然而作为一名理科生，看看男女比例，就知道总得有一大波人打光棍儿。</p>
<p>学了术数之后，遇到最多的是各路痴男怨女，不管卦主年龄几何，都喜欢问目前遇到的谁谁是不是真命天子/女。其实这方面并没有正缘、真命之类的说法，人与人之间的因缘不同，缘深纠葛多，缘浅轻易散，来来去去就是这么一回事，没有永恒长久的伴侣，最多也只能持续数十年。更多人没有走到生命的尽头，感情已经产生了无法弥补的裂痕，有的干脆离婚，有的貌合神离，依旧维持着僵硬的关系。印象中最惨的一个人，年近四十仍然单身，还问自己能不能遇到真爱。可怜的人啊，爱只是大脑中编织的美梦，易碎也易醒。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%AE%8F2.jpg" alt="宏2.jpg"></p>
<p>那时候对爱情有什么样的幻想，现在已经记不起来了。可能就像这只火锅，什么玩意都往里加，倾尽最美好的想象。有部韩国电影《建筑学概论》有一幕类似的场景，女主角喝辣汤时哭着说，「我感觉目前的生活就跟辣汤一样，也不知里面放了什么，只是辣而已」。结合电影前期的铺垫，这句台词令人非常触动。</p>
<p>我的生活也非常简单，只是淡而已。今年加了另一种味道：相亲。过年时村后面有户老太太——我完全没印象——跑来和我妈说，她外孙女年初一要来村里上坟，让我到时候过去见见。</p>
<p>乡下什么都好，只是没有茶楼、咖啡厅之类聊天的地方，相亲习俗都是男方直接去女方家里。这我非常难以接受，在城市生活久了，习惯男女双方感情稳定下来才见家长。姐姐也是定下来要结婚，才把姐夫带回家来。在那之前我们全都以为她还单身。城里的这种习惯，有一个原因是男女双方往往有一方是或者都是外地人，去对方家里不方便。然而乡下那种小地方，骑个电瓶车，五分钟就到了。要是去镇上找家店吃个饭反而不如直接去对方家更方便。</p>
<p>在我的坚持反对下，年初这一「劫」总算躲了过去。不过我妈又在盘算着这次过年让我再去见见。那老太太一再夸口外孙女非常漂亮。要是真漂亮，这么大还没嫁出去，不是眼光高就是性格不好相处。像我这样不想结婚的还只是极少数吧，目前还没见过第二个。</p>
<p>拜年的时候，二阿姨突然说，她朋友的朋友的女儿在附近村子里，让我也去见见。我急中生智想了个借口说自己最近一直感冒咳嗽停不下来，去了对方家里一直嗽形象不好。于是拿来女方的手机号让我自己联系。</p>
<p>女方话不多，大部分时间都是我在问，顺便介绍下自己的情况。平时也找不到什么共同话题。对方并不讳言自己的懒——懒得读书，懒得学习。每天没话找话聊也蛮辛苦，后来约出来见了一次，就没下文了。奇葩的是刚坐下来就说自己离不开手机，一直低头玩，有一搭没一搭了聊了大半小时，对方手机没电，就走了。我自己一个人继续吃自助餐到再也塞不下为止。</p>
<p>半年后我再点开她朋友圈，发现一条状态都看不到，看来已经把我删了。</p>
<p>后来小阿姨介绍了个丽水的妹子，加好友聊了两次，又是查户口式一问一答的聊天，联系了两次后就再没下文了。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E6%B9%96%E5%BF%83%E5%A1%98%E5%9F%8E%E5%8C%97%E5%A4%A7%E9%85%92%E5%BA%97.jpg?imageMogr2/thumbnail/500x500" alt="湖心塘城北大酒店.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E9%87%91%E6%B3%A2%E8%AE%A2%E5%A9%9A7.jpg" alt="金波订婚7.jpg"></p>
<p>村里小伙伴订婚，酒席摆在湖心塘的城北大酒店。这几年回来得太少，都没注意到它什么时候开建。同桌的老太太们见了我都问这是谁。看来我这几年真是太瘦了，得加把劲增个肥。小伙伴的未婚妻是他高中同学，富家女。女方的父亲说对男方没什么要求，只要自己女儿喜欢就够了。但是订婚必须做做样子，男方送过去68万当面收下，私下里会还回去，就只是图个面子。小伙伴东借西借，又找银行工作的亲戚贷了一部分，总算凑齐了钱。</p>
<p>小伙伴的母亲也蛮热心的，早几年就一直嚷嚷着要给我介绍和小伙伴未婚妻同村的一个妹子。据说也在杭州工作，是动车的乘务员。在家挺勤快，为人朴实，不追求化妆打扮，老实人，适合居家过日子。说这番话的是小伙伴的外婆，和这位传说中的妹子是邻居。外婆老是感慨谁要是娶了这个妹子，就是捡了块宝。</p>
<p>都快把妹子夸到天上去了，我很不以为然。貌似我也被夸得形象非常高大，以至于妹子的母亲问小伙伴外婆：男方这么优秀，会不会看上我女儿。优秀吗？真要是属于婚恋市场上的优秀，那就不会打二十几年老光棍了。</p>
<p>以前我用「还早，同学们都没结婚」推了几次。不过今年这些挡箭牌们一个个都结婚，每次我往外地跑，我妈都知道。这下推不掉，只好拿了号码加了微信。一如既往一问一答，发消息倒是必回，只是经常过一两小时甚至第二天才回复。生活习惯、兴趣爱好之类问完之后就没共同语言，又开始没话找话之旅。对方也不咸不淡地回着。</p>
<p>小伙伴的外婆闲不住，看妹子回了家就跑过去，问男的（也就是我）有没有给她打电话——老人不懂微信、短信，只知道打电话。又和小伙伴的母亲（下面改称介绍人吧）商量要不要安排我们在这次订婚酒席上见个面……还好这馊主意没人同意，否则真尴尬得要死。</p>
<p>从介绍人那边传过来的消息，妹子每次回家，家人也盘问相亲的事。妹子都说还在联系。我估计她肯一次次回我这些无聊的短信，也是迫于家人的压力吧，只需隔几天回复一两条消息，就可以在家人盘问的时候淡定地说出这四个字「还在联系」，得一时清静，躲过各种唠叨。</p>
<p>我也是这么想和这么做的。这种奇葩的默契真让人无奈。</p>
<p>好景不长，很快热心的介绍人就给我扔了个重磅炸弹。她两头打探消息，发现我和妹子「还在联系」快两个月了，估摸着有戏，打算过年的时候让我上门去见见。我……这让我怎么拒绝。太忙没空？就五分钟的路，过去吃顿晚饭的时间总有吧。没感觉？这不还在联系吗怎么会没感觉。</p>
<p>思前想后，避免上门相亲的唯一方法就是我直接在杭州和妹子见个面，然后被拒绝。从妹子各种冷淡的反应、从不主动发消息可以看得出来对我没什么想法。两人的兴趣爱好相差太大，一直聊不起来。每次我辛辛苦苦想了个话题，三两句就聊不下去。</p>
<p>约了两次，妹子都恰好没空。要命的是都会阐述要做什么事，然后补上一句：下次吧。搞得我也分不清楚这是真没空还是假没空。管它呢继续约，就当应付家人也好。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%A7%91%E5%A7%91%E5%AE%B6.jpg?imageMogr2/thumbnail/500x500" alt="姑姑家.jpg"><br>前阵子姑姑问想找什么样的对象，我想了半天居然答不上来。外貌？我自己长得也不咋的，没资格提要求。学历？只能说明考试能力。性格？聊得来最重要。家世？自己家境也一般，不挑别人了。</p>
<p>姑姑让我打一段自我介绍，我写了两句，也想不到别的能说啥。她拿过手机又摁了半天，发了出去。然后给了我个号码，说是她们学校的小学教师，89年，天津人，在下沙读书，毕业后就留在了杭州。在手机上聊了两次，就互不联系了。介绍人倒是蛮热心，经常两边问怎么了，还跟我姑姑说女方抱怨我不主动，姑父就把我教育了一番。我想想不如见个面表现差劲一点把人吓退算了，结果对方回我周末没空。后来就再没联系过。</p>
<hr>
<p>顺手放些近期拍的照片</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E6%8A%98%E5%8F%A0%E6%9E%9C%E7%9B%98.jpg?imageMogr2/thumbnail/500x500" alt="折叠果盘.jpg"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%B1%95%E5%BC%80%E6%9E%9C%E7%9B%98.jpg" alt="展开果盘.jpg"></p>
<p>姑父的诊所里第一次见到这种折叠果盘。把玩的时候收到条蒋太公的微信，说在杭州等飞机。出了诊所匆匆赶了过去。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/22/2/33/%E8%92%8B%E5%A4%AA%E5%85%AC.jpg?imageMogr2/thumbnail/500x500" alt="蒋太公.jpg"><br>六年多没见，一块吃了顿饭，聊了聊近况，又带他在聊近找菜市场买某种羊肉，可惜跑了许多家都没找到。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%85%AC%E4%BA%A4%E4%B8%8A%E7%9A%84%E5%A6%B9%E5%AD%90.jpg?imageMogr2/thumbnail/500x500" alt="公交上的妹子.jpg"></p>
<p>有天在公交车上看到个妹子不错，正好这位置正对着她，偷偷拍了一张。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%B0%8F%E7%BE%8E%E5%A5%B3.jpg?imageMogr2/thumbnail/600x600" alt="小美女.jpg"></p>
<p>外甥女非要玩我外套上的扣子，解开又扣上，玩得不亦乐乎。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E6%97%A0%E8%BE%B9%E8%90%BD%E6%9C%A8.jpg" alt="无边落木.jpg"><br>一早出门，满地落叶。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%BF%83%E9%85%B8%E7%9A%84%E4%BA%8C%E8%83%A1.jpg?imageMogr2/thumbnail/500x500" alt="心酸的二胡.jpg"><br>玉泉校区对面街上的二胡，听了一会，放了几个硬币上去。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E8%AE%B8%E4%BB%99.jpg?imageMogr2/thumbnail/700x700" alt="许仙.jpg"><br>近来转战SegmentFault，问答氛围比知乎好多了，唯一差点的是人气。选了这张照片作为头像，网名叫<a href="http://segmentfault.com/u/xuxian" target="_blank" rel="external">许仙</a></p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E8%BF%9C%E6%9C%9B%E9%92%B1%E5%A1%98%E6%B1%9F.jpg?imageMogr2/thumbnail/700x700" alt="远望钱塘江.jpg"><br>去办了张市民卡，顺便在附近的印象城玩了玩。远处是钱塘江，对面是滨江。鸡爷的房子就买在那一块儿，一百多平，四百万。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/85%E5%BA%A6.jpg?imageMogr2/thumbnail/500x500" alt="85度.jpg"><br>冬天回家路过都会进来喝一杯暖暖身子。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/Exciting%EF%BC%81.jpg" alt="Exciting！.jpg"><br>六石居然也有不知道高到哪里去的华莱士，真是Exciting！</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E8%A2%AB%E7%83%AB%E7%9A%84%E8%80%81%E9%BC%A0.jpg?imageMogr2/thumbnail/500x500" alt="被烫的老鼠.jpg"><br>六石路边有家药酒店的老板在用开水烫笼子里的老鼠，可怜的小家伙。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%85%AD%E7%9F%B3%E5%B9%BF%E5%9C%BA.jpg?imageMogr2/thumbnail/700x700" alt="六石广场.jpg"><br>六石的综合广场，老人们在晒粮食，边上还有好几个孕妇在晒太阳，非常惬意。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%85%AD%E7%9F%B3%E7%BE%8E%E9%A3%9F%E8%A1%97.jpg?imageMogr2/thumbnail/700x700" alt="六石美食街.jpg"><br>六石居然办了美食街。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%85%AD%E7%9F%B3%E6%8C%96%E6%8E%98%E6%9C%BA.jpg?imageMogr2/thumbnail/700x700" alt="六石挖掘机.jpg"><br>挖掘机要从娃娃抓起。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%85%AD%E4%B8%AD.jpg?imageMogr2/thumbnail/700x700" alt="六中.jpg"><br>初中母校，亮明身份仍然不肯放我进去。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/IMG_20151025_134126_HDR.jpg?imageMogr2/thumbnail/500x500" alt="玉泉某教学楼"><br>去和老蔡吃了顿饭聊了聊，路上已经忘了这教学楼编号是多少。教四？教二？</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/IMG_20151025_145844_HDR.jpg?imageMogr2/thumbnail/700x700" alt="市民中心的广场"><br>市民中心的广场，视野开阔。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E6%9D%91%E9%87%8C%E6%9C%89%E4%B8%AA%E5%A4%A7%E5%8F%94%E4%B9%9F%E5%8F%AB%E8%BF%99%E5%90%8D.jpg?imageMogr2/thumbnail/700x700" alt="村里有个大叔也叫这名.jpg"><br>村里有个大叔也叫这个名字，和我同一辈。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E4%B8%9C%E4%B8%AD.jpg?imageMogr2/thumbnail/700x700" alt="东中.jpg"><br>高中母校，匆匆而过。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%85%AC%E4%BA%A4%E8%BD%A6%E4%B8%8A%E7%8E%A9%E8%80%8D.jpg?imageMogr2/thumbnail/500x500" alt="公交车上玩耍.jpg"><br>杭州的公交车，乘车不忘玩耍。一边的母亲照顾两个孩子，蛮辛苦。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%BE%88%E5%BF%AB%E8%A2%AB%E5%9F%8E%E7%AE%A1%E6%94%B6%E6%91%8A.jpg?imageMogr2/thumbnail/700x700" alt="很快被城管收摊.jpg"><br>路过买了碗炒粉干，城管过来收摊。小贩说再炒一份就走。城管老爷一怒，抢走了煤气罐。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E9%87%91%E6%80%9D%E7%BE%8E%E5%A9%9A%E7%A4%BC%E6%99%9A%E4%B8%8A%E8%87%AA%E5%B7%B1%E6%89%BE%E7%9A%84%E4%BD%8F%E5%AE%BF3.jpg?imageMogr2/thumbnail/700x700" alt="金思美婚礼晚上自己找的住宿3.jpg"><br>金华参加金思美的婚礼，晚上在火车站对面找了家七天连锁酒店住下，177元。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%B9%B3%E8%A1%8C%E7%94%B5%E6%A2%AF.jpg?imageMogr2/thumbnail/500x500" alt="步行电梯.jpg"><br>与地面平等的电梯，或者说是一条传送带。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/2/15/5/%E5%A4%A9%E9%9B%A8.jpg?imageMogr2/thumbnail/700x700" alt="天雨.jpg"><br>雨夜</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/22/2/33/Me.jpg?imageMogr2/thumbnail/500x500" alt="Me.jpg"><br>晚上剪了头发，自拍一张。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=5238208&auto=1&height=66"></iframe>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python 发新浪微博的脚本]]></title>
      <url>http://lovenight.github.io/2015/11/25/Python-%E5%8F%91%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E7%9A%84%E8%84%9A%E6%9C%AC/</url>
      <content type="html"><![CDATA[<p>在研究完<a href="http://lovenight.github.io/2015/11/23/Python-%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A/">《Python 模拟登录新浪微博的两种方法》</a>后继续捣鼓微博API，发现限制很多。比如查看好友列表只能返回30%，每小时微博、评论、转发数只能十五条。</p>
<p>前者可能是为了保护自家的微博APP，新浪微博APP的烂是出了名的，什么功能都想做，都想往里塞。以前经常用它刷微博，但是当它的无用功能越来越多之后，渐渐放弃了，顺便连微博也很少上——微博上到处都是转发了N遍的老段子，走了人人网衰落的老路。题外话略去不谈，下面放上目前的研究成果。</p>
<a id="more"></a>
<p>研究微博API纯是玩票性质，并没有刚性需求，所以一旦发现它限制多、意义不大，果断放手。在写这些代码过程中，最大的体会是在写单条微博类、用户类时，把JSON转化成类对象的方法，放在类中。以前爬豆瓣相册时，先把JSON数据挨个读取出来，再把每一项通过类的<code>__init__</code>方法传进去，属性一多就容易写错，代码也不美观。现在折腾来折腾去，总算找到一种优雅的实现方法。半路出家，一些计算机专业的常识，都只能零零星星的学习摸索。加油！</p>
<p>身份验证有两种方式，一是<code>App Key</code>，需要先模拟登录微博才可使用。二是<code>Access Token</code>，不需要登录。</p>
<p>前者登录后可在微博API「我的应用」中找到。后者在<a href="http://open.weibo.com/tools/console?uri=statuses/update&amp;httpmethod=POST&amp;key1=status&amp;value1=%E5%BE%AE%E5%8D%9A%E6%9D%A5%E8%87%AAAPI%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7" target="_blank" rel="external">API测试工具</a>中，登录后可看到自己的<code>Access Token</code>。</p>
<p>以下代码中默认使用<code>Access Token</code>方式，如果想使用<code>App Key</code>，需要手动调用<code>login()</code>方法并传入用户名和密码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: LoveNight</span></span><br><span class="line"><span class="comment"># @Date:   2015-11-23 17:56:34</span></span><br><span class="line"><span class="comment"># @Last Modified by:   LoveNight</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2015-11-25 13:23:07</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> configparser</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeiboUtil</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""新浪微博脚本</span><br><span class="line"></span><br><span class="line">    需要把App Key和Access Token写入同目录下的config.ini。格式如下：</span><br><span class="line">    [Account]</span><br><span class="line">    appKey = XXXXXXXXXXX</span><br><span class="line">    accessToken = XXXXXXXXXXXXXXX</span><br><span class="line">    cookie = 没有可以不填</span><br><span class="line"></span><br><span class="line">    其中：</span><br><span class="line">    app_key：登录后在「我的应用」里可以找到</span><br><span class="line">    Access Token 登录后访问：http://open.weibo.com/tools/console?uri=statuses/update&amp;httpmethod=POST&amp;key1=status&amp;value1=%E5%BE%AE%E5%8D%9A%E6%9D%A5%E8%87%AAAPI%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7</span><br><span class="line">    """</span></span><br><span class="line">    configFile = <span class="string">"config.ini"</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"accept-encoding"</span>: <span class="string">"gzip, deflate, sdch"</span>,</span><br><span class="line">        <span class="string">"Upgrade-Insecure-Requests"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"user-agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.71 Safari/537.36"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    postData = &#123;</span><br><span class="line">        <span class="string">"entry"</span>: <span class="string">"sso"</span>,</span><br><span class="line">        <span class="string">"gateway"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"from"</span>: <span class="string">"null"</span>,</span><br><span class="line">        <span class="string">"savestate"</span>: <span class="string">"30"</span>,</span><br><span class="line">        <span class="string">"useticket"</span>: <span class="string">"0"</span>,</span><br><span class="line">        <span class="string">"pagerefer"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"vsnf"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"su"</span>: <span class="string">"base64编码后的用户名"</span>,</span><br><span class="line">        <span class="string">"service"</span>: <span class="string">"sso"</span>,</span><br><span class="line">        <span class="string">"sp"</span>: <span class="string">"密码明文"</span>,</span><br><span class="line">        <span class="string">"sr"</span>: <span class="string">"1440*900"</span>,</span><br><span class="line">        <span class="string">"encoding"</span>: <span class="string">"UTF-8"</span>,</span><br><span class="line">        <span class="string">"cdult"</span>: <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"domain"</span>: <span class="string">"sina.com.cn"</span>,</span><br><span class="line">        <span class="string">"prelt"</span>: <span class="string">"0"</span>,</span><br><span class="line">        <span class="string">"returntype"</span>: <span class="string">"TEXT"</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># GET 请求</span></span><br><span class="line">    loginURL = <span class="string">r'https://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.15)'</span></span><br><span class="line">    timeLineURL = <span class="string">r'https://api.weibo.com/2/statuses/friends_timeline.json?&amp;since_id=&#123;since_id&#125;&amp;max_id=&#123;max_id&#125;&amp;count=&#123;count&#125;&amp;page=&#123;page&#125;&amp;feature=&#123;feature&#125;'</span></span><br><span class="line">    friendsURL = <span class="string">r'https://api.weibo.com/2/friendships/friends.json?&amp;uid=&#123;uid&#125;&amp;count=&#123;count&#125;&amp;cursor=&#123;cursor&#125;&amp;trim_status=&#123;trim_status&#125;'</span></span><br><span class="line">    friendsIdsUrl = <span class="string">r'https://api.weibo.com/2/friendships/friends/ids.json?&amp;uid=&#123;uid&#125;&amp;count=&#123;count&#125;&amp;cursor=&#123;cursor&#125;'</span></span><br><span class="line">    currentUserUidUrl = <span class="string">r'https://api.weibo.com/2/account/get_uid.json?'</span></span><br><span class="line">    bilateralTimelineURL = <span class="string">r'https://api.weibo.com/2/statuses/bilateral_timeline.json?&amp;since_id=&#123;since_id&#125;&amp;max_id=&#123;max_id&#125;&amp;count=&#123;count&#125;&amp;page=&#123;page&#125;&amp;feature=&#123;feature&#125;'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># POST请求</span></span><br><span class="line">    updateURL = <span class="string">r'https://api.weibo.com/2/statuses/update.json'</span></span><br><span class="line">    uploadURL = <span class="string">r'https://upload.api.weibo.com/2/statuses/upload.json'</span></span><br><span class="line">    commentURL = <span class="string">r'https://api.weibo.com/2/comments/create.json'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, auth = <span class="string">"access_token"</span>)</span>:</span></span><br><span class="line">        config = configparser.ConfigParser()</span><br><span class="line">        config.read(os.path.join(sys.path[<span class="number">0</span>], WeiboUtil.configFile))</span><br><span class="line">        self.app_key = config.get(<span class="string">"Account"</span>, <span class="string">"appKey"</span>)</span><br><span class="line">        self.access_token = config.get(<span class="string">"Account"</span>, <span class="string">"accessToken"</span>)</span><br><span class="line">        self.cookie = config.get(<span class="string">"Account"</span>, <span class="string">"cookie"</span>)</span><br><span class="line">        self.auth = <span class="string">"&amp;access_token="</span> + self.access_token</span><br><span class="line">        self.timeline_since_id = <span class="number">0</span> <span class="comment"># 标识微博TimeLine读取到了哪一条</span></span><br><span class="line">        self.bilateral_timeline_since_id = <span class="number">0</span></span><br><span class="line">        self.session = requests.Session()</span><br><span class="line">        <span class="keyword">if</span> self.cookie:</span><br><span class="line">            WeiboUtil.headers[<span class="string">"cookie"</span>] = cookie</span><br><span class="line">        self.session.headers = WeiboUtil.headers</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self, username, password)</span>:</span></span><br><span class="line">        <span class="string">"""登录微博"""</span></span><br><span class="line">        self.auth = <span class="string">"&amp;source="</span> + self.app_key</span><br><span class="line">        self.username = username</span><br><span class="line">        self.password = password</span><br><span class="line">        self.username = base64.b64encode(</span><br><span class="line">            self.username.encode(<span class="string">'utf-8'</span>)).decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        WeiboUtil.postData[<span class="string">"su"</span>] = self.username</span><br><span class="line">        WeiboUtil.postData[<span class="string">"sp"</span>] = self.password</span><br><span class="line">        res = self.session.post(WeiboUtil.loginURL, data=WeiboUtil.postData)</span><br><span class="line">        jsonStr = res.content.decode(<span class="string">'gbk'</span>)</span><br><span class="line">        info = json.loads(jsonStr)</span><br><span class="line">        <span class="keyword">if</span> info[<span class="string">"retcode"</span>] == <span class="string">"0"</span>:</span><br><span class="line">            print(<span class="string">"登录成功"</span>)</span><br><span class="line">            <span class="comment"># 把cookies添加到headers中，必须写这一步，否则后面调用API失败</span></span><br><span class="line">            cookies = self.session.cookies.get_dict()</span><br><span class="line">            cookies = [key + <span class="string">"="</span> + value <span class="keyword">for</span> key, value <span class="keyword">in</span> cookies.items()]</span><br><span class="line">            cookies = <span class="string">"; "</span>.join(cookies)</span><br><span class="line">            self.session.headers[<span class="string">"cookie"</span>] = cookies</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"登录失败，原因： %s"</span> % info[<span class="string">"reason"</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 一般用不着</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_getCurrentUID</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""获取当前登录用户的UID</span><br><span class="line"></span><br><span class="line">        UID API：http://open.weibo.com/wiki/2/account/get_uid</span><br><span class="line">        """</span></span><br><span class="line">        url = WeiboUtil.currentUserUidUrl.format(access_token=self.access_token) + self.auth</span><br><span class="line">        jsonStr = self.session.get(url).text</span><br><span class="line">        data = self._getJson(url)</span><br><span class="line">        self.uid = data[<span class="string">"uid"</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_getJson</span><span class="params">(self, url, data=None, files = None, post=False)</span>:</span></span><br><span class="line">        <span class="string">"""发送HTTP请求并将返回的JSON字符串格式化"""</span></span><br><span class="line">        <span class="keyword">if</span> post:</span><br><span class="line">            jsonStr = self.session.post(url, data=data, files=files).text</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            jsonStr = self.session.get(url).text</span><br><span class="line">        <span class="keyword">return</span> json.loads(jsonStr)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(self, text)</span>:</span></span><br><span class="line">        <span class="string">"""发微博，pic为图片网址或本地绝对路径</span><br><span class="line"></span><br><span class="line">        update API: http://open.weibo.com/wiki/2/statuses/update</span><br><span class="line">        upload API: http://open.weibo.com/wiki/2/statuses/upload</span><br><span class="line">        source string        采用OAuth授权方式不需要此参数，其他授权方式为必填参数，数值为应用的AppKey。</span><br><span class="line">        access_token string  采用OAuth授权方式为必填参数，其他授权方式不需要此参数，OAuth授权后获得。</span><br><span class="line">        status string        必填。要发布的微博文本内容，必须做URLencode，内容不超过140个汉字。</span><br><span class="line">        visible int          微博的可见性，0：所有人能看，1：仅自己可见，2：密友可见，3：指定分组可见，默认为0。</span><br><span class="line">        list_id string       微博的保护投递指定分组ID，只有当visible参数为3时生效且必选。</span><br><span class="line">        lat float            纬度，有效范围：-90.0到+90.0，+表示北纬，默认为0.0。</span><br><span class="line">        long float           经度，有效范围：-180.0到+180.0，+表示东经，默认为0.0。</span><br><span class="line">        annotations string   元数据，主要是为了方便第三方应用记录一些适合于自己使用的信息，每条微博可以包含一个或者多个元数据，必须以json字串的形式提交，字串长度不超过512个字符，具体内容可以自定。</span><br><span class="line">        rip string           开发者上报的操作用户真实IP，形如：211.156.0.1。</span><br><span class="line"></span><br><span class="line">        upload API 多一个字段：pic binary  要上传的图片，仅支持JPEG、GIF、PNG格式，图片大小小于5M。</span><br><span class="line">        """</span></span><br><span class="line">        postData = &#123;</span><br><span class="line">            <span class="string">"access_token"</span>:self.access_token,</span><br><span class="line">            <span class="string">"status"</span>:text,</span><br><span class="line">        &#125;</span><br><span class="line">        url = WeiboUtil.updateURL</span><br><span class="line">        data = self._getJson(url, data=postData, post = <span class="keyword">True</span>)</span><br><span class="line">        status = Status()</span><br><span class="line">        status.fromDict(data)</span><br><span class="line">        <span class="keyword">return</span> status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">comment</span><span class="params">(self, text, weiboID, comment_ori=<span class="number">0</span>)</span>:</span></span><br><span class="line">        <span class="string">"""评论微博，每小时只能发十五条</span><br><span class="line"></span><br><span class="line">        comment API : http://open.weibo.com/wiki/2/comments/create</span><br><span class="line">        comment string   必填。评论内容，必须做URLencode，内容不超过140个汉字。</span><br><span class="line">        id int64         必填需要评论的微博ID。</span><br><span class="line">        comment_ori int  当评论转发微博时，是否评论给原微博，0：否、1：是，默认为0。</span><br><span class="line">        rip string       开发者上报的操作用户真实IP，形如：211.156.0.1。</span><br><span class="line">        """</span></span><br><span class="line">        postData = &#123;</span><br><span class="line">            <span class="string">"access_token"</span>:self.access_token,</span><br><span class="line">            <span class="string">"comment"</span>:text,</span><br><span class="line">            <span class="string">"id"</span>:weiboID</span><br><span class="line">        &#125;</span><br><span class="line">        data = self._getJson(WeiboUtil.commentURL, data=postData, post=<span class="keyword">True</span>)</span><br><span class="line">        print(data)</span><br><span class="line">        print(<span class="string">"="</span>*<span class="number">50</span>)</span><br><span class="line">        <span class="comment"># comment = Comment()</span></span><br><span class="line">        <span class="comment"># comment.fromDict(data)</span></span><br><span class="line">        <span class="comment"># return comment</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getTimeline</span><span class="params">(self, max_id=<span class="number">0</span>, count=<span class="number">100</span>, page=<span class="number">1</span>, feature=<span class="number">0</span>)</span>:</span></span><br><span class="line">        <span class="string">"""读取时间线上的微博</span><br><span class="line"></span><br><span class="line">        TimeLine API：http://open.weibo.com/wiki/2/statuses/friends_timeline</span><br><span class="line">        since_id 则返回ID比since_id大的微博（即比since_id时间晚的微博），默认为0。</span><br><span class="line">        max_id 则返回ID小于或等于max_id的微博，默认为0。</span><br><span class="line">        count 单页返回的记录条数，最大不超过100，默认为20。</span><br><span class="line">        page 返回结果的页码，默认为1。</span><br><span class="line">        feature 过滤类型ID，0：全部、1：原创、2：图片、3：视频、4：音乐，默认为0。</span><br><span class="line">        """</span></span><br><span class="line">        url = WeiboUtil.timeLineURL.format(app_key=self.app_key, since_id=self.timeline_since_id, max_id=max_id, count=count, page=page, feature=feature) + self.auth</span><br><span class="line">        <span class="comment"># print(url)</span></span><br><span class="line">        weiboInfo = self._getJson(url)</span><br><span class="line">        self.timeline_since_id = weiboInfo[<span class="string">"since_id"</span>]</span><br><span class="line">        max_id = weiboInfo[<span class="string">"max_id"</span>]</span><br><span class="line">        weiboPosts = weiboInfo[<span class="string">"statuses"</span>]</span><br><span class="line">        <span class="comment"># print(len(statuses))</span></span><br><span class="line">        statuses = []</span><br><span class="line">        <span class="keyword">for</span> post <span class="keyword">in</span> weiboPosts:</span><br><span class="line">            status = Status()</span><br><span class="line">            status.fromDict(post)</span><br><span class="line">            statuses.append(status)</span><br><span class="line">        <span class="keyword">return</span> statuses</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getBilateralTimeline</span><span class="params">(self, max_id=<span class="number">0</span>, count=<span class="number">100</span>, page=<span class="number">1</span>, feature=<span class="number">0</span>)</span>:</span></span><br><span class="line">        <span class="string">"""获取互相关注好友的时间线</span><br><span class="line"></span><br><span class="line">        bilateral_timeline API: http://open.weibo.com/wiki/2/statuses/bilateral_timeline</span><br><span class="line">        since_id int64   若指定此参数，则返回ID比since_id大的微博（即比since_id时间晚的微博），默认为0。</span><br><span class="line">        max_id int64     若指定此参数，则返回ID小于或等于max_id的微博，默认为0。</span><br><span class="line">        count int        单页返回的记录条数，最大不超过100，默认为20。</span><br><span class="line">        page int         返回结果的页码，默认为1。</span><br><span class="line">        feature int      过滤类型ID，0：全部、1：原创、2：图片、3：视频、4：音乐，默认为0。</span><br><span class="line">        """</span></span><br><span class="line">        url = WeiboUtil.bilateralTimelineURL.format(app_key=self.app_key, since_id=self.bilateral_timeline_since_id, max_id=max_id, count=count, page=page, feature=feature) + self.auth</span><br><span class="line">        <span class="comment"># print(url)</span></span><br><span class="line">        data = self._getJson(url)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            weiboPosts = data[<span class="string">"statuses"</span>]</span><br><span class="line">            self.bilateral_timeline_since_id = data[<span class="string">"since_id"</span>]</span><br><span class="line">            statuses = []</span><br><span class="line">            <span class="keyword">for</span> post <span class="keyword">in</span> weiboPosts:</span><br><span class="line">                status = Status()</span><br><span class="line">                status.fromDict(post)</span><br><span class="line">                statuses.append(status)</span><br><span class="line">            <span class="keyword">return</span> statuses</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            msg = str(e)+<span class="string">"\n"</span>+str(data)</span><br><span class="line">            <span class="keyword">return</span> msg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printLimit</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = <span class="string">r'https://api.weibo.com/2/account/rate_limit_status.json?'</span>+self.auth</span><br><span class="line">        data = self._getJson(url)</span><br><span class="line">        commit_limit_remaining=data[<span class="string">"api_rate_limits"</span>][<span class="number">1</span>][<span class="string">"remaining_hits"</span>]</span><br><span class="line">        print(<span class="string">"剩余评论数"</span>, commit_limit_remaining)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Status</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""单条微博类"""</span></span><br><span class="line"></span><br><span class="line">    visible_type = &#123;</span><br><span class="line">        <span class="number">0</span>:<span class="string">"普通微博"</span>, <span class="number">1</span>:<span class="string">"私密微博"</span>, <span class="number">3</span>:<span class="string">"指定分组微博"</span>, <span class="number">4</span>:<span class="string">"密友微博"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fromJsonStr</span><span class="params">(self, jsonStr)</span>:</span></span><br><span class="line">        <span class="string">"""从字符串中提取信息"""</span></span><br><span class="line">        data = json.loads(jsonStr)</span><br><span class="line">        self.fromDict(data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fromDict</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.created_at = data[<span class="string">"created_at"</span>]</span><br><span class="line">        self.id = data[<span class="string">"id"</span>]</span><br><span class="line">        self.text = data[<span class="string">"text"</span>] <span class="comment"># 微博内容</span></span><br><span class="line">        self.source = data[<span class="string">"source"</span>]</span><br><span class="line">        self.favorited = data[<span class="string">"favorited"</span>]</span><br><span class="line">        self.truncated = data[<span class="string">"truncated"</span>]</span><br><span class="line">        userJson = data[<span class="string">"user"</span>]</span><br><span class="line">        self.user = User()</span><br><span class="line">        self.user.fromDict(userJson) <span class="comment"># 作者</span></span><br><span class="line">        self.reposts_count = data[<span class="string">"reposts_count"</span>] <span class="comment"># 转发数</span></span><br><span class="line">        self.comments_count = data[<span class="string">"comments_count"</span>]</span><br><span class="line">        self.attitudes_count = data[<span class="string">"attitudes_count"</span>] <span class="comment"># 表态数</span></span><br><span class="line">        self.visible = data[<span class="string">"visible"</span>][<span class="string">"type"</span>] <span class="comment"># 可见性</span></span><br><span class="line">        <span class="comment"># print(self.visible)</span></span><br><span class="line">        self.visible = Status.visible_type.get(self.visible)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""微博用户类</span><br><span class="line"></span><br><span class="line">    Weibo User API:http://open.weibo.com/wiki/%E5%B8%B8%E8%A7%81%E8%BF%94%E5%9B%9E%E5%AF%B9%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84#.E7.94.A8.E6.88.B7.EF.BC.88user.EF.BC.89</span><br><span class="line">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fromJsonStr</span><span class="params">(self, jsonStr)</span>:</span></span><br><span class="line">        <span class="string">"""从字符串中提取信息"""</span></span><br><span class="line">        data = json.loads(jsonStr)</span><br><span class="line">        self.fromDict(data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fromDict</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.uid = data[<span class="string">"id"</span>]</span><br><span class="line">        self.screen_name = data[<span class="string">"screen_name"</span>]</span><br><span class="line">        self.name = data[<span class="string">"name"</span>]</span><br><span class="line">        self.provinceID = data[<span class="string">"province"</span>]</span><br><span class="line">        self.cityID = data[<span class="string">"city"</span>]</span><br><span class="line">        self.location = data[<span class="string">"location"</span>]</span><br><span class="line">        self.description = data[<span class="string">"description"</span>]</span><br><span class="line">        self.blogURL = data[<span class="string">"url"</span>]</span><br><span class="line">        self.profile_image_url = data[<span class="string">"profile_image_url"</span>] <span class="comment"># 头像，50 * 50</span></span><br><span class="line">        self.avatar_large = data[<span class="string">"avatar_large"</span>] <span class="comment"># 头像，180 * 180</span></span><br><span class="line">        self.avatar_hd = data[<span class="string">"avatar_hd"</span>] <span class="comment"># 头像，原图</span></span><br><span class="line">        self.gender = data[<span class="string">"gender"</span>] <span class="comment"># 性别，m：男、f：女、n：未知</span></span><br><span class="line">        self.followers_count = data[<span class="string">"followers_count"</span>]</span><br><span class="line">        self.friends_count = data[<span class="string">"friends_count"</span>] <span class="comment"># 关注数</span></span><br><span class="line">        self.statuses_count = data[<span class="string">"statuses_count"</span>] <span class="comment"># 微博数</span></span><br><span class="line">        self.favourites_count = data[<span class="string">"favourites_count"</span>]</span><br><span class="line">        self.created_at = data[<span class="string">"created_at"</span>]</span><br><span class="line">        self.allow_all_act_msg = data[<span class="string">"allow_all_act_msg"</span>] <span class="comment"># 是否允许所有人给我发私信</span></span><br><span class="line">        self.allow_all_comment = data[<span class="string">"allow_all_comment"</span>] <span class="comment"># 是否允许所有人评论微博</span></span><br><span class="line">        self.verified = data[<span class="string">"verified"</span>] <span class="comment"># 是否大V</span></span><br><span class="line">        self.following = data[<span class="string">"following"</span>] <span class="comment"># 当前登录用户是否关注对方</span></span><br><span class="line">        self.follow_me = data[<span class="string">"follow_me"</span>] <span class="comment"># 是否关注当前登录用户</span></span><br><span class="line">        self.online_status = data[<span class="string">"online_status"</span>] <span class="comment"># 在线状态</span></span><br><span class="line">        self.bi_followers_count = data[<span class="string">"bi_followers_count"</span>] <span class="comment"># 互粉数</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Comment</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""单条评论的类"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fromJsonStr</span><span class="params">(self, jsonStr)</span>:</span></span><br><span class="line">        data = json.loads(jsonStr)</span><br><span class="line">        self.fromDict(data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fromDict</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.created_at = data[<span class="string">"created_at"</span>]</span><br><span class="line">        self.id = data[<span class="string">"id"</span>]</span><br><span class="line">        self.text = data[<span class="string">"text"</span>]</span><br><span class="line">        self.source = data[<span class="string">"source"</span>]</span><br><span class="line">        self.mid = data[<span class="string">"mid"</span>]</span><br><span class="line">        self.status = Status()</span><br><span class="line">        self.status.fromDict(data[<span class="string">"status"</span>])</span><br><span class="line">        self.user = User()</span><br><span class="line">        self.user.fromDict(data[<span class="string">"user"</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 使用前先根据WeiboUtil的说明文字配置好config.ini</span></span><br><span class="line"></span><br><span class="line">    u = WeiboUtil()</span><br><span class="line">    <span class="comment"># print(u.access_token)</span></span><br><span class="line">    <span class="comment"># u.printLimit()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 默认使用access_token验证，不需要用户名密码。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果access_token验证失败，改用app_key，此时需要用户名密码登陆</span></span><br><span class="line">    <span class="comment"># u.login("用户名", "密码")</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># # 读取Timeline上的一百条最新微博</span></span><br><span class="line">    <span class="comment"># statuses = u.getTimeline()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># # 读取互相关注好友的最新微博，最多一百条</span></span><br><span class="line">    <span class="comment"># statuses = u.getBilateralTimeline()</span></span><br><span class="line">    <span class="comment"># print(statuses)</span></span><br><span class="line">    <span class="comment"># for status in statuses:</span></span><br><span class="line">    <span class="comment">#     print(status.user.name) # 作者</span></span><br><span class="line">    <span class="comment">#     print(status.text) # 微博内容，更多属性请查看Status和User类</span></span><br><span class="line">    <span class="comment">#     print("=" * 50)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># # ---------------评论其中的第一条微博------------------------</span></span><br><span class="line">    <span class="comment"># weiboID = statuses[0].id</span></span><br><span class="line">    <span class="comment"># print(weiboID)</span></span><br><span class="line">    <span class="comment"># print("评论的微博：", statuses[0].text)</span></span><br><span class="line">    <span class="comment"># print("用户:", statuses[0].user.name)</span></span><br><span class="line">    <span class="comment"># for _ in range(100):</span></span><br><span class="line">    <span class="comment">#     comment = u.comment("小金微博机器人测试 " + str(_) + " " + str(datetime.now()), weiboID)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># # 发一条新的纯文本微博</span></span><br><span class="line">    <span class="comment"># text = "小金微博机器人测试"</span></span><br><span class="line">    <span class="comment"># status = u.update(text) # 返回单条微博对象</span></span><br><span class="line">    <span class="comment"># print(status)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 发一条带图片的微博，还没调试成功</span></span><br><span class="line">    <span class="comment"># 相关资料http://hbprotoss.github.io/posts/multipartform-datade-shi-xian.html</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python 模拟登录新浪微博的两种方法]]></title>
      <url>http://lovenight.github.io/2015/11/23/Python-%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A/</url>
      <content type="html"><![CDATA[<p>最近在学习使用<a href="http://sae.sina.com.cn/" target="_blank" rel="external">SAE</a>，打算往上面放一个微博抢沙发的脚本，需要登录状态才能使用<a href="http://open.weibo.com/wiki/%E5%BE%AE%E5%8D%9AAPI" target="_blank" rel="external">微博API</a>。解决方法有两个，一是浏览器登录，手动复制cookie，二是模拟登录。我选择后者。</p>
<p>网上搜到一份教程，<a href="http://www.jb51.net/article/46053.htm" target="_blank" rel="external">《python使用rsa加密算法模块模拟新浪微博登录》</a>，非常复杂。对照着做的过程中，自己又找出一个简单的登录方法。两种方法都登录成功，记录如下：</p>
<a id="more"></a>
<p>本文涉及的Python版本：3.4</p>
<h1 id="自己找出来的简单方法">自己找出来的简单方法</h1><p>登录页：<a href="http://login.sina.com.cn/signup/signin.php?entry=sso" target="_blank" rel="external">http://login.sina.com.cn/signup/signin.php?entry=sso</a></p>
<p>抓包可找到登录网址：</p>
<pre><code>http<span class="variable">s:</span>//login.sina.<span class="keyword">com</span>.<span class="keyword">cn</span>/sso/login.php?client=ssologin.js(v1.<span class="number">4.15</span>/)&amp;_=<span class="number">1448285708709</span>
</code></pre><p>最后一项是时间戳，经测试，可以直接删除。所以最终登录网址是：</p>
<pre><code>http<span class="variable">s:</span>//login.sina.<span class="keyword">com</span>.<span class="keyword">cn</span>/sso/login.php?client=ssologin.js(v1.<span class="number">4.15</span>)
</code></pre><p>POST提交的表单中，用户名需要base64编码。<br>完整登录代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(username, password)</span>:</span></span><br><span class="line">    username = base64.b64encode(username.encode(<span class="string">'utf-8'</span>)).decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    postData = &#123;</span><br><span class="line">        <span class="string">"entry"</span>: <span class="string">"sso"</span>,</span><br><span class="line">        <span class="string">"gateway"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"from"</span>: <span class="string">"null"</span>,</span><br><span class="line">        <span class="string">"savestate"</span>: <span class="string">"30"</span>,</span><br><span class="line">        <span class="string">"useticket"</span>: <span class="string">"0"</span>,</span><br><span class="line">        <span class="string">"pagerefer"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"vsnf"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"su"</span>: username,</span><br><span class="line">        <span class="string">"service"</span>: <span class="string">"sso"</span>,</span><br><span class="line">        <span class="string">"sp"</span>: password,</span><br><span class="line">        <span class="string">"sr"</span>: <span class="string">"1440*900"</span>,</span><br><span class="line">        <span class="string">"encoding"</span>: <span class="string">"UTF-8"</span>,</span><br><span class="line">        <span class="string">"cdult"</span>: <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"domain"</span>: <span class="string">"sina.com.cn"</span>,</span><br><span class="line">        <span class="string">"prelt"</span>: <span class="string">"0"</span>,</span><br><span class="line">        <span class="string">"returntype"</span>: <span class="string">"TEXT"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    loginURL = <span class="string">r'https://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.15)'</span></span><br><span class="line">    session = requests.Session()</span><br><span class="line">    res = session.post(loginURL, data = postData)</span><br><span class="line">    jsonStr = res.content.decode(<span class="string">'gbk'</span>)</span><br><span class="line">    info = json.loads(jsonStr)</span><br><span class="line">    <span class="keyword">if</span> info[<span class="string">"retcode"</span>] == <span class="string">"0"</span>:</span><br><span class="line">        print(<span class="string">"登录成功"</span>)</span><br><span class="line">        <span class="comment"># 把cookies添加到headers中，必须写这一步，否则后面调用API失败</span></span><br><span class="line">        cookies = session.cookies.get_dict()</span><br><span class="line">        cookies = [key + <span class="string">"="</span> + value <span class="keyword">for</span> key, value <span class="keyword">in</span> cookies.items()]</span><br><span class="line">        cookies = <span class="string">"; "</span>.join(cookies)</span><br><span class="line">        session.headers[<span class="string">"cookie"</span>] = cookies</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"登录失败，原因： %s"</span> % info[<span class="string">"reason"</span>])</span><br><span class="line">    <span class="keyword">return</span> session</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    session = login(<span class="string">'你的用户名'</span>, <span class="string">'你的密码'</span>)</span><br></pre></td></tr></table></figure></p>
<p>返回的session保存了登录状态，尽情做你做想做的事吧，配合<a href="http://open.weibo.com/wiki/%E5%BE%AE%E5%8D%9AAPI" target="_blank" rel="external">微博API</a>效果更佳。</p>
<hr>
<h1 id="网上搜索到的复杂方法">网上搜索到的复杂方法</h1><p>本节依赖的第三方库除了上面用过的<code>requests</code>，还有用于加密的<code>rsa</code>，需要另行安装。</p>
<h2 id="登录流程">登录流程</h2><ol>
<li>向如下网址提交GET请求，获取servertim、nonce、pubkey、rsakv，后两者是固定值。<br><a href="http://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;callback=sinaSSOController.preloginCallBack&amp;su=&amp;rsakt=mod&amp;client=ssologin.js(v1.4.18" target="_blank" rel="external">http://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;callback=sinaSSOController.preloginCallBack&amp;su=&amp;rsakt=mod&amp;client=ssologin.js(v1.4.18)</a>)</li>
<li>加密用户名与密码</li>
<li>向如下网址提交POST请求：<br><a href="http://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.18" target="_blank" rel="external">http://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.18)</a>)</li>
</ol>
<p>加密方式的破解找到一段方法，我没学过javascript，就没细看，直接照搬后面的加密方法。</p>
<blockquote>
<p>获得以及查看新浪微博登录js文件：<br>查看新浪通行证url（<a href="http://login.sina.com.cn/signup/signin.php" target="_blank" rel="external">http://login.sina.com.cn/signup/signin.php</a>）的源代码，其中可以找到该js的地址<a href="http://login.sina.com.cn/js/sso/ssologin.js" target="_blank" rel="external">http://login.sina.com.cn/js/sso/ssologin.js</a>，不过打开后里面的内容是加密过的，可以在网上找个在线解密站点解密，查看最终用户名和密码的加密方式。</p>
</blockquote>
<h2 id="分步实现">分步实现</h2><h3 id="获取servertim和nonce">获取servertim和nonce</h3><p>直接在浏览器中访问：<br><a href="http://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;callback=sinaSSOController.preloginCallBack&amp;su=&amp;rsakt=mod&amp;client=ssologin.js(v1.4.18" target="_blank" rel="external">http://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;callback=sinaSSOController.preloginCallBack&amp;su=&amp;rsakt=mod&amp;client=ssologin.js(v1.4.18)</a>)</p>
<p>未登录状态返回：</p>
<pre><code>sinaSSOController.preloginCallBack({
    "retcode": 0,
    "servertime": <span class="number">1448278360</span>,
    "pcid": "gz-8139fa<span class="number">256b150b7</span>a42e09dbdc0b4ed2224eb",
    "nonce": "RDY5SN",
    "pubkey": "EB<span class="number">2A38568661</span>887FA180BDDB5CABD5F21C7BFD59C090CB<span class="number">2D245A87</span>AC<span class="number">253062882729</span><span class="number">293E55063</span><span class="number">50508E7F9</span>AA3BB<span class="number">77F433323149</span><span class="number">0F915F6</span>D63C55FE<span class="number">2F08A49B35</span>3F444AD3993CACC02DB784ABBB<span class="number">8E42A9B1</span>BBFFFB38BE<span class="number">18D78E87A0</span>E<span class="number">41B9B8F73</span>A928EE0CCEE<span class="number">1F6739884</span>B9777E4FE9E88A1BBE495927AC<span class="number">4A799B31</span><span class="number">81D6442443</span>",
    "rsakv": "<span class="number">1330428213</span>",
    "exectime": 9
})
</code></pre><p>取出括号里的JSON字符串提取信息：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getLoginInfo</span><span class="params">()</span>:</span></span><br><span class="line">    preLoginURL = <span class="string">r'http://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;callback=sinaSSOController.preloginCallBack&amp;su=&amp;rsakt=mod&amp;client=ssologin.js(v1.4.18)'</span></span><br><span class="line">    html = requests.get(preLoginURL).text</span><br><span class="line">    jsonStr = re.findall(<span class="string">r'\((\&#123;.*?\&#125;)\)'</span>, html)[<span class="number">0</span>]</span><br><span class="line">    data = json.loads(jsonStr)</span><br><span class="line">    servertime = data[<span class="string">"servertime"</span>]</span><br><span class="line">    nonce = data[<span class="string">"nonce"</span>]</span><br><span class="line">    pubkey = data[<span class="string">"pubkey"</span>]</span><br><span class="line">    rsakv = data[<span class="string">"rsakv"</span>]</span><br><span class="line">    <span class="keyword">return</span> servertime, nonce, pubkey, rsakv</span><br></pre></td></tr></table></figure></p>
<h3 id="加密用户名与密码">加密用户名与密码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSu</span><span class="params">(username)</span>:</span></span><br><span class="line">    <span class="string">"""加密用户名，su为POST中的用户名字段"""</span></span><br><span class="line">    su = base64.b64encode(username.encode(<span class="string">'utf-8'</span>)).decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">return</span> su</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSp</span><span class="params">(password, servertime, nonce, pubkey)</span>:</span></span><br><span class="line">    <span class="string">"""加密密码，sp为POST中的用户名字段"""</span></span><br><span class="line">    pubkey = int(pubkey, <span class="number">16</span>)</span><br><span class="line">    <span class="comment"># 65537是js加密文件文件中的固定值，原是十六进制数字10001</span></span><br><span class="line">    key = rsa.PublicKey(pubkey, <span class="number">65537</span>)</span><br><span class="line">    <span class="comment"># 以下拼接明文从js加密文件中得到</span></span><br><span class="line">    message = str(servertime) + <span class="string">'\t'</span> + str(nonce) + <span class="string">'\n'</span> + str(password)</span><br><span class="line">    message = message.encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    sp = rsa.encrypt(message, key)</span><br><span class="line">    <span class="comment"># 把二进制数据的每个字节转换成相应的2位十六进制表示形式。</span></span><br><span class="line">    sp = binascii.b2a_hex(sp)</span><br><span class="line">    <span class="keyword">return</span> sp</span><br></pre></td></tr></table></figure>
<h3 id="提交POST请求">提交POST请求</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(su, sp, servertime, nonce, rsakv)</span>:</span></span><br><span class="line">    postData = &#123;</span><br><span class="line">        <span class="string">'entry'</span>: <span class="string">'weibo'</span>,</span><br><span class="line">        <span class="string">'gateway'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'from'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'savestate'</span>: <span class="string">'7'</span>,</span><br><span class="line">        <span class="string">'userticket'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">"pagerefer"</span>: <span class="string">"http://open.weibo.com/wiki/2/statuses/home_timeline"</span>,</span><br><span class="line">        <span class="string">"vsnf"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"su"</span>: su,</span><br><span class="line">        <span class="string">"service"</span>: <span class="string">"miniblog"</span>,</span><br><span class="line">        <span class="string">"servertime"</span>: servertime,</span><br><span class="line">        <span class="string">"nonce"</span>: nonce,</span><br><span class="line">        <span class="string">"pwencode"</span>: <span class="string">"rsa2"</span>,</span><br><span class="line">        <span class="string">"rsakv"</span>: rsakv,</span><br><span class="line">        <span class="string">"sp"</span>: sp,</span><br><span class="line">        <span class="string">"sr"</span>: <span class="string">"1440*900"</span>,</span><br><span class="line">        <span class="string">"encoding"</span>: <span class="string">"UTF-8"</span>,</span><br><span class="line">        <span class="string">"prelt"</span>: <span class="string">"126"</span>,</span><br><span class="line">        <span class="string">"url"</span>: <span class="string">"http://open.weibo.com/ajaxlogin.php?framelogin=1&amp;callback=parent.sinaSSOController.feedBackUrlCallBack"</span>,</span><br><span class="line">        <span class="string">"returntype"</span>: <span class="string">"META"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.71 Safari/537.36"</span>,</span><br><span class="line">        <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate"</span>,</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>,</span><br><span class="line">        <span class="string">"Host"</span>: <span class="string">"login.sina.com.cn"</span>,</span><br><span class="line">        <span class="string">"Origin"</span>: <span class="string">"http://open.weibo.com"</span>,</span><br><span class="line">        <span class="string">"Referer"</span>: <span class="string">"http://open.weibo.com/wiki/%E6%8E%88%E6%9D%83%E6%9C%BA%E5%88%B6%E8%AF%B4%E6%98%8E"</span>,</span><br><span class="line">        <span class="string">"Upgrade-Insecure-Requests"</span>: <span class="string">"1"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    loginURL = <span class="string">r'http://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.18)'</span></span><br><span class="line">    session = requests.Session()</span><br><span class="line">    session.headers = headers</span><br><span class="line">    res = session.post(loginURL, data=postData)</span><br><span class="line">    html = res.content.decode(<span class="string">'gbk'</span>)</span><br><span class="line">    info = re.findall(<span class="string">r"location\.replace\(\'(.*?)\'"</span>, html)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'retcode=0'</span> <span class="keyword">in</span> info:</span><br><span class="line">        print(<span class="string">"登录成功！"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"登录失败！"</span>)</span><br><span class="line">    <span class="keyword">return</span> session</span><br></pre></td></tr></table></figure>
<h2 id="完整代码">完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getLoginInfo</span><span class="params">()</span>:</span></span><br><span class="line">    preLoginURL = <span class="string">r'http://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;callback=sinaSSOController.preloginCallBack&amp;su=&amp;rsakt=mod&amp;client=ssologin.js(v1.4.18)'</span></span><br><span class="line">    html = requests.get(preLoginURL).text</span><br><span class="line">    jsonStr = re.findall(<span class="string">r'\((\&#123;.*?\&#125;)\)'</span>, html)[<span class="number">0</span>]</span><br><span class="line">    data = json.loads(jsonStr)</span><br><span class="line">    servertime = data[<span class="string">"servertime"</span>]</span><br><span class="line">    nonce = data[<span class="string">"nonce"</span>]</span><br><span class="line">    pubkey = data[<span class="string">"pubkey"</span>]</span><br><span class="line">    rsakv = data[<span class="string">"rsakv"</span>]</span><br><span class="line">    <span class="keyword">return</span> servertime, nonce, pubkey, rsakv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSu</span><span class="params">(username)</span>:</span></span><br><span class="line">    <span class="string">"""加密用户名，su为POST中的用户名字段"""</span></span><br><span class="line">    su = base64.b64encode(username.encode(<span class="string">'utf-8'</span>)).decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">return</span> su</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSp</span><span class="params">(password, servertime, nonce, pubkey)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""加密密码，sp为POST中的用户名字段"""</span></span><br><span class="line">    pubkey = int(pubkey, <span class="number">16</span>)</span><br><span class="line">    key = rsa.PublicKey(pubkey, <span class="number">65537</span>)</span><br><span class="line">    <span class="comment"># 以下拼接明文从js加密文件中得到</span></span><br><span class="line">    message = str(servertime) + <span class="string">'\t'</span> + str(nonce) + <span class="string">'\n'</span> + str(password)</span><br><span class="line">    message = message.encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    sp = rsa.encrypt(message, key)</span><br><span class="line">    <span class="comment"># 把二进制数据的每个字节转换成相应的2位十六进制表示形式。</span></span><br><span class="line">    sp = binascii.b2a_hex(sp)</span><br><span class="line">    <span class="keyword">return</span> sp</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(su, sp, servertime, nonce, rsakv)</span>:</span></span><br><span class="line">    postData = &#123;</span><br><span class="line">        <span class="string">'entry'</span>: <span class="string">'weibo'</span>,</span><br><span class="line">        <span class="string">'gateway'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'from'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'savestate'</span>: <span class="string">'7'</span>,</span><br><span class="line">        <span class="string">'userticket'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">"pagerefer"</span>: <span class="string">"http://open.weibo.com/wiki/2/statuses/home_timeline"</span>,</span><br><span class="line">        <span class="string">"vsnf"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"su"</span>: su,</span><br><span class="line">        <span class="string">"service"</span>: <span class="string">"miniblog"</span>,</span><br><span class="line">        <span class="string">"servertime"</span>: servertime,</span><br><span class="line">        <span class="string">"nonce"</span>: nonce,</span><br><span class="line">        <span class="string">"pwencode"</span>: <span class="string">"rsa2"</span>,</span><br><span class="line">        <span class="string">"rsakv"</span>: rsakv,</span><br><span class="line">        <span class="string">"sp"</span>: sp,</span><br><span class="line">        <span class="string">"sr"</span>: <span class="string">"1440*900"</span>,</span><br><span class="line">        <span class="string">"encoding"</span>: <span class="string">"UTF-8"</span>,</span><br><span class="line">        <span class="string">"prelt"</span>: <span class="string">"126"</span>,</span><br><span class="line">        <span class="string">"url"</span>: <span class="string">"http://open.weibo.com/ajaxlogin.php?framelogin=1&amp;callback=parent.sinaSSOController.feedBackUrlCallBack"</span>,</span><br><span class="line">        <span class="string">"returntype"</span>: <span class="string">"META"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    loginURL = <span class="string">r'http://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.18)'</span></span><br><span class="line">    session = requests.Session()</span><br><span class="line">    res = session.post(loginURL, data=postData)</span><br><span class="line">    html = res.content.decode(<span class="string">'gbk'</span>)</span><br><span class="line">    info = re.findall(<span class="string">r"location\.replace\(\'(.*?)\'"</span>, html)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'retcode=0'</span> <span class="keyword">in</span> info:</span><br><span class="line">        print(<span class="string">"登录成功！"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"登录失败！"</span>)</span><br><span class="line">    <span class="keyword">return</span> session</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    servertime, nonce, pubkey, rsakv = getLoginInfo()</span><br><span class="line">    su = getSu(<span class="string">"你的用户名"</span>)</span><br><span class="line">    sp = getSp(<span class="string">"你的密码"</span>, servertime, nonce, pubkey)</span><br><span class="line">    session = login(su, sp, servertime, nonce, rsakv)</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[趣图收集]]></title>
      <url>http://lovenight.github.io/2015/11/22/%E8%B6%A3%E5%9B%BE%E6%94%B6%E9%9B%86/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">收集一些有趣、有触动的图片，不定期更新</blockquote>

<a id="more"></a>
<h3 id="最伤人的话">最伤人的话</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/5/5/14/24/30/%E6%9C%80%E4%BC%A4%E4%BA%BA%E7%9A%84%E8%AF%9D.jpg?imageMogr2/thumbnail/500x500" alt="最伤人的话.jpg"></p>
<hr>
<h3 id="诸葛亮戴眼镜">诸葛亮戴眼镜</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/2/23/15/25/18/%E8%AF%B8%E8%91%9B%E4%BA%AE%E6%88%B4%E7%9C%BC%E9%95%9C.jpg" alt="诸葛亮戴眼镜.jpg"></p>
<hr>
<h3 id="单身狗的平安夜">单身狗的平安夜</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/25/14/27/35/%E5%8D%95%E8%BA%AB%E7%8B%97.jpg" alt="单身狗.jpg"></p>
<hr>
<h3 id="词汇对照">词汇对照</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/18/11/3/30/%E6%96%B0%E8%80%81%E8%AF%8D%E6%B1%87%E5%AF%B9%E7%85%A7%E8%A1%A8.jpg" alt="新老词汇对照表.jpg"></p>
<hr>
<h3 id="相亲思维导图">相亲思维导图</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/14/14/34/45/%E7%9B%B8%E4%BA%B2%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.jpg" alt="相亲思维导图.jpg"></p>
<hr>
<h3 id="一张图看懂Java的垃圾回收">一张图看懂Java的垃圾回收</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/11/19/16/58/%E4%B8%80%E5%9B%BE%E7%9C%8B%E6%87%82Java%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6.jpg" alt="一图看懂Java垃圾回收.jpg"></p>
<hr>
<h3 id="一张图看懂C++垃圾回收">一张图看懂C++垃圾回收</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/file/2015/12/14/14/36/41/%E4%B8%80%E5%9B%BE%E7%9C%8B%E6%87%82C%2B%2B%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6.GIF" alt="一图看懂C++垃圾回收.GIF"></p>
<hr>
<h3 id="当归">当归</h3><p>东莞市第三届广告大赛自由创作类金奖。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/11/13/42/40/%E5%BD%93%E5%BD%92.png" alt="当归.png"></p>
<hr>
<h3 id="常被知乎ers拿来调侃戴了绿帽的题主">常被知乎ers拿来调侃戴了绿帽的题主</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/22/11/49/8/Mario.jpg" alt="Mario.jpg"></p>
<hr>
<h3 id="一起睡觉，莫名的萌点">一起睡觉，莫名的萌点</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/22/14/23/38/%E4%B8%80%E8%B5%B7%E7%9D%A1%E8%A7%89.jpg" alt="一起睡觉.jpg"></p>
<hr>
<h3 id="把Java写成Python">把Java写成Python</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/22/21/56/44/Python%E5%8C%96Java.jpg" alt="Python化Java.jpg"></p>
<hr>
<h3 id="送给花式钓鱼的楼主">送给花式钓鱼的楼主</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/25/0/7/23/%E4%B8%80%E7%BD%91%E6%8D%9E%E4%BA%86%E5%A4%9A%E5%B0%91%E9%B1%BC.jpg" alt="一网捞了多少鱼.jpg"></p>
<hr>
<h3 id="蛤里发！">蛤里发！</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/4/12/10/52/%E8%9B%A4%E9%87%8C%E5%8F%91.jpg" alt="蛤里发.jpg"></p>
<hr>
<h3 id="中央已经决定了">中央已经决定了</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/5/20/13/52/%E4%B8%AD%E5%A4%AE%E5%B7%B2%E7%BB%8F%E5%86%B3%E5%AE%9A%E4%BA%86%EF%BC%8C%E4%BD%A0%E6%9D%A5%E5%BD%93%E6%80%BB%E4%B9%A6%E8%AE%B0.jpg?imageMogr2/thumbnail/500x500" alt="中央已经决定了，你来当总书记.jpg"></p>
<hr>
<h3 id="用车票搞个大新闻">用车票搞个大新闻</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/2/29/13/3/40/%E7%94%A8%E8%BD%A6%E7%A5%A8%E6%90%9E%E4%B8%AA%E5%A4%A7%E6%96%B0%E9%97%BB.jpeg" alt="用车票搞个大新闻.jpeg"></p>
<hr>
<h3 id="长者want_you">长者want you</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/17/15/34/38/I%20want%20you.jpg" alt="I want you.jpg"></p>
<hr>
<h3 id="这群鱼啊，Excited！">这群鱼啊，Excited！</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/1/13/13/47/48/%E9%95%BF%E8%80%85%E8%A7%82%E9%B1%BC.jpeg" alt="长者观鱼.jpeg"></p>
<hr>
<h3 id="掌握天气，关爱长者">掌握天气，关爱长者</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/1/15/18/25/4/%E6%8E%8C%E6%8F%A1%E5%A4%A9%E6%B0%94%EF%BC%8C%E5%85%B3%E7%88%B1%E9%95%BF%E8%80%85.jpg" alt="掌握天气，关爱长者.jpg"></p>
<hr>
<h3 id="蛤蟆屯">蛤蟆屯</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/17/15/35/7/%E8%9B%A4%E8%9F%86%E5%B1%AF.jpg" alt="蛤蟆屯.jpg"></p>
<hr>
<h3 id="两种膜法">两种膜法</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/4/26/17/13/10/%E4%B8%A4%E7%A7%8D%E8%86%9C%E6%B3%95.jpg" alt="两种膜法.jpg"></p>
<hr>
<h3 id="你神经病啊！">你神经病啊！</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/6/16/21/36/%E4%BD%A0%E7%A5%9E%E7%BB%8F%E7%97%85%E5%95%8A%EF%BC%81.jpg" alt="你神经病啊！.jpg"></p>
<hr>
<h3 id="网络监控">网络监控</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/12/6/16/21/36/%E7%BD%91%E7%BB%9C%E7%9B%91%E6%8E%A7.jpg" alt="网络监控.jpg"></p>
<hr>
<h3 id="可以，这很按照基本法">可以，这很按照基本法</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/9/28/15/17/15/%E5%8F%AF%E4%BB%A5%EF%BC%8C%E8%BF%99%E5%BE%88%E6%8C%89%E7%85%A7%E5%9F%BA%E6%9C%AC%E6%B3%95.jpg" alt="可以，这很按照基本法.jpg"></p>
<hr>
<h3 id="长者教你如何应付家中长辈的问题">长者教你如何应付家中长辈的问题</h3><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/9/28/15/17/15/%E9%95%BF%E8%80%85%E6%95%99%E4%BD%A0%E5%A6%82%E4%BD%95%E5%BA%94%E4%BB%98%E5%AE%B6%E4%B8%AD%E9%95%BF%E8%BE%88%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%81.jpg" alt="长者教你如何应付家中长辈的问题、.jpg"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[拖曳文件上传到七牛的Python脚本]]></title>
      <url>http://lovenight.github.io/2015/11/17/%E6%8B%96%E6%9B%B3%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B0%E4%B8%83%E7%89%9B%E7%9A%84%E8%84%9A%E6%9C%AC/</url>
      <content type="html"><![CDATA[<p>一直用<a href="http://www.qiniu.com/" target="_blank" rel="external">七牛云存储</a>当图床，每次写博客需要插入图片时，都是打开网页手动上传，然后复制网址到文章中，图片多的时候就非常不方便。七牛虽然提供了上传工具，但是并没有反馈上传后的文件网址。于是自己写了一个。</p>
<a id="more"></a>
<h2 id="用法介绍">用法介绍</h2><p>比如我要传这三个文件：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E8%84%9A%E6%9C%AC%E4%B8%8E%E5%BE%85%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6.png" alt="脚本与待上传文件.png"></p>
<p>选中三个文件，拖曳到脚本图标上。上传成功后弹出结果：</p>
<pre><code>![<span class="link_label">11.jpg</span>](<span class="link_url">http://7xo8t2.com1.z0.glb.clouddn.com/img/11.jpg</span>)
![<span class="link_label">22.jpg</span>](<span class="link_url">http://7xo8t2.com1.z0.glb.clouddn.com/img/22.jpg</span>)
[<span class="link_label">Python标准库中文版.pdf</span>](<span class="link_url">http://7xo8t2.com1.z0.glb.clouddn.com/file/Python%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E6%96%87%E7%89%88.pdf</span>)
</code></pre><p>生成了图片和文件链接对应的Markdown写法，可以直接把它们复制出来粘贴到文件中。</p>
<h2 id="脚本代码">脚本代码</h2><p>必须先安装七牛SDK Python版：</p>
<p>   pip install qiniu</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: LoveNight</span></span><br><span class="line"><span class="comment"># @Date:   2015-11-16 18:17:17</span></span><br><span class="line"><span class="comment"># @Last Modified by:   LoveNight</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2015-11-18 17:34:12</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> qiniu</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> msvcrt</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">__author__ = <span class="string">"loveNight"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">"""将图片拖曳到此脚本即可自动上传</span><br><span class="line"></span><br><span class="line">会在同文件目录下生成图片的markdown格式引用地址</span><br><span class="line">使用前先配置好下面的参数</span><br><span class="line">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------------手动配置区---------------</span></span><br><span class="line">accessKey = 自己填</span><br><span class="line">secretkey = 自己填</span><br><span class="line"><span class="comment"># 上传空间的域名，需要自己去后台获取</span></span><br><span class="line">bucket_url = &#123;</span><br><span class="line">    自己填: 自己填,</span><br><span class="line">&#125;</span><br><span class="line">bucket = 自己填  <span class="comment"># 上传空间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------------默认配置区-------------------------</span></span><br><span class="line">img_suffix = [<span class="string">"jpg"</span>, <span class="string">"jpeg"</span>, <span class="string">"png"</span>, <span class="string">"bmp"</span>, <span class="string">"gif"</span>]</span><br><span class="line">os.chdir(sys.path[<span class="number">0</span>])</span><br><span class="line">result_file = <span class="string">"上传结果.txt"</span>  <span class="comment"># 保存上传结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> os.path.exists(result_file):</span><br><span class="line">    os.remove(result_file)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Qiniu</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""七牛上传与下载的工具类</span><br><span class="line"></span><br><span class="line">    需要七牛的Python SDK</span><br><span class="line">    pip install qiniu</span><br><span class="line">    SDK详细用法见　http://developer.qiniu.com/docs/v6/sdk/python-sdk.html</span><br><span class="line">    """</span></span><br><span class="line">    SUCCESS_INFO = <span class="string">"上传成功！"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, accessKey, secretkey)</span>:</span></span><br><span class="line">        self.accessKey = accessKey</span><br><span class="line">        self.secretkey = secretkey</span><br><span class="line">        self._q = qiniu.Auth(self.accessKey, self.secretkey)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">upload_file</span><span class="params">(self, bucket, up_filename, file_path)</span>:</span></span><br><span class="line">        <span class="string">"""上传文件</span><br><span class="line"></span><br><span class="line">        Args:</span><br><span class="line">            bucket: 上传空间的名字</span><br><span class="line">            up_filename: 上传后的文件名</span><br><span class="line">            file_path:   本地文件的路径</span><br><span class="line">        Returns:</span><br><span class="line">            ret:     dict变量，保存了hash与key（上传后的文件名）</span><br><span class="line">            info:    ResponseInfo对象，保存了上传信息</span><br><span class="line">            url:     st, 上传后的网址</span><br><span class="line">        """</span></span><br><span class="line">        token = self._q.upload_token(bucket)</span><br><span class="line">        ret, info = qiniu.put_file(token, up_filename, file_path)</span><br><span class="line">        url = self.get_file_url(bucket, up_filename)</span><br><span class="line">        <span class="keyword">return</span> ret, info, url</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_file_url</span><span class="params">(self, bucket, up_filename)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bucket <span class="keyword">in</span> bucket_url.keys():</span><br><span class="line">            <span class="keyword">raise</span> AttributeError(<span class="string">"空间名不正确！"</span>)</span><br><span class="line">        url_prefix = bucket_url[bucket]</span><br><span class="line">        url = url_prefix + urllib.parse.quote(up_filename)</span><br><span class="line">        <span class="keyword">return</span> url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(filename, url)</span>:</span></span><br><span class="line">    line = <span class="string">"[%s](%s)\n"</span> % (filename, url)</span><br><span class="line">    <span class="comment"># 如果是图片则生成图片的markdown格式引用</span></span><br><span class="line">    <span class="keyword">if</span> os.path.splitext(filename)[<span class="number">1</span>][<span class="number">1</span>:] <span class="keyword">in</span> img_suffix:</span><br><span class="line">        line = <span class="string">"!"</span> + line</span><br><span class="line">    <span class="keyword">with</span> open(result_file, <span class="string">"a"</span>, encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(line)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getTimeStr</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""返回 2015/11/18/17/16/8/ 形式的字符串</span><br><span class="line"></span><br><span class="line">    如果上传同名文件且前缀相同，则后上传的文件会顶掉先前的</span><br><span class="line">    加时间作为前缀，即便于检索，又避免此问题</span><br><span class="line">    """</span></span><br><span class="line">    now = datetime.datetime.now()</span><br><span class="line">    tmp = tuple(now.timetuple())[:-<span class="number">3</span>]</span><br><span class="line">    tmp = map(str, tmp)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"/"</span>.join(tmp) + <span class="string">"/"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) == <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">"请将文件拖曳到本脚本！"</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line">    files = sys.argv[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">    q = Qiniu(accessKey, secretkey)</span><br><span class="line">    timeStr = getTimeStr()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(file):</span><br><span class="line">            print(<span class="string">"暂不支持目录上传！"</span>)</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(file):</span><br><span class="line">            suffix = os.path.splitext(file)[<span class="number">1</span>][<span class="number">1</span>:]</span><br><span class="line">            prefix = <span class="string">"img/"</span> <span class="keyword">if</span> suffix <span class="keyword">in</span> img_suffix <span class="keyword">else</span> <span class="string">"file/"</span></span><br><span class="line">            prefix += timeStr</span><br><span class="line">            name = os.path.split(file)[<span class="number">1</span>]</span><br><span class="line">            up_filename = prefix + name</span><br><span class="line">            ret, info, url = q.upload_file(bucket, up_filename, file)</span><br><span class="line">            print(<span class="string">"已上传： %s "</span> % name)</span><br><span class="line">            save(name, url)</span><br><span class="line">    subprocess.call(result_file, shell=<span class="keyword">True</span>)  <span class="comment"># 打开文件</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[NexT主题生成的index.html只显示一篇文章的解决办法]]></title>
      <url>http://lovenight.github.io/2015/11/17/NexT%E4%B8%BB%E9%A2%98%E7%94%9F%E6%88%90%E7%9A%84index-html%E5%8F%AA%E6%98%BE%E7%A4%BA%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>今天发现hexo博客public文件夹下的index.html只能显示最近的一篇文章。<code>hexo s</code>本地预览能正常显示，但是<code>hexo d</code>部署到服务器上，首页却只有最新的一篇文章。<br><a id="more"></a></p>
<p>昨天还好好的，又没有安装新的软件，不知道是怎么回事。换成Jacman主题一切正常，但是NexT的Mist Scheme或默认Scheme都存在这种情况，推测是主题的BUG。</p>
<p>已经有人向作者反映了问题，我自己摸索出来的解决办法：<a href="https://github.com/iissnan/hexo-theme-next/issues/482" target="_blank" rel="external">首页文件部署问题 #482</a></p>
<p>这个问题发生在<code>hexo clean</code>后第一次<code>hexo g</code>，此时生成的index.html只显示最近的一篇文章。再运行一次<code>hexo g</code>就能生成正常的index.html了。</p>
<p>期待作者早日解决此BUG。</p>
<p>补充：发完这篇文章<code>hexo g</code>的时候，竟然又正常了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python笔记之subprocess——子进程模块]]></title>
      <url>http://lovenight.github.io/2015/11/17/Python%E7%AC%94%E8%AE%B0%E4%B9%8Bsubprocess%E2%80%94%E2%80%94%E5%AD%90%E8%BF%9B%E7%A8%8B%E6%A8%A1%E5%9D%97/</url>
      <content type="html"><![CDATA[<p>subprocess最早在2.4版本引入，用来代替多个旧模块和函数:</p>
<blockquote>
<p>os.system<br>os.open<br>os.spawn<em><br>os.popen</em><br>popen2.<em><br>commands.</em></p>
</blockquote>
<a id="more"></a>
<h2 id="API说明">API说明</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行由args指定的命令，结束后返回return code</span></span><br><span class="line">subprocess.call([<span class="string">"ping"</span>, <span class="string">"www.baidu.com"</span>])</span><br><span class="line">subprocess.call(<span class="string">"exit 1"</span>, shell=<span class="keyword">True</span>)  <span class="comment"># 使用Shell解释整个字符串，或运行Shell内的命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回输出值。若返回码为非零，则抛出 CalledProcessError异常</span></span><br><span class="line">subprocess.check_output(<span class="string">"hexo -v"</span>, shell=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更灵活</span></span><br><span class="line">p = subprocess.Popen([<span class="string">"ping"</span>,<span class="string">"www.baidu.com"</span>], stdout=subprocess.PIPE)</span><br><span class="line"><span class="comment"># 也可以 p = subprocess.Popen("ping www.baidu.com", stdout=subprocess.PIPE, shell=True)</span></span><br><span class="line">p.wait()  <span class="comment"># 阻塞父进程，直到子进程完成</span></span><br><span class="line">p.stdout.read().decode(<span class="string">'gbk'</span>) <span class="comment"># 读取输出结果，注意Windows 终端输出是GBK编码。需要Popen指定了stdout</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用subprocess.PIPE将多个子进程的输入和输出连接在一起</span></span><br><span class="line">p1 = subprocess.Popen([<span class="string">"ls"</span>,<span class="string">"-l"</span>], stdout=subprocess.PIPE)</span><br><span class="line">p2 = subprocess.Popen([<span class="string">"wc"</span>], stdin=p1.stdout,stdout=subprocess.PIPE)</span><br><span class="line">out = p2.communicate() <span class="comment"># 阻塞父进程，直到子进程完成，此方法可以带参数，传给子进程</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用communicate()方法向子进程传输二进制数据</span></span><br><span class="line">p = subprocess.Popen([<span class="string">'adb shell'</span>], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line">output, err = p.communicate(<span class="string">b'adb help\nexit\n'</span>)</span><br><span class="line">print(output.decode(<span class="string">'utf-8'</span>))</span><br><span class="line">print(<span class="string">'Exit code:'</span>, p.returncode)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他方法</span></span><br><span class="line">p.terminate() <span class="comment"># 停止子程序</span></span><br><span class="line">p.kill() <span class="comment"># 杀死子进程</span></span><br></pre></td></tr></table></figure>
<h2 id="应用实例">应用实例</h2><h3 id="一些简单例子">一些简单例子</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 调用系统中cmd命令,显示命令执行的结果:</span></span><br><span class="line">x=subprocess.check_output([<span class="string">"echo"</span>, <span class="string">"Hello World!"</span>], shell=<span class="keyword">True</span>) <span class="comment"># echo是shell命令，必须指定参数为True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在python中显示文件内容:</span></span><br><span class="line">y=subprocess.check_output([<span class="string">"type"</span>, <span class="string">"app2.cpp"</span>], shell=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看ipconfig -all命令的输出,并将将输出保存到文件tmp.log中:</span></span><br><span class="line">handle = open(<span class="string">r'd:\tmp.log'</span>,<span class="string">'wb'</span>)</span><br><span class="line">subprocess.Popen([<span class="string">'ipconfig'</span>,<span class="string">'-all'</span>], stdout=handle)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看网络设置ipconfig -all,保存到变量中</span></span><br><span class="line">p = subprocess.Popen([<span class="string">'ipconfig'</span>,<span class="string">'-all'</span>], stdout=subprocess.PIPE,shell=<span class="keyword">True</span>)</span><br><span class="line">output, err = p.communicate()</span><br><span class="line"></span><br><span class="line"><span class="comment">#  频繁和子线程通信，不能使用communicate()</span></span><br><span class="line"><span class="comment"># 因为communicate通信一次之后即关闭了管道</span></span><br><span class="line">p = subprocess.Popen([<span class="string">"wc"</span>], stdin=subprocess.PIPE,stdout=subprocess.PIPE,shell=<span class="keyword">True</span>)</span><br><span class="line">p.stdin.write(<span class="string">'your command'</span>)</span><br><span class="line">p.stdin.flush()</span><br></pre></td></tr></table></figure>
<h3 id="连续输入和输出">连续输入和输出</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># test.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    line = sys.stdin.readline()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> line:<span class="keyword">break</span></span><br><span class="line">    sys.stdout.write(line)</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line"><span class="comment"># run.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> *</span><br><span class="line">proc = Popen(<span class="string">'./test.py'</span>,stdin=PIPE,stdout=PIPE,shell=<span class="keyword">True</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin: <span class="comment"># 这一步脚本会接收键盘输入</span></span><br><span class="line">    proc.stdin.write(line)</span><br><span class="line">    proc.stdin.flush()</span><br><span class="line">    output = proc.stdout.readline()</span><br><span class="line">    sys.stdout.write(output)</span><br></pre></td></tr></table></figure>
<h3 id="实时获取子进程输出">实时获取子进程输出</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    p = subprocess.Popen(<span class="string">"python  -u sub.py"</span>, stdout = subprocess.PIPE, stderr=subprocess.STDOUT)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        line = p.stdout.readline()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> line:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        print(line)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">p = subprocess.Popen(<span class="string">'ping 127.0.0.1 -n 10'</span>, stdout=subprocess.PIPE)</span><br><span class="line"><span class="keyword">while</span> p.poll() == <span class="keyword">None</span>: <span class="comment"># 检查子进程是否已经结束</span></span><br><span class="line">    print(p.stdout.readline())</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">print(p.stdout.read())</span><br><span class="line">print(<span class="string">'returen code:'</span>, p.returncode)</span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2><ul>
<li><a href="http://blog.chinaunix.net/uid-26000296-id-4461522.html" target="_blank" rel="external">python子进程模块subprocess详解与应用实例 之一</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python 3 安装第三方库报错Unable to find vcvarsall.bat]]></title>
      <url>http://lovenight.github.io/2015/11/16/Python-3-%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%97%B6%E5%87%BA%E7%8E%B0%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF/</url>
      <content type="html"><![CDATA[<p>命令行安装 numpy</p>
<pre><code>pip <span class="keyword">install</span> numpy
</code></pre><p>出现如下错误：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/Python/Python%203%20%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%97%B6%E5%87%BA%E7%8E%B0%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF/numpy%E5%AE%89%E8%A3%85%E5%87%BA%E9%94%99.jpg" alt=""></p>
<p>Python的部分库在安装时要临时编译，找不到编译器就报错。类似的库还有lxml等。根据提示装了Visual C++ 10.0 仍然报错。微软的网站上只找到 Python 2.7 用的VC编译器（我是Python 3.4）。经过一番搜索终于解决。</p>
<a id="more"></a>
<p>以numpy为例，步骤如下：</p>
<h2 id="安装wheel">安装wheel</h2><pre><code>pip <span class="keyword">install</span> wheel
</code></pre><h2 id="下载编译好的_-whl文件">下载编译好的 .whl文件</h2><p>在<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpy" target="_blank" rel="external">Python Extension Packages for Windows</a>下载对应的文件。<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/Python/Python%203%20%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%97%B6%E5%87%BA%E7%8E%B0%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF/whl%E4%B8%8B%E8%BD%BD.jpg" alt=""></p>
<p>英文提示是说vanilla版测试得较少，而且与本页的其他二进制包不兼容，那我们选择mkl版。cp应该是指CPython，后面的数字是Python版本。我下载了<code>numpy‑1.9.3+mkl‑cp34‑none‑win32.whl</code>版本，注意不要改文件名，否则后续步骤会报错。</p>
<h2 id="安装-whl文件">安装.whl文件</h2><p>命令行定位到.whl文件所在目录，安装命令为：</p>
<pre><code>pip <span class="keyword">install</span> 带后缀的完整文件名
</code></pre><p>这么长的文件名，手输容易出错，可以先在命令行输入<code>pip install</code>，然后右键单击CMD窗口标题栏，选<code>编辑</code> -&gt; <code>粘贴</code>。如图：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/Python/Python%203%20%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%97%B6%E5%87%BA%E7%8E%B0%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF/%E5%AE%89%E8%A3%85%E7%BB%93%E6%9E%9C.jpg" alt=""></p>
<h2 id="扩展阅读">扩展阅读</h2><p>以前一直用pip安装第三方库，现在出现个wheel，搞不清楚它们之间的关联。还有网上搜东西时经常看到的easy install是什么玩意？</p>
<p>找到一篇文章，可以理清这些工具之间的脉络：<a href="http://zengrong.net/post/2169.htm" target="_blank" rel="external">Python 包管理工具解惑</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python 3 多线程下载百度图片搜索结果]]></title>
      <url>http://lovenight.github.io/2015/11/15/Python-3-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E5%9B%BE%E7%89%87%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C/</url>
      <content type="html"><![CDATA[<p>今天来搜一搜「他」：<a href="http://www.baidu.com/s?wd=%E9%95%BF%E8%80%85%E8%9B%A4&amp;tn=87048150_dg&amp;ie=utf8" target="_blank" rel="external">百度图片搜索结果</a>。<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/Python/Python%203%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E5%9B%BE%E7%89%87%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E4%BB%96.png" alt="搜索结果"></p>
<h2 id="下载简单页面">下载简单页面</h2><p>查看网页源码，发现同一张图片有四种网址：</p>
<a id="more"></a>
<pre><code>"thumbURL": "http://img1.imgtn.bdimg.com/it/u=<span class="number">757023778</span>,<span class="number">2840825931</span>&amp;fm=21&amp;gp=0.jpg",
"middleURL": "http://img1.imgtn.bdimg.com/it/u=<span class="number">757023778</span>,<span class="number">2840825931</span>&amp;fm=21&amp;gp=0.jpg",
"hoverURL": "http://img1.imgtn.bdimg.com/it/u=<span class="number">757023778</span>,<span class="number">2840825931</span>&amp;fm=23&amp;gp=0.jpg",
"objURL": "http://imgsrc.baidu.com/forum/w=580/sign=b3bcc<span class="number">2f88a5494</span>ee<span class="number">87220f111</span>df<span class="number">4e0e1/78</span>fed309b3de<span class="number">9c82913</span>abac<span class="number">86a81800a18</span>d84344.jpg",
</code></pre><p>经测试，前三种都有反爬虫措施，用浏览器可以打开，但是刷新一次就403 Forbidden。用爬虫获取不到图片。</p>
<p>第四种objURL是指图片的源网址，获取该网址会出现三种情况：</p>
<ol>
<li>正常。继续下载</li>
<li>403 Forbidden。用continue跳过。</li>
<li>出现异常。用try except处理。</li>
</ol>
<p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">url = <span class="string">r'http://image.baidu.com/search/index?tn=baiduimage&amp;ipn=r&amp;ct=201326592&amp;cl=2&amp;lm=-1&amp;st=-1&amp;fm=detail&amp;fr=&amp;sf=1&amp;fmq=1447473655189_R&amp;pv=&amp;ic=0&amp;nc=1&amp;z=&amp;se=&amp;showtab=0&amp;fb=0&amp;width=&amp;height=&amp;face=0&amp;istype=2&amp;ie=utf-8&amp;word=%E9%95%BF%E8%80%85%E8%9B%A4'</span></span><br><span class="line">dirpath = <span class="string">r'F:\img'</span></span><br><span class="line"></span><br><span class="line">html = requests.get(url).text</span><br><span class="line">urls = re.findall(<span class="string">r'"objURL":"(.*?)"'</span>, html)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(dirpath):</span><br><span class="line">    os.mkdir(dirpath)</span><br><span class="line"></span><br><span class="line">index = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">    print(<span class="string">"Downloading:"</span>, url)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res = requests.get(url)</span><br><span class="line">        <span class="keyword">if</span> str(res.status_code)[<span class="number">0</span>] == <span class="string">"4"</span>:</span><br><span class="line">            print(<span class="string">"未下载成功："</span>, url)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">"未下载成功："</span>, url)</span><br><span class="line">    filename = os.path.join(dirpath, str(index) + <span class="string">".jpg"</span>)</span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(res.content)</span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"下载结束，一共 %s 张图片"</span> % index)</span><br></pre></td></tr></table></figure>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/Python/Python%203%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E5%9B%BE%E7%89%87%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E4%B8%8B%E8%BD%BD%E7%BB%93%E6%9E%9C1.png" alt="下载结果"></p>
<p>Exciting！</p>
<h2 id="加载更多图片">加载更多图片</h2><p>但是上面的代码还有不足，当我们在网页中下拉时，百度会继续加载更多图片。需要再完善一下代码。</p>
<p>打开Chrome，按F12，切换到Network标签，然后将网页向下拉。这时浏览器地址栏的网址并没有改变，而网页中的图片却一张张增加，说明网页在后台与服务器交互数据。警察蜀黍，就是这家伙：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/Python/Python%203%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E5%9B%BE%E7%89%87%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9CF12.png" alt="Chrome 抓包"></p>
<p>xhr全称XMLHttpRequest，详细介绍见百度：<a href="http://baike.baidu.com/link?url=59cVUdY8JuhiQ1NBfELSH93H_HFlTg9YoC5cqnjuyIvVHcyqx92fVNLTUWfvq8lesK5-h9HXgmbVuQseom0qu_" target="_blank" rel="external">XMLHTTPRequest_百度百科</a></p>
<p>点开看看：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/Python/Python%203%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E5%9B%BE%E7%89%87%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9CRequestURL.png" alt="Request URL"></p>
<p>这么长一串网址，没有头绪。下拉网页，再抓一个xhr，对比一下它们的Request URL，使用在线文字对比工具：<a href="http://home.putclub.com/tools/find/" target="_blank" rel="external">文本比较</a><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/Python/Python%203%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E5%9B%BE%E7%89%87%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E6%96%87%E6%9C%AC%E5%AF%B9%E6%AF%94%E7%BB%93%E6%9E%9C.png" alt="文本对比结果"></p>
<p>URL末尾有三处变化，最后一项看上去是时间戳，经过测试，直接把它删了也没事。</p>
<p>那么只需要研究<code>pn</code>和<code>gsm</code>值。继续下拉，到底的时候点<code>加载更多图片</code>，多抓几个对比一下URL的末尾部分：</p>
<pre><code>pn=<span class="number">120</span>&amp;rn=<span class="number">60</span>&amp;gsm=<span class="number">78</span>
pn=<span class="number">180</span>&amp;rn=<span class="number">60</span>&amp;gsm=b4
pn=<span class="number">240</span>&amp;rn=<span class="number">60</span>&amp;gsm=f0
pn=<span class="number">300</span>&amp;rn=<span class="number">60</span>&amp;gsm=<span class="number">12</span>c
pn=<span class="number">360</span>&amp;rn=<span class="number">60</span>&amp;gsm=<span class="number">168</span>
</code></pre><p><code>pn</code>是一个60为步长的等差数列。<code>gsm</code>看上去是16进制，转换成十进制，发现它就是<code>pn</code>值，试了也可以删掉。</p>
<p>经测试，<code>rn</code>是步长值，最大只能取60，填入大于60的数，仍然以60为步长。如果删了<code>rn</code>，则步长值变为30。<code>pn</code>是图片编号，从0开始。</p>
<p>现在已经删了时间戳和<code>gsm</code>两项了，能不能让网址再短一点？继续观察，注意到：</p>
<pre><code>&amp;se=&amp;tab=&amp;<span class="variable">width</span>=&amp;<span class="variable">height</span>=
</code></pre><p>这几项没指定值，肯定没用，把没值的都删了。</p>
<p>再看看这两项：</p>
<pre><code>queryWord=<span class="preprocessor">%</span>E<span class="number">9</span><span class="preprocessor">%</span><span class="number">95</span><span class="preprocessor">%</span>BF<span class="preprocessor">%</span>E<span class="number">8</span><span class="preprocessor">%</span><span class="number">80</span><span class="preprocessor">%</span><span class="number">85</span><span class="preprocessor">%</span>E<span class="number">8</span><span class="preprocessor">%</span><span class="number">9</span>B<span class="preprocessor">%</span>A<span class="number">4</span>
word=<span class="preprocessor">%</span>E<span class="number">9</span><span class="preprocessor">%</span><span class="number">95</span><span class="preprocessor">%</span>BF<span class="preprocessor">%</span>E<span class="number">8</span><span class="preprocessor">%</span><span class="number">80</span><span class="preprocessor">%</span><span class="number">85</span><span class="preprocessor">%</span>E<span class="number">8</span><span class="preprocessor">%</span><span class="number">9</span>B<span class="preprocessor">%</span>A<span class="number">4</span>
</code></pre><p>这就是我们本次搜索的关键词。网址中的中文会被编码成UTF-8，每个中文3个字节，每个字节前加上%号。编码和解码方法如下：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/Python/Python%203%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E5%9B%BE%E7%89%87%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E4%B8%AD%E6%96%87%E7%BC%96%E7%A0%81%E8%A7%A3%E7%A0%81.png" alt="中文编码解码"></p>
<p>那么，我们可以写出指定关键词需要请求的所有网址：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buildUrls</span><span class="params">(word)</span>:</span></span><br><span class="line">    word = urllib.parse.quote(word)</span><br><span class="line">    url = <span class="string">r"http://image.baidu.com/search/acjson?tn=resultjson_com&amp;ipn=rj&amp;ct=201326592&amp;fp=result&amp;queryWord=&#123;word&#125;&amp;cl=2&amp;lm=-1&amp;ie=utf-8&amp;oe=utf-8&amp;st=-1&amp;ic=0&amp;word=&#123;word&#125;&amp;face=0&amp;istype=2nc=1&amp;pn=&#123;pn&#125;&amp;rn=60"</span></span><br><span class="line">    urls = (url.format(word=word, pn=x) <span class="keyword">for</span> x <span class="keyword">in</span> itertools.count(start=<span class="number">0</span>, step=<span class="number">60</span>))</span><br><span class="line">    <span class="keyword">return</span> urls</span><br></pre></td></tr></table></figure></p>
<p>上面的代码中，itertools.count(start=0, step=60)表示一个从0开始，60为步长值的无限等差数列。<br>把这个数列的数字分别填入url作为pn值，就得到一个无限容量的url生成器，注意生成器必须用圆括号，如果写成中括号就成了列表，程序会在这一步无限执行下去。</p>
<p>下面开始解析每次获取的数据。我们点开看看，返回的是一串json数据。<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/Python/Python%203%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E5%9B%BE%E7%89%87%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9CResponse.png" alt="接口返回数据"></p>
<p>纳尼，这个objURL怎么不是HTTP开头的。试了几种方法都没成功，Google一下，找到这个：<a href="http://blog.csdn.net/hbuxiaoshe/article/details/44780653" target="_blank" rel="external">百度图片url解码</a></p>
<p>OK，既然明白了原理，我们写一个Python版的解密实现：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: loveNight</span></span><br><span class="line"><span class="comment"># @Date:   2015-11-14 21:11:11</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">"""解码百度图片搜索json中传递的url</span><br><span class="line">抓包可以获取加载更多图片时，服务器向网址传输的json。</span><br><span class="line">其中originURL是特殊的字符串</span><br><span class="line">解码前：</span><br><span class="line">ippr_z2C$qAzdH3FAzdH3Ffl_z&amp;e3Bftgwt42_z&amp;e3BvgAzdH3F4omlaAzdH3Faa8W3ZyEpymRmx3Y1p7bb&amp;mla</span><br><span class="line">解码后：</span><br><span class="line">http://s9.sinaimg.cn/mw690/001WjZyEty6R6xjYdtu88&amp;690</span><br><span class="line">使用下面两张映射表进行解码。</span><br><span class="line">"""</span></span><br><span class="line"></span><br><span class="line">str_table = &#123;</span><br><span class="line">    <span class="string">'_z2C$q'</span>: <span class="string">':'</span>,</span><br><span class="line">    <span class="string">'_z&amp;e3B'</span>: <span class="string">'.'</span>,</span><br><span class="line">    <span class="string">'AzdH3F'</span>: <span class="string">'/'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">char_table = &#123;</span><br><span class="line">    <span class="string">'w'</span>: <span class="string">'a'</span>,</span><br><span class="line">    <span class="string">'k'</span>: <span class="string">'b'</span>,</span><br><span class="line">    <span class="string">'v'</span>: <span class="string">'c'</span>,</span><br><span class="line">    <span class="string">'1'</span>: <span class="string">'d'</span>,</span><br><span class="line">    <span class="string">'j'</span>: <span class="string">'e'</span>,</span><br><span class="line">    <span class="string">'u'</span>: <span class="string">'f'</span>,</span><br><span class="line">    <span class="string">'2'</span>: <span class="string">'g'</span>,</span><br><span class="line">    <span class="string">'i'</span>: <span class="string">'h'</span>,</span><br><span class="line">    <span class="string">'t'</span>: <span class="string">'i'</span>,</span><br><span class="line">    <span class="string">'3'</span>: <span class="string">'j'</span>,</span><br><span class="line">    <span class="string">'h'</span>: <span class="string">'k'</span>,</span><br><span class="line">    <span class="string">'s'</span>: <span class="string">'l'</span>,</span><br><span class="line">    <span class="string">'4'</span>: <span class="string">'m'</span>,</span><br><span class="line">    <span class="string">'g'</span>: <span class="string">'n'</span>,</span><br><span class="line">    <span class="string">'5'</span>: <span class="string">'o'</span>,</span><br><span class="line">    <span class="string">'r'</span>: <span class="string">'p'</span>,</span><br><span class="line">    <span class="string">'q'</span>: <span class="string">'q'</span>,</span><br><span class="line">    <span class="string">'6'</span>: <span class="string">'r'</span>,</span><br><span class="line">    <span class="string">'f'</span>: <span class="string">'s'</span>,</span><br><span class="line">    <span class="string">'p'</span>: <span class="string">'t'</span>,</span><br><span class="line">    <span class="string">'7'</span>: <span class="string">'u'</span>,</span><br><span class="line">    <span class="string">'e'</span>: <span class="string">'v'</span>,</span><br><span class="line">    <span class="string">'o'</span>: <span class="string">'w'</span>,</span><br><span class="line">    <span class="string">'8'</span>: <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'d'</span>: <span class="string">'2'</span>,</span><br><span class="line">    <span class="string">'n'</span>: <span class="string">'3'</span>,</span><br><span class="line">    <span class="string">'9'</span>: <span class="string">'4'</span>,</span><br><span class="line">    <span class="string">'c'</span>: <span class="string">'5'</span>,</span><br><span class="line">    <span class="string">'m'</span>: <span class="string">'6'</span>,</span><br><span class="line">    <span class="string">'0'</span>: <span class="string">'7'</span>,</span><br><span class="line">    <span class="string">'b'</span>: <span class="string">'8'</span>,</span><br><span class="line">    <span class="string">'l'</span>: <span class="string">'9'</span>,</span><br><span class="line">    <span class="string">'a'</span>: <span class="string">'0'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># str 的translate方法需要用单个字符的十进制unicode编码作为key</span></span><br><span class="line"><span class="comment"># value 中的数字会被当成十进制unicode编码转换成字符</span></span><br><span class="line"><span class="comment"># 也可以直接用字符串作为value</span></span><br><span class="line">char_table = &#123;ord(key): ord(value) <span class="keyword">for</span> key, value <span class="keyword">in</span> char_table.items()&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="comment"># 先替换字符串</span></span><br><span class="line">    <span class="keyword">for</span> key, value <span class="keyword">in</span> str_table.items():</span><br><span class="line">        url = url.replace(key, value)</span><br><span class="line">    <span class="comment"># 再替换剩下的字符</span></span><br><span class="line">    <span class="keyword">return</span> url.translate(char_table)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    url = <span class="string">r"ippr_z2C$qAzdH3FAzdH3Ffl_z&amp;e3Bftgwt42_z&amp;e3BvgAzdH3F4omlaAzdH3Faa8W3ZyEpymRmx3Y1p7bb&amp;mla"</span></span><br><span class="line">    print(decode(url))</span><br></pre></td></tr></table></figure></p>
<p>测试成功！</p>
<p>再从JSON字符串中找出所有的originURL：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">re_url = re.compile(<span class="string">r'"objURL":"(.*?)"'</span>)</span><br><span class="line">imgs = re_url.findall(html)</span><br></pre></td></tr></table></figure></p>
<p>格式化JSON推荐使用Chrome的<a href="https://chrome.google.com/webstore/detail/iahnhfdhidomcpggpaimmmahffihkfnj" target="_blank" rel="external">JSON handle插件</a><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/Python/Python%203%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E5%9B%BE%E7%89%87%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9CJSON%20Handle.png" alt="JSON hanlde插件效果"></p>
<h2 id="单线程下载脚本">单线程下载脚本</h2><p>整理一下流程：</p>
<ol>
<li>生成网址列表</li>
<li>发送HTTP请求获取json数据</li>
<li>解析数据得到网址</li>
<li>下载</li>
</ol>
<p>整合一下上面的代码，可以写出单线程的下载脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: loveNight</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str_table = &#123;</span><br><span class="line">    <span class="string">'_z2C$q'</span>: <span class="string">':'</span>,</span><br><span class="line">    <span class="string">'_z&amp;e3B'</span>: <span class="string">'.'</span>,</span><br><span class="line">    <span class="string">'AzdH3F'</span>: <span class="string">'/'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">char_table = &#123;</span><br><span class="line">    <span class="string">'w'</span>: <span class="string">'a'</span>,</span><br><span class="line">    <span class="string">'k'</span>: <span class="string">'b'</span>,</span><br><span class="line">    <span class="string">'v'</span>: <span class="string">'c'</span>,</span><br><span class="line">    <span class="string">'1'</span>: <span class="string">'d'</span>,</span><br><span class="line">    <span class="string">'j'</span>: <span class="string">'e'</span>,</span><br><span class="line">    <span class="string">'u'</span>: <span class="string">'f'</span>,</span><br><span class="line">    <span class="string">'2'</span>: <span class="string">'g'</span>,</span><br><span class="line">    <span class="string">'i'</span>: <span class="string">'h'</span>,</span><br><span class="line">    <span class="string">'t'</span>: <span class="string">'i'</span>,</span><br><span class="line">    <span class="string">'3'</span>: <span class="string">'j'</span>,</span><br><span class="line">    <span class="string">'h'</span>: <span class="string">'k'</span>,</span><br><span class="line">    <span class="string">'s'</span>: <span class="string">'l'</span>,</span><br><span class="line">    <span class="string">'4'</span>: <span class="string">'m'</span>,</span><br><span class="line">    <span class="string">'g'</span>: <span class="string">'n'</span>,</span><br><span class="line">    <span class="string">'5'</span>: <span class="string">'o'</span>,</span><br><span class="line">    <span class="string">'r'</span>: <span class="string">'p'</span>,</span><br><span class="line">    <span class="string">'q'</span>: <span class="string">'q'</span>,</span><br><span class="line">    <span class="string">'6'</span>: <span class="string">'r'</span>,</span><br><span class="line">    <span class="string">'f'</span>: <span class="string">'s'</span>,</span><br><span class="line">    <span class="string">'p'</span>: <span class="string">'t'</span>,</span><br><span class="line">    <span class="string">'7'</span>: <span class="string">'u'</span>,</span><br><span class="line">    <span class="string">'e'</span>: <span class="string">'v'</span>,</span><br><span class="line">    <span class="string">'o'</span>: <span class="string">'w'</span>,</span><br><span class="line">    <span class="string">'8'</span>: <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'d'</span>: <span class="string">'2'</span>,</span><br><span class="line">    <span class="string">'n'</span>: <span class="string">'3'</span>,</span><br><span class="line">    <span class="string">'9'</span>: <span class="string">'4'</span>,</span><br><span class="line">    <span class="string">'c'</span>: <span class="string">'5'</span>,</span><br><span class="line">    <span class="string">'m'</span>: <span class="string">'6'</span>,</span><br><span class="line">    <span class="string">'0'</span>: <span class="string">'7'</span>,</span><br><span class="line">    <span class="string">'b'</span>: <span class="string">'8'</span>,</span><br><span class="line">    <span class="string">'l'</span>: <span class="string">'9'</span>,</span><br><span class="line">    <span class="string">'a'</span>: <span class="string">'0'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># str 的translate方法需要用单个字符的十进制unicode编码作为key</span></span><br><span class="line"><span class="comment"># value 中的数字会被当成十进制unicode编码转换成字符</span></span><br><span class="line"><span class="comment"># 也可以直接用字符串作为value</span></span><br><span class="line">char_table = &#123;ord(key): ord(value) <span class="keyword">for</span> key, value <span class="keyword">in</span> char_table.items()&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解码图片URL</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="comment"># 先替换字符串</span></span><br><span class="line">    <span class="keyword">for</span> key, value <span class="keyword">in</span> str_table.items():</span><br><span class="line">        url = url.replace(key, value)</span><br><span class="line">    <span class="comment"># 再替换剩下的字符</span></span><br><span class="line">    <span class="keyword">return</span> url.translate(char_table)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成网址列表</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buildUrls</span><span class="params">(word)</span>:</span></span><br><span class="line">    word = urllib.parse.quote(word)</span><br><span class="line">    url = <span class="string">r"http://image.baidu.com/search/acjson?tn=resultjson_com&amp;ipn=rj&amp;ct=201326592&amp;fp=result&amp;queryWord=&#123;word&#125;&amp;cl=2&amp;lm=-1&amp;ie=utf-8&amp;oe=utf-8&amp;st=-1&amp;ic=0&amp;word=&#123;word&#125;&amp;face=0&amp;istype=2nc=1&amp;pn=&#123;pn&#125;&amp;rn=60"</span></span><br><span class="line">    urls = (url.format(word=word, pn=x) <span class="keyword">for</span> x <span class="keyword">in</span> itertools.count(start=<span class="number">0</span>, step=<span class="number">60</span>))</span><br><span class="line">    <span class="keyword">return</span> urls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析JSON获取图片URL</span></span><br><span class="line">re_url = re.compile(<span class="string">r'"objURL":"(.*?)"'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resolveImgUrl</span><span class="params">(html)</span>:</span></span><br><span class="line">    imgUrls = [decode(x) <span class="keyword">for</span> x <span class="keyword">in</span> re_url.findall(html)]</span><br><span class="line">    <span class="keyword">return</span> imgUrls</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downImg</span><span class="params">(imgUrl, dirpath, imgName)</span>:</span></span><br><span class="line">    filename = os.path.join(dirpath, imgName)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res = requests.get(imgUrl, timeout=<span class="number">15</span>)</span><br><span class="line">        <span class="keyword">if</span> str(res.status_code)[<span class="number">0</span>] == <span class="string">"4"</span>:</span><br><span class="line">            print(str(res.status_code), <span class="string">":"</span> , imgUrl)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">"抛出异常："</span>, imgUrl)</span><br><span class="line">        print(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(res.content)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mkDir</span><span class="params">(dirName)</span>:</span></span><br><span class="line">    dirpath = os.path.join(sys.path[<span class="number">0</span>], dirName)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dirpath):</span><br><span class="line">        os.mkdir(dirpath)</span><br><span class="line">    <span class="keyword">return</span> dirpath</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">"欢迎使用百度图片下载脚本！\n目前仅支持单个关键词。"</span>)</span><br><span class="line">    print(<span class="string">"下载结果保存在脚本目录下的results文件夹中。"</span>)</span><br><span class="line">    print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">    word = input(<span class="string">"请输入你要下载的图片关键词：\n"</span>)</span><br><span class="line"></span><br><span class="line">    dirpath = mkDir(<span class="string">"results"</span>)</span><br><span class="line"></span><br><span class="line">    urls = buildUrls(word)</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        print(<span class="string">"正在请求："</span>, url)</span><br><span class="line">        html = requests.get(url, timeout=<span class="number">10</span>).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        imgUrls = resolveImgUrl(html)</span><br><span class="line">        <span class="keyword">if</span> len(imgUrls) == <span class="number">0</span>:  <span class="comment"># 没有图片则结束</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> imgUrls:</span><br><span class="line">            <span class="keyword">if</span> downImg(url, dirpath, str(index) + <span class="string">".jpg"</span>):</span><br><span class="line">                index += <span class="number">1</span></span><br><span class="line">                print(<span class="string">"已下载 %s 张"</span> % index)</span><br></pre></td></tr></table></figure></p>
<p>执行脚本：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/Python/Python%203%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E5%9B%BE%E7%89%87%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E5%8D%95%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%BB%93%E6%9E%9C.png" alt="单线程下载结果"></p>
<p>查看同目录下的results文件夹，又看到了亲切的「他」。</p>
<h2 id="多线程下载脚本">多线程下载脚本</h2><p>上面的代码仍然有改进空间：</p>
<ol>
<li>从JSON数据看，该关键词相关的图片有一千多张，单线程下载太慢了，时间都花在网络和硬盘IO上。加上多线程可以大大提升效率。</li>
<li>既然1中已经获取到图片总数，那么网址的无限容量生成器可以改成list，方便添加多线程。</li>
</ol>
<p>多线程一直没学好，想不到更优雅的写法，大家将就看一下吧，欢迎提出改进建议。</p>
<p>百度图片下载脚本之多线程版：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: loveNight</span></span><br><span class="line"><span class="comment"># @Date:   2015-10-28 19:59:24</span></span><br><span class="line"><span class="comment"># @Last Modified by:   loveNight</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2015-11-15 19:24:57</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime <span class="keyword">as</span> dt</span><br><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Queue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaiduImgDownloader</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""百度图片下载工具，目前只支持单个关键词"""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解码网址用的映射表</span></span><br><span class="line">    str_table = &#123;</span><br><span class="line">        <span class="string">'_z2C$q'</span>: <span class="string">':'</span>,</span><br><span class="line">        <span class="string">'_z&amp;e3B'</span>: <span class="string">'.'</span>,</span><br><span class="line">        <span class="string">'AzdH3F'</span>: <span class="string">'/'</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    char_table = &#123;</span><br><span class="line">        <span class="string">'w'</span>: <span class="string">'a'</span>,</span><br><span class="line">        <span class="string">'k'</span>: <span class="string">'b'</span>,</span><br><span class="line">        <span class="string">'v'</span>: <span class="string">'c'</span>,</span><br><span class="line">        <span class="string">'1'</span>: <span class="string">'d'</span>,</span><br><span class="line">        <span class="string">'j'</span>: <span class="string">'e'</span>,</span><br><span class="line">        <span class="string">'u'</span>: <span class="string">'f'</span>,</span><br><span class="line">        <span class="string">'2'</span>: <span class="string">'g'</span>,</span><br><span class="line">        <span class="string">'i'</span>: <span class="string">'h'</span>,</span><br><span class="line">        <span class="string">'t'</span>: <span class="string">'i'</span>,</span><br><span class="line">        <span class="string">'3'</span>: <span class="string">'j'</span>,</span><br><span class="line">        <span class="string">'h'</span>: <span class="string">'k'</span>,</span><br><span class="line">        <span class="string">'s'</span>: <span class="string">'l'</span>,</span><br><span class="line">        <span class="string">'4'</span>: <span class="string">'m'</span>,</span><br><span class="line">        <span class="string">'g'</span>: <span class="string">'n'</span>,</span><br><span class="line">        <span class="string">'5'</span>: <span class="string">'o'</span>,</span><br><span class="line">        <span class="string">'r'</span>: <span class="string">'p'</span>,</span><br><span class="line">        <span class="string">'q'</span>: <span class="string">'q'</span>,</span><br><span class="line">        <span class="string">'6'</span>: <span class="string">'r'</span>,</span><br><span class="line">        <span class="string">'f'</span>: <span class="string">'s'</span>,</span><br><span class="line">        <span class="string">'p'</span>: <span class="string">'t'</span>,</span><br><span class="line">        <span class="string">'7'</span>: <span class="string">'u'</span>,</span><br><span class="line">        <span class="string">'e'</span>: <span class="string">'v'</span>,</span><br><span class="line">        <span class="string">'o'</span>: <span class="string">'w'</span>,</span><br><span class="line">        <span class="string">'8'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'d'</span>: <span class="string">'2'</span>,</span><br><span class="line">        <span class="string">'n'</span>: <span class="string">'3'</span>,</span><br><span class="line">        <span class="string">'9'</span>: <span class="string">'4'</span>,</span><br><span class="line">        <span class="string">'c'</span>: <span class="string">'5'</span>,</span><br><span class="line">        <span class="string">'m'</span>: <span class="string">'6'</span>,</span><br><span class="line">        <span class="string">'0'</span>: <span class="string">'7'</span>,</span><br><span class="line">        <span class="string">'b'</span>: <span class="string">'8'</span>,</span><br><span class="line">        <span class="string">'l'</span>: <span class="string">'9'</span>,</span><br><span class="line">        <span class="string">'a'</span>: <span class="string">'0'</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    re_objURL = re.compile(<span class="string">r'"objURL":"(.*?)".*?"type":"(.*?)"'</span>)</span><br><span class="line">    re_downNum = re.compile(<span class="string">r"已下载\s(\d+)\s张图片"</span>)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.71 Safari/537.36"</span>,</span><br><span class="line">        <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate, sdch"</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, word, dirpath=None, processNum=<span class="number">30</span>)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">" "</span> <span class="keyword">in</span> word:</span><br><span class="line">            <span class="keyword">raise</span> AttributeError(<span class="string">"本脚本仅支持单个关键字"</span>)</span><br><span class="line">        self.word = word</span><br><span class="line">        self.char_table = &#123;ord(key): ord(value)</span><br><span class="line">                           <span class="keyword">for</span> key, value <span class="keyword">in</span> BaiduImgDownloader.char_table.items()&#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> dirpath:</span><br><span class="line">            dirpath = os.path.join(sys.path[<span class="number">0</span>], <span class="string">'results'</span>)</span><br><span class="line">        self.dirpath = dirpath</span><br><span class="line">        self.jsonUrlFile = os.path.join(sys.path[<span class="number">0</span>], <span class="string">'jsonUrl.txt'</span>)</span><br><span class="line">        self.logFile = os.path.join(sys.path[<span class="number">0</span>], <span class="string">'logInfo.txt'</span>)</span><br><span class="line">        self.errorFile = os.path.join(sys.path[<span class="number">0</span>], <span class="string">'errorUrl.txt'</span>)</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(self.errorFile):</span><br><span class="line">            os.remove(self.errorFile)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(self.dirpath):</span><br><span class="line">            os.mkdir(self.dirpath)</span><br><span class="line">        self.pool = Pool(<span class="number">30</span>)</span><br><span class="line">        self.session = requests.Session()</span><br><span class="line">        self.session.headers = BaiduImgDownloader.headers</span><br><span class="line">        self.queue = Queue()</span><br><span class="line">        self.messageQueue = Queue()</span><br><span class="line">        self.index = <span class="number">0</span> <span class="comment"># 图片起始编号，牵涉到计数，不要更改</span></span><br><span class="line">        self.promptNum = <span class="number">10</span> <span class="comment"># 下载几张图片提示一次</span></span><br><span class="line">        self.lock = threading.Lock()</span><br><span class="line">        self.delay = <span class="number">1.5</span>  <span class="comment"># 网络请求太频繁会被封</span></span><br><span class="line">        self.QUIT = <span class="string">"QUIT"</span>  <span class="comment"># Queue中表示任务结束</span></span><br><span class="line">        self.printPrefix = <span class="string">"**"</span> <span class="comment"># 用于指定在控制台输出</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 控制台输出线程</span></span><br><span class="line">        t = threading.Thread(target=self.__log)</span><br><span class="line">        t.setDaemon(<span class="keyword">True</span>)</span><br><span class="line">        t.start()</span><br><span class="line">        self.messageQueue.put(self.printPrefix + <span class="string">"脚本开始执行"</span>)</span><br><span class="line">        start_time = dt.now()</span><br><span class="line">        urls = self.__buildUrls()</span><br><span class="line">        self.messageQueue.put(self.printPrefix + <span class="string">"已获取 %s 个Json请求网址"</span> % len(urls))</span><br><span class="line">        <span class="comment"># 解析出所有图片网址，该方法会阻塞直到任务完成</span></span><br><span class="line">        self.pool.map(self.__resolveImgUrl, urls)</span><br><span class="line">        <span class="keyword">while</span> self.queue.qsize():</span><br><span class="line">            imgs = self.queue.get()</span><br><span class="line">            self.pool.map_async(self.__downImg, imgs)</span><br><span class="line">        self.pool.close()</span><br><span class="line">        self.pool.join()</span><br><span class="line">        self.messageQueue.put(self.printPrefix + <span class="string">"下载完成！已下载 %s 张图片，总用时 %s"</span> %</span><br><span class="line">                              (self.index, dt.now() - start_time))</span><br><span class="line">        self.messageQueue.put(self.printPrefix + <span class="string">"请到 %s 查看结果！"</span> % self.dirpath)</span><br><span class="line">        self.messageQueue.put(self.printPrefix + <span class="string">"错误信息保存在 %s"</span> % self.errorFile)</span><br><span class="line">        self.messageQueue.put(self.QUIT)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__log</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""控制台输出，加锁以免被多线程打乱"""</span></span><br><span class="line">        <span class="keyword">with</span> open(self.logFile, <span class="string">"w"</span>, encoding = <span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">                message = self.messageQueue.get()</span><br><span class="line">                <span class="keyword">if</span> message == self.QUIT:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                message = str(dt.now()) + <span class="string">" "</span> + message</span><br><span class="line">                <span class="keyword">if</span> self.printPrefix  <span class="keyword">in</span> message:</span><br><span class="line">                    print(message)</span><br><span class="line">                <span class="keyword">elif</span> <span class="string">"已下载"</span> <span class="keyword">in</span> message:</span><br><span class="line">                    <span class="comment"># 下载N张图片提示一次</span></span><br><span class="line">                    downNum = self.re_downNum.findall(message)</span><br><span class="line">                    <span class="keyword">if</span> downNum <span class="keyword">and</span> int(downNum[<span class="number">0</span>]) % self.promptNum == <span class="number">0</span>:</span><br><span class="line">                        print(message)</span><br><span class="line">                f.write(message + <span class="string">'\n'</span>)</span><br><span class="line">                f.flush()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getIndex</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""获取文件编号"""</span></span><br><span class="line">        self.lock.acquire()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> self.index</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            self.index += <span class="number">1</span></span><br><span class="line">            self.lock.release()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">(self, url)</span>:</span></span><br><span class="line">        <span class="string">"""解码图片URL</span><br><span class="line">        解码前：</span><br><span class="line">        ippr_z2C$qAzdH3FAzdH3Ffl_z&amp;e3Bftgwt42_z&amp;e3BvgAzdH3F4omlaAzdH3Faa8W3ZyEpymRmx3Y1p7bb&amp;mla</span><br><span class="line">        解码后：</span><br><span class="line">        http://s9.sinaimg.cn/mw690/001WjZyEty6R6xjYdtu88&amp;690</span><br><span class="line">        """</span></span><br><span class="line">        <span class="comment"># 先替换字符串</span></span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> self.str_table.items():</span><br><span class="line">            url = url.replace(key, value)</span><br><span class="line">        <span class="comment"># 再替换剩下的字符</span></span><br><span class="line">        <span class="keyword">return</span> url.translate(self.char_table)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__buildUrls</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""json请求网址生成器"""</span></span><br><span class="line">        word = urllib.parse.quote(self.word)</span><br><span class="line">        url = <span class="string">r"http://image.baidu.com/search/acjson?tn=resultjson_com&amp;ipn=rj&amp;ct=201326592&amp;fp=result&amp;queryWord=&#123;word&#125;&amp;cl=2&amp;lm=-1&amp;ie=utf-8&amp;oe=utf-8&amp;st=-1&amp;ic=0&amp;word=&#123;word&#125;&amp;face=0&amp;istype=2nc=1&amp;pn=&#123;pn&#125;&amp;rn=60"</span></span><br><span class="line">        time.sleep(self.delay)</span><br><span class="line">        html = self.session.get(url.format(word=word, pn=<span class="number">0</span>), timeout = <span class="number">15</span>).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        results = re.findall(<span class="string">r'"displayNum":(\d+),'</span>, html)</span><br><span class="line">        maxNum = int(results[<span class="number">0</span>]) <span class="keyword">if</span> results <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">        urls = [url.format(word=word, pn=x)</span><br><span class="line">                <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>, maxNum + <span class="number">1</span>, <span class="number">60</span>)]</span><br><span class="line">        <span class="keyword">with</span> open(self.jsonUrlFile, <span class="string">"w"</span>, encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">                f.write(url + <span class="string">"\n"</span>)</span><br><span class="line">        <span class="keyword">return</span> urls</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__resolveImgUrl</span><span class="params">(self, url)</span>:</span></span><br><span class="line">        <span class="string">"""从指定网页中解析出图片URL"""</span></span><br><span class="line">        time.sleep(self.delay)</span><br><span class="line">        html = self.session.get(url, timeout = <span class="number">15</span>).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        datas = self.re_objURL.findall(html)</span><br><span class="line">        imgs = [Image(self.decode(x[<span class="number">0</span>]), x[<span class="number">1</span>]) <span class="keyword">for</span> x <span class="keyword">in</span> datas]</span><br><span class="line">        self.messageQueue.put(self.printPrefix + <span class="string">"已解析出 %s 个图片网址"</span> % len(imgs))</span><br><span class="line">        self.queue.put(imgs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__downImg</span><span class="params">(self, img)</span>:</span></span><br><span class="line">        <span class="string">"""下载单张图片，传入的是Image对象"""</span></span><br><span class="line">        imgUrl = img.url</span><br><span class="line">        <span class="comment"># self.messageQueue.put("线程 %s 正在下载 %s " %</span></span><br><span class="line">        <span class="comment">#          (threading.current_thread().name, imgUrl))</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            time.sleep(self.delay)</span><br><span class="line">            res = self.session.get(imgUrl, timeout = <span class="number">15</span>)</span><br><span class="line">            message = <span class="keyword">None</span></span><br><span class="line">            <span class="keyword">if</span> str(res.status_code)[<span class="number">0</span>] == <span class="string">"4"</span>:</span><br><span class="line">                message = <span class="string">"\n%s： %s"</span> % (res.status_code, imgUrl)</span><br><span class="line">            <span class="keyword">elif</span> <span class="string">"text/html"</span> <span class="keyword">in</span> res.headers[<span class="string">"Content-Type"</span>]:</span><br><span class="line">                message = <span class="string">"\n无法打开图片： %s"</span> % imgUrl</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            message = <span class="string">"\n抛出异常： %s\n%s"</span> % (imgUrl, str(e))</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            <span class="keyword">if</span> message:</span><br><span class="line">                self.messageQueue.put(message)</span><br><span class="line">                self.__saveError(message)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">        index = self.__getIndex()</span><br><span class="line">        <span class="comment"># index从0开始</span></span><br><span class="line">        self.messageQueue.put(<span class="string">"已下载 %s 张图片：%s"</span> % (index + <span class="number">1</span>, imgUrl))</span><br><span class="line">        filename = os.path.join(self.dirpath, str(index) + <span class="string">"."</span> + img.type)</span><br><span class="line">        <span class="keyword">with</span> open(filename, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(res.content)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__saveError</span><span class="params">(self, message)</span>:</span></span><br><span class="line">        self.lock.acquire()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">with</span> open(self.errorFile, <span class="string">"a"</span>, encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(message)</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            self.lock.release()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Image</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""图片类，保存图片信息"""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, url, type)</span>:</span></span><br><span class="line">        super(Image, self).__init__()</span><br><span class="line">        self.url = url</span><br><span class="line">        self.type = type</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">"欢迎使用百度图片下载脚本！\n目前仅支持单个关键词。"</span>)</span><br><span class="line">    print(<span class="string">"下载结果保存在脚本目录下的results文件夹中。"</span>)</span><br><span class="line">    print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">    word = input(<span class="string">"请输入你要下载的图片关键词：\n"</span>)</span><br><span class="line">    down = BaiduImgDownloader(word)</span><br><span class="line">    down.start()</span><br></pre></td></tr></table></figure></p>
<p>执行脚本：</p>
<pre><code>欢迎使用百度图片下载脚本！
目前仅支持单个关键词。
下载结果保存在脚本目录下的results文件夹中。
==================================================
请输入你要下载的图片关键词：
长者蛤
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">11.726878</span> **脚本开始执行
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">16.292022</span> **已获取 <span class="number">20</span> 个Json请求网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">17.885767</span> **已解析出 <span class="number">30</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">17.917020</span> **已解析出 <span class="number">60</span> 个图片网址
.....
.....中间省略
.....
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">33</span>:<span class="number">31.726739</span> 已下载 <span class="number">980</span> 张图片：http:<span class="comment">//bbs.nantaihu.com/bbs/UpImages2008/2010/8/3/U97946_201083171218512-2.jpg</span>
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">33</span>:<span class="number">32.695518</span> 已下载 <span class="number">990</span> 张图片：http:<span class="comment">//pf.u.51img1.com/f9/7f/huangbaoling0_180.gif?v=20120224161006</span>
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">33</span>:<span class="number">45.473957</span> 已下载 <span class="number">1000</span> 张图片：http:<span class="comment">//library.taiwanschoolnet.org/cyberfair2003/C0312970394/narrative.files/image018.jpg</span>
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">33</span>:<span class="number">50.749544</span> **下载完成！已下载 <span class="number">1000</span> 张图片，总用时 <span class="number">0</span>:<span class="number">08</span>:<span class="number">39.022666</span>
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">33</span>:<span class="number">50.765169</span> **请到 F:\PythonWorkspace\Learn\results 查看结果！
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">33</span>:<span class="number">50.858880</span> **错误信息保存在 F:\PythonWorkspace\Learn\errorUrl.txt
</code></pre><p>合租室友太多，平时网速很慢，经常连百度都打不开，要刷新多次。下午测试的时候可以2分钟下完，现在居然要近9分钟。</p>
<p><code>errorUrl.txt</code>的内容</p>
<pre><code>无法打开图片： http:<span class="comment">//s3.t.itc.cn/mblog/pic/20136_20_14/f_b3a1be1796819229739.png</span>
<span class="number">403</span>： http:<span class="comment">//www.longhoo.net/gb/longhoo/culture/view/images/00024483.jpg</span>
无法打开图片： http:<span class="comment">//bhyjk.cn/images/IMG44zj10.jpg</span>
<span class="number">404</span>： http:<span class="comment">//ebook.indaa.com.cn/upload/baike/images/2960001-2970000/2968900/adee30ddd41190838c10291d.jpg</span>
抛出异常： http:<span class="comment">//www.jzxzj.com/images/xs.jpg</span>
<span class="function"><span class="title">HTTPConnectionPool</span><span class="params">(host=<span class="string">'www.jzxzj.com'</span>, port=<span class="number">80</span>)</span></span>: Max retries exceeded with url: /images/xs<span class="class">.jpg</span> (Caused by <span class="function"><span class="title">NewConnectionError</span><span class="params">(<span class="string">'&lt;requests.packages.urllib3.connection.HTTPConnection object at 0x0851FBB0&gt;: Failed to establish a new connection: [Errno 11002] getaddrinfo failed'</span>,)</span></span>)
抛出异常： http:<span class="comment">//static.acfun.mm111.net/h/image/20147/846b7553851b6edb2305c6b87f4aed71.jpg</span>
<span class="function"><span class="title">HTTPConnectionPool</span><span class="params">(host=<span class="string">'static.acfun.mm111.net'</span>, port=<span class="number">80</span>)</span></span>: Max retries exceeded with url: /h/image/<span class="number">20147</span>/<span class="number">846</span>b7553851b6edb2305c6b87f4aed71<span class="class">.jpg</span> (Caused by <span class="function"><span class="title">NewConnectionError</span><span class="params">(<span class="string">'&lt;requests.packages.urllib3.connection.HTTPConnection object at 0x0888B710&gt;: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'</span>,)</span></span>)
抛出异常： http:<span class="comment">//static.acfun.mm111.net/h/image/2015-0-4/23ebeaf5-5130-4072-b90e-48ce4d122ac8.jpg</span>
<span class="function"><span class="title">HTTPConnectionPool</span><span class="params">(host=<span class="string">'static.acfun.mm111.net'</span>, port=<span class="number">80</span>)</span></span>: Max retries exceeded with url: /h/image/<span class="number">2015</span>-<span class="number">0</span>-<span class="number">4</span>/<span class="number">23</span>ebeaf5-<span class="number">5130</span>-<span class="number">4072</span>-b90e-<span class="number">48</span>ce4d122ac8<span class="class">.jpg</span> (Caused by <span class="function"><span class="title">NewConnectionError</span><span class="params">(<span class="string">'&lt;requests.packages.urllib3.connection.HTTPConnection object at 0x0888F1F0&gt;: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'</span>,)</span></span>)
<span class="number">404</span>： http:<span class="comment">//www.zipooo.com/tupian/1/%CE%EF%C1%F7%BF%EC%B5%DD.gif</span>
无法打开图片： http:<span class="comment">//www.zhiyin.cn/hsbk/fakeimg/7939883.jpeg</span>
无法打开图片： http:<span class="comment">//www.zhiyin.cn/hsbk/fakeimg/21753396.jpeg</span>
.....
</code></pre><p><code>logInfo.txt</code>内容：</p>
<pre><code><span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">11.726878</span> **脚本开始执行
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">16.292022</span> **已获取 <span class="number">20</span> 个Json请求网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">17.885767</span> **已解析出 <span class="number">30</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">17.917020</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">17.948262</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">17.963895</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">17.995146</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.010769</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.057638</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.057638</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.073264</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.073264</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.088890</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.088890</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.104516</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.104516</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.104516</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.104516</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.245137</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.260764</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.260764</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">18.479555</span> **已解析出 <span class="number">60</span> 个图片网址
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">27.532965</span> 已下载 <span class="number">1</span> 张图片：http:<span class="comment">//imgsrc.baidu.com/baike/abpic/item/43e6c7335b379350ad4b5f92.jpg</span>
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">29.084964</span>
无法打开图片： http:<span class="comment">//s3.t.itc.cn/mblog/pic/20136_20_14/f_b3a1be1796819229739.png</span>
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">29.522473</span> 已下载 <span class="number">2</span> 张图片：http:<span class="comment">//p4.qhimg.com/dr/200_200_/t0196ad8cefbc7a2c7c.jpg</span>
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">29.822650</span> 已下载 <span class="number">3</span> 张图片：http:<span class="comment">//library.taiwanschoolnet.org/cyberfair2003/C0312970394/narrative.files/image016.jpg</span>
<span class="number">2015</span>-<span class="number">11</span>-<span class="number">15</span> <span class="number">19</span>:<span class="number">25</span>:<span class="number">29.938687</span> 已下载 <span class="number">4</span> 张图片：http:<span class="comment">//blog.ylib.com/public/Utilities/ImageReader.aspx?/0/6/06c67eaf-09db-40a8-a117-c577a6d05d08.jpg</span>
....
</code></pre><p>仍然可以改进的地方：</p>
<ol>
<li>如果要搜索多个关键词，buildUrls方法应该怎么改？</li>
<li>如果脚本中途意外结束（比如被熊孩子点了X），如何继续下载？</li>
<li>线程池中的线程数需要多次测试才能找到最优值。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python 3 json与正则式解析速度测试]]></title>
      <url>http://lovenight.github.io/2015/11/14/Python-3-json%E4%B8%8E%E6%AD%A3%E5%88%99%E5%BC%8F%E8%A7%A3%E6%9E%90%E9%80%9F%E5%BA%A6%E6%B5%8B%E8%AF%95/</url>
      <content type="html"><![CDATA[<p>晚上忽然想到个问题，解析Json数据，用正则式和json包，哪个更快？</p>
<p>写了段代码测试：</p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: loveNight</span></span><br><span class="line"><span class="comment"># @Date:   2015-10-28 19:59:24</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> timeit</span><br><span class="line"></span><br><span class="line">url = <span class="string">r"http://image.baidu.com/search/acjson?tn=resultjson_com&amp;ipn=rj&amp;ct=201326592&amp;is=&amp;fp=result&amp;queryWord=%E9%95%BF%E8%80%85%E8%9B%A4&amp;cl=2&amp;lm=-1&amp;ie=utf-8&amp;oe=utf-8&amp;adpicid=&amp;st=&amp;z=&amp;ic=&amp;word=%E9%95%BF%E8%80%85%E8%9B%A4&amp;s=&amp;se=&amp;tab=&amp;width=&amp;height=&amp;face=&amp;istype=&amp;qc=&amp;nc=1&amp;fr=&amp;pn=60&amp;rn=60&amp;gsm=3c&amp;1447527816768="</span></span><br><span class="line">re_url = re.compile(<span class="string">r'"objURL":"(.*?)".*?"fromPageTitle":"(.*?)"'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这串JSON编码有问题，必须手动指定utf-8</span></span><br><span class="line">html = requests.get(url).content.decode(<span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">byRe</span><span class="params">(html)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> re_url.findall(html)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">byJson</span><span class="params">(html)</span>:</span></span><br><span class="line">    data = json.loads(html)</span><br><span class="line">    <span class="keyword">return</span> [[x[<span class="string">"objURL"</span>], x[<span class="string">"fromPageTitle"</span>]] <span class="keyword">for</span> x <span class="keyword">in</span> data[<span class="string">"data"</span>] <span class="keyword">if</span> <span class="string">"objURL"</span> <span class="keyword">in</span> x.keys() <span class="keyword">and</span> <span class="string">"fromPageTitle"</span> <span class="keyword">in</span> x.keys()]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">timeJson = timeit.timeit(</span><br><span class="line">    <span class="string">"byJson(html)"</span>, <span class="string">"from __main__ import byJson; from __main__ import html"</span>, number=<span class="number">10000</span>)</span><br><span class="line">print(<span class="string">"Json解析一万次"</span>, timeJson, <span class="string">"秒"</span>)</span><br><span class="line"></span><br><span class="line">timeRe = timeit.timeit(</span><br><span class="line">    <span class="string">"byRe(html)"</span>, <span class="string">"from __main__ import byRe; from __main__ import html"</span>, number=<span class="number">10000</span>)</span><br><span class="line">print(<span class="string">"Re解析一万次"</span>, timeRe, <span class="string">"秒"</span>)</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<pre><code>Json解析一万次 <span class="number">14.212283402</span>610288 秒
Re解析一万次 <span class="number">9.27284899</span><span class="number">3345992</span> 秒
</code></pre><p>看来还是正则表达式更快。不了解这两者的实现，暂无法作更进一步的分析。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python Queue对象引起的RecursionError:maximum recursion depth exceeded]]></title>
      <url>http://lovenight.github.io/2015/11/12/Python%20Queue%E7%9A%84RecursionError%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>有网友想下载2014年4月至今的新加坡PSI数据：<a href="http://www.nea.gov.sg/anti-pollution-radiation-protection/air-pollution-control/psi/historical-psi-readings/year/2015/month/1/day/1" target="_blank" rel="external">Historical PSI Readings</a>，看这页面比较简单就练手写了个爬虫。</p>
<p>运行的时候出现<code>RecursionError</code>：</p>
<pre><code>Traceback (most recent call last):
  File <span class="string">"C:\Python 3.5\lib\multiprocessing\queues.py"</span>, line <span class="number">241</span>, <span class="keyword">in</span> _feed
    obj = ForkingPickler.<span class="function"><span class="title">dumps</span><span class="params">(obj)</span></span>
  File <span class="string">"C:\Python 3.5\lib\multiprocessing\reduction.py"</span>, line <span class="number">50</span>, <span class="keyword">in</span> dumps
    <span class="function"><span class="title">cls</span><span class="params">(buf, protocol)</span></span>.<span class="function"><span class="title">dump</span><span class="params">(obj)</span></span>
RecursionError: maximum recursion depth exceeded
</code></pre><a id="more"></a>
<p>递归深度超过限制？但是我代码中没用递归啊。翻了一下<code>queues.py</code>的源码，原来<code>multiprocessing.Queue</code>在首次调用<code>put()</code>方法时会启动一个名为<code>QueueFeederThread</code>的调度线程，用于分配数据。该线程传输数据前会先调用<code>ForkingPickler.dumps(obj)</code>将数据序列化成<code>bytes</code>，这个过程中抛出<code>RecursionError</code>。后续调用我翻了半小时也没看懂，暂时放一边吧。</p>
<p>Google一番得知Python有默认的递归深度限制</p>
<pre><code><span class="prompt">&gt;&gt;</span>&gt; import sys
<span class="prompt">&gt;&gt;</span>&gt; sys.getrecursionlimit()
<span class="number">1000</span>
</code></pre><p>把它设置得大一点，比如一百万：</p>
<pre><code>sys.<span class="function"><span class="title">setrecursionlimit</span><span class="params">(<span class="number">1000000</span>)</span></span>
</code></pre><p>再次执行脚本，果然不再报错。</p>
<p>附代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: loveNight</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Queue</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> BS</span><br><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line">sys.setrecursionlimit(<span class="number">1000000</span>) <span class="comment"># 递归深度，默认只有900</span></span><br><span class="line">os.chdir(sys.path[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">url_pattern = <span class="string">r"http://www.nea.gov.sg/anti-pollution-radiation-protection/air-pollution-control/psi/historical-psi-readings/year/&#123;0&#125;/month/&#123;1&#125;/day/&#123;2&#125;"</span></span><br><span class="line"><span class="comment"># 表头</span></span><br><span class="line">table_header = [<span class="string">"Year"</span>, <span class="string">"Month"</span>, <span class="string">"Day"</span>, <span class="string">"Time"</span>, <span class="string">"North"</span>,</span><br><span class="line">                <span class="string">"East"</span>, <span class="string">"West"</span>, <span class="string">"Central"</span>, <span class="string">"Overall Singapore"</span>]</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip,deflate,sdch"</span>,</span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 Safari/537.36 SE 2.X MetaSr 1.0"</span>,</span><br><span class="line">    <span class="string">"Host"</span>: <span class="string">"www.nea.gov.sg"</span>,</span><br><span class="line">&#125;</span><br><span class="line">session = requests.Session()</span><br><span class="line">session.headers = headers</span><br><span class="line">delay = <span class="number">0</span>  <span class="comment"># 网络请求之间的间隔</span></span><br><span class="line"></span><br><span class="line">QUIT = <span class="string">"Quit"</span></span><br><span class="line">queue = Queue()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 要下载的日期</span></span><br><span class="line">dt = datetime(<span class="number">2014</span>, <span class="number">4</span>, <span class="number">1</span>)</span><br><span class="line">dt_now = datetime.now()</span><br><span class="line">todo = []</span><br><span class="line"><span class="keyword">while</span> dt &lt;= dt_now:</span><br><span class="line">    todo.append(dt)</span><br><span class="line">    dt += timedelta(days=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开网页</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPage</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> delay:</span><br><span class="line">        time.sleep(delay)</span><br><span class="line">    <span class="keyword">return</span> session.get(url).text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(filename)</span>:</span></span><br><span class="line">    start = time.time()</span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">"w"</span>, newline=<span class="string">""</span>) <span class="keyword">as</span> output:</span><br><span class="line">        writer = csv.writer(output)</span><br><span class="line">        writer.writerow(table_header)</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            lines = queue.get()</span><br><span class="line">            <span class="keyword">if</span> isinstance(lines, str) <span class="keyword">and</span> lines == QUIT:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"拿到数据，正在写入"</span>, datetime.now())</span><br><span class="line">                writer.writerows(lines)</span><br><span class="line">    print(<span class="string">"写入完成！用时 %s "</span> % (time.time() - start))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析指定日期的页面</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resolvePage</span><span class="params">(dt)</span>:</span></span><br><span class="line">    year = dt.year</span><br><span class="line">    month = dt.month</span><br><span class="line">    day = dt.day</span><br><span class="line">    html = getPage(url_pattern.format(year, month, day))</span><br><span class="line">    soup = BS(html, <span class="string">"lxml"</span>)  <span class="comment"># 需要安装第三方库lxml，也可以使用自带的html.parser</span></span><br><span class="line">    table = soup.find(name=<span class="string">"table"</span>, class_=<span class="string">"text_psinormal"</span>)</span><br><span class="line">    <span class="keyword">if</span> table:</span><br><span class="line">        trs = table.find_all(<span class="string">"tr"</span>)</span><br><span class="line">        trs = trs[<span class="number">2</span>:]  <span class="comment"># 去除表头</span></span><br><span class="line">        lines = []</span><br><span class="line">        <span class="keyword">for</span> tr <span class="keyword">in</span> trs:</span><br><span class="line">            datas = [year, month, day] + [x <span class="keyword">for</span> x <span class="keyword">in</span> tr.strings <span class="keyword">if</span> x != <span class="string">"\n"</span>]</span><br><span class="line">            lines.append(datas)</span><br><span class="line">        queue.put(lines) <span class="comment"># 传入整张表</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始下载</span></span><br><span class="line">filename = <span class="string">"data.csv"</span></span><br><span class="line">t = threading.Thread(target=save, args=(filename,))</span><br><span class="line">t.daemon = <span class="keyword">True</span></span><br><span class="line">t.start()</span><br><span class="line"></span><br><span class="line">pool = Pool(<span class="number">30</span>)</span><br><span class="line">pool.map(resolvePage, todo)</span><br><span class="line">pool.close()</span><br><span class="line">pool.join()</span><br><span class="line"></span><br><span class="line">queue.put(QUIT)</span><br></pre></td></tr></table></figure></p>
<p>下载用时127秒。</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/Python/Python%20Queue%E5%AF%B9%E8%B1%A1%E5%BC%95%E8%B5%B7%E7%9A%84RecursionError%3Amaximum%20recursion%20depth%20exceeded/%E4%B8%8B%E8%BD%BD%E5%BE%97%E5%88%B0%E7%9A%84csv%E6%96%87%E4%BB%B6.png" alt="下载得到的.csv文件，可用Excel打开"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python 3 模拟登录知乎]]></title>
      <url>http://lovenight.github.io/2015/11/11/Python%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95%E7%9F%A5%E4%B9%8E/</url>
      <content type="html"><![CDATA[<h2 id="缘起">缘起</h2><p>最近发现知乎的登录界面改了，抓包看了看，果然登录方式也变了，会根据用户名字符串发送不同字段的POST。中午研究了一会，写了个登录知乎的工具类，可以自动处理Cookie，维持登录状态。目前仅实现登录和打开网页的功能。</p>
<h2 id="依赖的第三方库">依赖的第三方库</h2><ul>
<li><code>requests</code></li>
<li><code>BeautifulSoup</code></li>
<li><code>lxml</code> 这个不装没关系，把<code>__login()</code>方法中的<code>lxml</code>改成<code>html.parser</code>即可。</li>
</ul>
<a id="more"></a>
<h2 id="用法">用法</h2><h3 id="创建ZhihuClient对象">创建ZhihuClient对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client = ZhiHuClient()</span><br></pre></td></tr></table></figure>
<p>第一次使用时，需要调用login()方法登录一次，生成cookie文件：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.login(<span class="string">"你的用户名"</span>, <span class="string">"你的密码"</span>)</span><br></pre></td></tr></table></figure></p>
<p>此时会下载并打开验证码图片：</p>
<pre><code>=<span class="ruby">=================================================
</span>已打开验证码图片，请识别！
</code></pre><p>关闭图片后，会提示你输入验证码：</p>
<pre><code>=<span class="ruby">=================================================
</span>已打开验证码图片，请识别！
请输入验证码：
</code></pre><p>如果验证码输入错误，会提示：</p>
<pre><code>==================================================
登录失败
错误信息 ---&gt; 请提交正确的验证码 :(
==================================================
已打开验证码图片，请识别！
</code></pre><p>如果验证码输入正确，提示：</p>
<pre><code>==================================================
登录成功
==================================================
已在同目录下生成cookie文件： cookie
</code></pre><p>下次登录时会自动载入此cookie文件，不再需要调用login</p>
<h3 id="打开网页">打开网页</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = client.<span class="function"><span class="title">open</span><span class="params">(url)</span></span></span><br></pre></td></tr></table></figure>
<p>返回一个<code>Response</code>对象，其方法与属性请参照<code>requests</code>库</p>
<h2 id="完整代码">完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: LoveNight</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> BS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ZhiHuClient</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""连接知乎的工具类，维护一个Session</span><br><span class="line">    2015.11.11</span><br><span class="line"></span><br><span class="line">    用法：</span><br><span class="line"></span><br><span class="line">    client = ZhiHuClient()</span><br><span class="line"></span><br><span class="line">    # 第一次使用时需要调用此方法登录一次，生成cookie文件</span><br><span class="line">    # 以后可以跳过这一步</span><br><span class="line">    client.login("username", "password")</span><br><span class="line"></span><br><span class="line">    # 用这个session进行其他网络操作，详见requests库</span><br><span class="line">    session = client.getSession()</span><br><span class="line">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 网址参数是账号类型</span></span><br><span class="line">    TYPE_PHONE_NUM = <span class="string">"phone_num"</span></span><br><span class="line">    TYPE_EMAIL = <span class="string">"email"</span></span><br><span class="line">    loginURL = <span class="string">r"http://www.zhihu.com/login/&#123;0&#125;"</span></span><br><span class="line">    homeURL = <span class="string">r"http://www.zhihu.com"</span></span><br><span class="line">    captchaURL = <span class="string">r"http://www.zhihu.com/captcha.gif"</span></span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.86 Safari/537.36"</span>,</span><br><span class="line">        <span class="string">"Accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"</span>,</span><br><span class="line">        <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate"</span>,</span><br><span class="line">        <span class="string">"Host"</span>: <span class="string">"www.zhihu.com"</span>,</span><br><span class="line">        <span class="string">"Upgrade-Insecure-Requests"</span>: <span class="string">"1"</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    captchaFile = os.path.join(sys.path[<span class="number">0</span>], <span class="string">"captcha.gif"</span>)</span><br><span class="line">    cookieFile = os.path.join(sys.path[<span class="number">0</span>], <span class="string">"cookie"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        os.chdir(sys.path[<span class="number">0</span>])  <span class="comment"># 设置脚本所在目录为当前工作目录</span></span><br><span class="line"></span><br><span class="line">        self.__session = requests.Session()</span><br><span class="line">        self.__session.headers = self.headers  <span class="comment"># 用self调用类变量是防止将来类改名</span></span><br><span class="line">        <span class="comment"># 若已经有 cookie 则直接登录</span></span><br><span class="line">        self.__cookie = self.__loadCookie()</span><br><span class="line">        <span class="keyword">if</span> self.__cookie:</span><br><span class="line">            print(<span class="string">"检测到cookie文件，直接使用cookie登录"</span>)</span><br><span class="line">            self.__session.cookies.update(self.__cookie)</span><br><span class="line">            soup = BS(self.open(<span class="string">r"http://www.zhihu.com/"</span>).text, <span class="string">"html.parser"</span>)</span><br><span class="line">            print(<span class="string">"已登陆账号： %s"</span> % soup.find(<span class="string">"span"</span>, class_=<span class="string">"name"</span>).getText())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"没有找到cookie文件，请调用login方法登录一次！"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 登录</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self, username, password)</span>:</span></span><br><span class="line">        <span class="string">"""</span><br><span class="line">        验证码错误返回：</span><br><span class="line">        &#123;'errcode': 1991829, 'r': 1, 'data': &#123;'captcha': '请提交正确的验证码 :('&#125;, 'msg': '请提交正确的验证码 :('&#125;</span><br><span class="line">        登录成功返回：</span><br><span class="line">        &#123;'r': 0, 'msg': '登陆成功'&#125;</span><br><span class="line">        """</span></span><br><span class="line">        self.__username = username</span><br><span class="line">        self.__password = password</span><br><span class="line">        self.__loginURL = self.loginURL.format(self.__getUsernameType())</span><br><span class="line">        <span class="comment"># 随便开个网页，获取登陆所需的_xsrf</span></span><br><span class="line">        html = self.open(self.homeURL).text</span><br><span class="line">        soup = BS(html, <span class="string">"html.parser"</span>)</span><br><span class="line">        _xsrf = soup.find(<span class="string">"input"</span>, &#123;<span class="string">"name"</span>: <span class="string">"_xsrf"</span>&#125;)[<span class="string">"value"</span>]</span><br><span class="line">        <span class="comment"># 下载验证码图片</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            captcha = self.open(self.captchaURL).content</span><br><span class="line">            <span class="keyword">with</span> open(self.captchaFile, <span class="string">"wb"</span>) <span class="keyword">as</span> output:</span><br><span class="line">                output.write(captcha)</span><br><span class="line">            <span class="comment"># 人眼识别</span></span><br><span class="line">            print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">            print(<span class="string">"已打开验证码图片，请识别！"</span>)</span><br><span class="line">            subprocess.call(self.captchaFile, shell=<span class="keyword">True</span>)</span><br><span class="line">            captcha = input(<span class="string">"请输入验证码："</span>)</span><br><span class="line">            os.remove(self.captchaFile)</span><br><span class="line">            <span class="comment"># 发送POST请求</span></span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">"_xsrf"</span>: _xsrf,</span><br><span class="line">                <span class="string">"password"</span>: self.__password,</span><br><span class="line">                <span class="string">"remember_me"</span>: <span class="string">"true"</span>,</span><br><span class="line">                self.__getUsernameType(): self.__username,</span><br><span class="line">                <span class="string">"captcha"</span>: captcha</span><br><span class="line">            &#125;</span><br><span class="line">            res = self.__session.post(self.__loginURL, data=data)</span><br><span class="line">            print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">            <span class="comment"># print(res.text) # 输出脚本信息，调试用</span></span><br><span class="line">            <span class="keyword">if</span> res.json()[<span class="string">"r"</span>] == <span class="number">0</span>:</span><br><span class="line">                print(<span class="string">"登录成功"</span>)</span><br><span class="line">                self.__saveCookie()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"登录失败"</span>)</span><br><span class="line">                print(<span class="string">"错误信息 ---&gt;"</span>, res.json()[<span class="string">"msg"</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getUsernameType</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""判断用户名类型</span><br><span class="line">        经测试，网页的判断规则是纯数字为phone_num，其他为email</span><br><span class="line">        """</span></span><br><span class="line">        <span class="keyword">if</span> self.__username.isdigit():</span><br><span class="line">            <span class="keyword">return</span> self.TYPE_PHONE_NUM</span><br><span class="line">        <span class="keyword">return</span> self.TYPE_EMAIL</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__saveCookie</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""cookies 序列化到文件</span><br><span class="line">        即把dict对象转化成字符串保存</span><br><span class="line">        """</span></span><br><span class="line">        <span class="keyword">with</span> open(self.cookieFile, <span class="string">"w"</span>) <span class="keyword">as</span> output:</span><br><span class="line">            cookies = self.__session.cookies.get_dict()</span><br><span class="line">            json.dump(cookies, output)</span><br><span class="line">            print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">            print(<span class="string">"已在同目录下生成cookie文件："</span>, self.cookieFile)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__loadCookie</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""读取cookie文件，返回反序列化后的dict对象，没有则返回None"""</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(self.cookieFile):</span><br><span class="line">            print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">            <span class="keyword">with</span> open(self.cookieFile, <span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">                cookie = json.load(f)</span><br><span class="line">                <span class="keyword">return</span> cookie</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open</span><span class="params">(self, url, delay=<span class="number">0</span>, timeout=<span class="number">10</span>)</span>:</span></span><br><span class="line">        <span class="string">"""打开网页，返回Response对象"""</span></span><br><span class="line">        <span class="keyword">if</span> delay:</span><br><span class="line">            time.sleep(delay)</span><br><span class="line">        <span class="keyword">return</span> self.__session.get(url, timeout=timeout)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getSession</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.__session</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    client = ZhiHuClient()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 第一次使用时需要调用此方法登录一次，生成cookie文件</span></span><br><span class="line">    <span class="comment"># 以后可以跳过这一步</span></span><br><span class="line">    <span class="comment"># client.login("username", "password")</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用这个session进行其他网络操作，详见requests库</span></span><br><span class="line">    session = client.getSession()</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 3.1.1 静态博客搭建指南]]></title>
      <url>http://lovenight.github.io/2015/11/10/Hexo-3-1-1-%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<p><strong>注意，本文适用于hexo 3.x 版本，与2.x略有出入！</strong><br><strong>多说评论已经于2017年6月关闭，文中关于多说的内容可以忽略</strong></p>
<p>GitHub Pages 本用于介绍托管在 GitHub 的项目，也可以用来搭建博客，有300M免费空间。</p>
<p>hexo是一个基于Node.js的静态博客程序，可以方便的生成静态网页托管在github和Heroku上。作者是来自台湾的<a href="https://github.com/hexojs/hexo" target="_blank" rel="external">tommy351</a>。<br>优势：</p>
<blockquote>
<p>生成静态页面快<br>支持 Markdown<br>兼容于 Windows, Mac &amp; Linux<br>部署方便。日常使用仅需五个命令。<br>高扩展性、自订性，文件少、小，易理解</p>
</blockquote>
<a id="more"></a>
<hr>
<h1 id="配置SSH">配置SSH</h1><p>使用hexo博客必须配置SSH。</p>
<p>打开git bash，输入<code>cd ~/.ssh</code>，如果果提示：No such file or directory 说明未配置SSH。</p>
<ul>
<li><strong>本地生成密钥对</strong><br><code>ssh-keygen -t rsa -C &quot;你的邮件地址&quot;</code>，注意命令中的大小写不要搞混。按提示指定保存文件夹，不设置密码。</li>
<li><strong>添加公钥到Github</strong></li>
</ul>
<ol>
<li>根据上一步的提示，找到公钥文件（默认为id_rsa.pub），用记事本打开，全选并复制。</li>
<li>登录Github，右上角 头像 -&gt; <code>Settings</code> —&gt; <code>SSH keys</code> —&gt; <code>Add SSH</code> key。把公钥粘贴到key中，填好title并点击 Add key。</li>
<li>git bash中输入命令<code>ssh -T git@github.com</code>，选yes，等待片刻可看到成功提示。</li>
</ol>
<ul>
<li><strong>修改本地的ssh remote url，不用https协议，改用git协议</strong></li>
</ul>
<ol>
<li>Github仓库中获取ssh协议相应的url</li>
<li>本地仓库执行命令<code>git remote set-url origin SSH对应的url</code>，配置完后可用<code>git remote -v</code>查看结果</li>
</ol>
<p>这样<code>git push</code>或<code>hexo d</code>时不再需要输入账号密码。</p>
<hr>
<h1 id="搭建博客">搭建博客</h1><p>注，以下命令行需要在Git终端中执行(右键单击 -&gt; <code>Git bash</code>)。</p>
<ul>
<li>安装<a href="http://git-scm.com/" target="_blank" rel="external">Git</a>：下载安装后，注册Github账号并配置Git和SSH公私钥</li>
<li>安装<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></li>
<li>安装hexo：<code>npm install -g hexo</code>，可用<code>hexo -v</code>查看版本。这里我用的是<strong>3.1.1</strong>。也可以指定版本：<code>npm install hexo@3.1.1 -g</code></li>
<li>创建hexo文件夹：新建放置博客的文件夹，进入并执行命令<code>hexo init</code>。hexo 会在目标文件夹建立网站所需要的所有文件。</li>
<li>安装依赖包：<code>npm install</code></li>
<li>创建Github Repository：Repository名字必须是<code>你的Github名.github.io</code>，比如我是<code>loveNight.github.io</code></li>
<li>部署：打开博客根目录下的<code>_config.yml</code>文件，末尾添加如下信息。</li>
</ul>
<pre><code><span class="attribute">deploy</span>:
  <span class="attribute">type</span>: git
  <span class="attribute">repository</span>: 上一步的Github仓库地址，项目主页点SSH再复制URL
  <span class="attribute">branch</span>: master
</code></pre><p>然后执行命令：</p>
<pre><code><span class="title">hexo</span> generate <span class="comment"># 生成静态页面，可以简化为hexo g</span>
hexo deploy <span class="comment"># 部署到Github，可以简化为hexo d</span>
</code></pre><p>浏览器访问<code>loveNight.github.io</code>就能看到自己的Blog了，一般延迟十分钟左右才能看到效果。一开始看到404页面不要惊慌，耐心等等。</p>
<p>手打党请注意，配置文件的冒号后必须有一个空格。</p>
<p>如果报错</p>
<pre><code>Deployer <span class="keyword">not</span> found:git
</code></pre><p>运行命令</p>
<pre><code>npm <span class="operator"><span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span>
</code></pre><hr>
<h1 id="hexo使用">hexo使用</h1><h2 id="生成静态页面">生成静态页面</h2><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">ge</span><span class="label">nerate</span></span><br></pre></td></tr></table></figure>
<h2 id="本地启动">本地启动</h2><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">server</span></span><br></pre></td></tr></table></figure>
<p>浏览器输入<code>localhost:4000</code>就可以看到效果。当你修改了文章或配置文件时，保存文件再刷新浏览器就能看到修改后的效果，非常方便。</p>
<h2 id="新建文章">新建文章</h2><pre><code>hexo <span class="built_in">new</span> <span class="built_in">post</span> <span class="string">"title"</span>  <span class="comment"># 生成新文章：\source\_posts\title.md，可省略post</span>
</code></pre><h2 id="新建页面">新建页面</h2><pre><code>hexo <span class="keyword">new</span> page <span class="string">"title"</span>
</code></pre><p>post、page等可以改成其他layout，可用layout在scaffolds目录下查看。在同目录下创建文件来添加自己的layout，也可以编辑现有的layout，比如post的layout默认是<code>\scaffolds\post.md</code>。</p>
<h2 id="编辑文章">编辑文章</h2><p>打开新建的文章<code>\source\_posts\postName.md</code>：</p>
<pre><code>title: HelloWorld！ <span class="preprocessor"># 文章页面上的显示名称，可以任意修改，不会出现在URL中</span>
date: <span class="number">2015</span>-<span class="number">11</span>-<span class="number">09</span> <span class="number">15</span>:<span class="number">56</span>:<span class="number">26</span> <span class="preprocessor"># 文章生成时间，一般不改</span>
categories:   <span class="preprocessor"># 文章分类目录，参数可省略</span>
    - 随笔
    - 瞬间
tags:   <span class="preprocessor"># 文章标签，参数可省略</span>
    - hexo
    - blog <span class="preprocessor"># 个数不限，单个可直接跟在tags后面</span>
---
这里开始使用markdown格式输入你的正文。
</code></pre><p>多级分类语法格式：（标签也可以用类似的写法）</p>
<pre><code># 第一种
categories:
  -<span class="ruby"> 一级分类
</span>  -<span class="ruby"> 二级分类
</span>  -<span class="ruby"> etc...
</span>
# 第二种：
categories: [一级分类, 二级分类]
</code></pre><p>首页文章预览添加图片：</p>
<pre><code><span class="string">photos:</span>
  - <span class="string">http:</span><span class="comment">//<span class="label">xxx.com/photo1.jpg</span></span>
  - <span class="string">http:</span><span class="comment">//<span class="label">xxx.com/photo2.jpg</span></span>
</code></pre><p>正文中可以使用<code>&lt;!--more--&gt;</code>设置文章摘要 如下:</p>
<pre><code>以上显示在摘要中
<span class="comment">&lt;!--more--&gt;</span>
以下是余下全文
</code></pre><p>more 以上内容即是文章摘要，如果设置了主页只显示摘要，则more以下内容点击 <code>Read More</code> 链接打开全文才显示。</p>
<h2 id="简单命令">简单命令</h2><p>hexo现在支持更加简单的命令格式了，比如：</p>
<pre><code>hexo <span class="keyword">g</span> == hexo <span class="keyword">generate</span> # 生成
hexo <span class="keyword">d</span> == hexo deploy # 部署 # 可与hexo <span class="keyword">g</span>合并为 hexo <span class="keyword">d</span> -<span class="keyword">g</span>
hexo s == hexo server # 本地预览
hexo <span class="keyword">n</span> == hexo new # 写文章
</code></pre><h2 id="插入图片">插入图片</h2><p>博客中的图片文件可以直接放在source文件夹下，部署时上传到Github仓库中。但是Github项目容量有限，而且主机在国外，访问速度较慢，把图片放在国内的图床上是个更好的选择。我用的是<a href="https://portal.qiniu.com/signup?code=3lgo2c4fgwv9u" target="_blank" rel="external">七牛云存储</a></p>
<p>免费用户实名审核之后，可以获取10GB永久免费存储空间、每月10GB下载流量、每月10万次Put请求、每月100万次Get请求，做图床绰绰有余。</p>
<p>注册账号，新建空间，我的新空间名是<code>blog</code>，专门用来放置博客上引用的资源。</p>
<p>进入空间后点击「内容管理」，再点击「上传」：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/Hexo%203.1.1%20%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/%E4%B8%83%E7%89%9B%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E6%A1%86.png" alt=""></p>
<p>七牛空间没有文件夹的概念，但是允许为文件添加带斜杠<code>/</code>的前缀，用来给资源分类。这里我设置前缀为<code>img/Hexo 3.1.1 静态博客搭建指南/</code>。上传了一张图片：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/Hexo%203.1.1%20%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/%E4%B8%83%E7%89%9B%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%90%8E.png" alt=""></p>
<p>在右侧可以找到外链，复制地址：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/Hexo%203.1.1%20%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/%E4%B8%83%E7%89%9B%E5%9B%BE%E7%89%87%E5%A4%96%E9%93%BE.png" alt=""></p>
<p>Markdown 插入图片的语法为：</p>
<pre><code>!<span class="attr_selector">[]</span>(图片网址)
</code></pre><p>上传图片 -&gt; 获取外链 -&gt; 写入Markdown，就这么简单！</p>
<p>由于七牛防盗链的白名单无法添加<code>localhost</code>，暂时不设置防盗链，否则<code>hexo s</code>调试的时候，看不到图片。</p>
<p>以上操作每插入一张图片就要做一次，相当繁琐，于是写了个脚本简化，详见我的这篇文章<a href="http://lovenight.github.io/2015/11/17/%E6%8B%96%E6%9B%B3%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%B0%E4%B8%83%E7%89%9B%E7%9A%84%E8%84%9A%E6%9C%AC/">《拖曳文件上传到七牛的Python脚本》</a></p>
<hr>
<h1 id="配置博客">配置博客</h1><h2 id="全站配置">全站配置</h2><p><strong>注意：文件中配置项的冒号后面必须加空格，否则报错</strong></p>
<p>下面有些选项要配置后文的插件才有效，文件中已注明。</p>
<ul>
<li><strong>整站的配置</strong>：博客根目录下的<code>\_config.yml</code>文件。<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># Hexo Configuration</span></span><br><span class="line"><span class="preprocessor">## Docs: http://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="preprocessor">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Site</span></span><br><span class="line"><span class="label">title:</span> 岁月如歌 <span class="preprocessor"># 站点名</span></span><br><span class="line"><span class="label">subtitle:</span> 莫厌追欢笑语频，寻思离乱好伤神。闲来屈指从头数，得见清平有几人 <span class="preprocessor"># 副标题</span></span><br><span class="line"><span class="label">description:</span> 自古求真皆寂寞，唯挑心灯伴夜霭</span><br><span class="line"><span class="label">author:</span> loveNight <span class="preprocessor"># 作者，在站点左下角可以看到</span></span><br><span class="line"><span class="label">avatar:</span> /images/avatar.jpg <span class="preprocessor"># 头像。Next主题增加的字段</span></span><br><span class="line"><span class="label">language:</span> <span class="built_in">zh</span>-Hans <span class="preprocessor"># 语言。Next主题增加的字段</span></span><br><span class="line"><span class="label">timezone:</span></span><br><span class="line"><span class="label">since:</span> <span class="number">2015</span> <span class="preprocessor"># 博客建立年份，Next主题增加的字段</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 多说 ShortName</span></span><br><span class="line"><span class="label">duoshuo_shortname:</span> <span class="preprocessor"># xxx.duoshuo.com，xxx即是shortname。</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Social links</span></span><br><span class="line"><span class="label">social:</span></span><br><span class="line">  Github: https://github.com/loveNight</span><br><span class="line">  Weibo: http://weibo.com/p/<span class="number">1005051069913250</span></span><br><span class="line">  Email: mailto:<span class="number">286242151</span>@qq.com</span><br><span class="line">  <span class="preprocessor"># zhihu: http://www.zhihu.com/people/your-user-name</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># title, chinese available</span></span><br><span class="line"><span class="label">links_title:</span> 友情链接</span><br><span class="line"><span class="preprocessor"># links</span></span><br><span class="line"><span class="label">links:</span></span><br><span class="line">  我的CSDN博客: http://blog.csdn.net/kinglearnjava</span><br><span class="line">  我的新浪博客: http://blog.sina.com.cn/u/<span class="number">1069913250</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># URL</span></span><br><span class="line"><span class="preprocessor">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="label">url:</span> http://lovenight.github.io/ <span class="preprocessor"># 网址</span></span><br><span class="line"><span class="label">root:</span> /</span><br><span class="line"><span class="label">permalink:</span> :year/:month/:day/:title/</span><br><span class="line"><span class="label">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Directory</span></span><br><span class="line"><span class="label">source_dir:</span> source</span><br><span class="line"><span class="label">public_dir:</span> public</span><br><span class="line"><span class="label">tag_dir:</span> tags</span><br><span class="line"><span class="label">archive_dir:</span> archives</span><br><span class="line"><span class="label">category_dir:</span> categories</span><br><span class="line"><span class="label">code_dir:</span> downloads/code</span><br><span class="line"><span class="label">i18n_dir:</span> :lang  <span class="preprocessor"># 国际化文件夹</span></span><br><span class="line"><span class="label">skip_render:</span>   <span class="preprocessor"># 跳过指定文件的渲染</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Writing # 文章布局、写作格式的定义</span></span><br><span class="line"><span class="label">new_post_name:</span> :title.md <span class="preprocessor"># File name of new posts</span></span><br><span class="line"><span class="label">default_layout:</span> post</span><br><span class="line"><span class="label">titlecase:</span> false <span class="preprocessor"># Transform title into titlecase</span></span><br><span class="line"><span class="label">external_link:</span> true <span class="preprocessor"># Open external links in new tab</span></span><br><span class="line"><span class="label">filename_case:</span> <span class="number">0</span>   <span class="preprocessor"># 1 为小写， 2 为大写</span></span><br><span class="line"><span class="label">render_drafts:</span> false  <span class="preprocessor"># 显示草稿</span></span><br><span class="line"><span class="label">post_asset_folder:</span> false  <span class="preprocessor"># 启动asset文件夹</span></span><br><span class="line"><span class="label">relative_link:</span> false <span class="preprocessor"># 链接改为与根目录的相对地址</span></span><br><span class="line"><span class="label">future:</span> true  <span class="preprocessor"># 显示未来的文章</span></span><br><span class="line"><span class="label">highlight:</span></span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: true</span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Category &amp; Tag</span></span><br><span class="line"><span class="label">default_category:</span> uncategorized</span><br><span class="line"><span class="label">category_map:</span></span><br><span class="line"><span class="label">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Date / Time format</span></span><br><span class="line"><span class="preprocessor">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="preprocessor">## You can customize the date format as defined in</span></span><br><span class="line"><span class="preprocessor">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="label">date_format:</span> YYYY-MM-DD</span><br><span class="line"><span class="label">time_format:</span> HH:mm:ss</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Pagination # 每页显示文章数</span></span><br><span class="line"><span class="preprocessor">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="label">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="label">pagination_dir:</span> page</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Extensions # 这里配置站点所用主题和插件</span></span><br><span class="line"><span class="preprocessor">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="label">plugins:</span></span><br><span class="line"><span class="label">baidusitemap:</span> <span class="preprocessor"># 需要安装插件 npm install hexo-generator-baidu-sitemap@0.1.1 --save</span></span><br><span class="line">  path: baidusitemap.xml</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Extensions</span></span><br><span class="line"><span class="preprocessor">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="preprocessor">## Themes: http://hexo.io/themes/</span></span><br><span class="line"><span class="label">theme:</span> next</span><br><span class="line"></span><br><span class="line"><span class="label">feed:</span></span><br><span class="line">  type: atom       <span class="preprocessor">#feed 类型 (atom/rss2)</span></span><br><span class="line">  path: atom.xml   <span class="preprocessor">#rss 路径</span></span><br><span class="line">  limit: <span class="number">0</span>        <span class="preprocessor">#在 rss 中最多生成的文章数(0显示所有)</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 自定义站点内容搜索</span></span><br><span class="line"><span class="preprocessor"># 需要先安装插件：</span></span><br><span class="line"><span class="preprocessor"># npm install hexo-generator-search --save</span></span><br><span class="line"><span class="label">search:</span></span><br><span class="line">  path: search.xml</span><br><span class="line">  field: all  <span class="preprocessor"># 如只想索引文章，可设置为post</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Deployment # 站点部署到github</span></span><br><span class="line"><span class="preprocessor">## Docs: http://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="label">deploy:</span></span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:loveNight/loveNight.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># ---------------下面选项需要对应插件的支持---------------</span></span><br><span class="line"><span class="preprocessor"># npm install hexo-generator-index --save</span></span><br><span class="line"><span class="preprocessor"># npm install hexo-generator-archive --save</span></span><br><span class="line"><span class="preprocessor"># npm install hexo-generator-category --save</span></span><br><span class="line"><span class="preprocessor"># npm install hexo-generator-tag --save</span></span><br><span class="line"></span><br><span class="line"><span class="label">index_generator:</span></span><br><span class="line">  per_page: <span class="number">10</span> <span class="preprocessor">##首页默认10篇文章标题 如果值为0不分页</span></span><br><span class="line"></span><br><span class="line"><span class="label">archive_generator:</span></span><br><span class="line">  per_page: <span class="number">20</span> <span class="preprocessor">##归档页面默认20篇文章标题</span></span><br><span class="line">  yearly: true  <span class="preprocessor">##生成年视图</span></span><br><span class="line">  monthly: true <span class="preprocessor">##生成月视图</span></span><br><span class="line"></span><br><span class="line"><span class="label">tag_generator:</span></span><br><span class="line">  per_page: <span class="number">10</span> <span class="preprocessor">##标签分类页面默认10篇文章</span></span><br><span class="line"></span><br><span class="line"><span class="label">category_generator:</span></span><br><span class="line">  per_page: <span class="number">10</span> <span class="preprocessor">###分类页面默认10篇文章</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="更换主题">更换主题</h2><p>默认主题太丑，换成<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">NexT</a>主题。</p>
<ul>
<li>安装：在博客根目录下执行<code>git clone https://github.com/iissnan/hexo-theme-next.git themes/next</code>。</li>
<li>启用：修改博客根目录下的<code>_config.yml</code>配置文件中的<code>theme</code>属性，将其设置为<code>next</code>。</li>
<li>更新：在<code>themes/next</code>目录下执行<code>git pull</code>。（暂时不需要）</li>
<li><code>\themes\next\_config.yml</code>修改主题配置。</li>
</ul>
<p>我的<code>_config.yml</code>文件：<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor"># Site Information Settings</span></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Place your favicon.ico to /source directory.</span></span><br><span class="line">favicon: /favicon.ico</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Set default keywords (Use a comma to separate)</span></span><br><span class="line">keywords: <span class="string">"loveNight, Android, Python, 神锋"</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Set rss to false to disable feed link.</span></span><br><span class="line"><span class="preprocessor"># Leave rss as empty to use site's feed link.</span></span><br><span class="line"><span class="preprocessor"># Set rss to specific value if you have burned your feed already.</span></span><br><span class="line">rss:</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Specify the date when the site was setup</span></span><br><span class="line"><span class="preprocessor">#since: 2015</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor"># Menu Settings</span></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># When running hexo in a subdirectory (e.g. domain.tld/blog)</span></span><br><span class="line"><span class="preprocessor"># Remove leading slashes ( "/archives" -&gt; "archives" )</span></span><br><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  categories: /categories</span><br><span class="line">  tags: /tags</span><br><span class="line">  Android: /Android</span><br><span class="line">  Python: /Python</span><br><span class="line">  API: /API</span><br><span class="line">  Notes: /Notes</span><br><span class="line">  Links: /Links</span><br><span class="line">  About: /About</span><br><span class="line"></span><br><span class="line">  #commonweal: /<span class="number">404.</span>html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Enable/Disable menu icons.</span></span><br><span class="line"><span class="preprocessor"># Icon Mapping:</span></span><br><span class="line"><span class="preprocessor">#   Map a menu item to a specific FontAwesome icon name.</span></span><br><span class="line"><span class="preprocessor">#   Key is the name of menu item and value is the name of FontAwsome icon.</span></span><br><span class="line"><span class="preprocessor">#   When an question mask icon presenting up means that the item has no mapping icon.</span></span><br><span class="line">menu_icons:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  # Icon Mapping.</span><br><span class="line">  home: home</span><br><span class="line">  about: user</span><br><span class="line">  categories: th</span><br><span class="line">  tags: tags</span><br><span class="line">  archives: archive</span><br><span class="line">  commonweal: heartbeat</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor"># Scheme Settings</span></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Schemes</span></span><br><span class="line">scheme: Mist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor"># Sidebar Settings</span></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Sidebar, available value:</span></span><br><span class="line"><span class="preprocessor">#  - post    expand on posts automatically. Default.</span></span><br><span class="line"><span class="preprocessor">#  - always  expand for all pages automatically</span></span><br><span class="line"><span class="preprocessor">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line"><span class="preprocessor">#  - remove  Totally remove sidebar including sidebar toggle icon.</span></span><br><span class="line">sidebar: always</span><br><span class="line"><span class="preprocessor"># sidebar: post</span></span><br><span class="line"><span class="preprocessor">#sidebar: hide</span></span><br><span class="line"><span class="preprocessor">#sidebar: remove</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Social links</span></span><br><span class="line"><span class="preprocessor"># social:</span></span><br><span class="line">  #GitHub:</span><br><span class="line">  #Others:</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Social Icons</span></span><br><span class="line">social_icons:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  # Icon Mappings</span><br><span class="line">  GitHub: github</span><br><span class="line">  Twitter: twitter</span><br><span class="line">  Weibo: weibo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Sidebar Avatar</span></span><br><span class="line"><span class="preprocessor">#avatar:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Social links</span></span><br><span class="line"><span class="preprocessor"># social:</span></span><br><span class="line">  #GitHub:</span><br><span class="line">  #Others:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># TOC in the Sidebar</span></span><br><span class="line">toc:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="preprocessor"># http://creativecommons.org/</span></span><br><span class="line"><span class="preprocessor"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="preprocessor">#creative_commons: by-nc-sa</span></span><br><span class="line"><span class="preprocessor">#creative_commons:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor"># Misc Theme Settings</span></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Custom Logo.</span></span><br><span class="line"><span class="preprocessor"># !!Only available for Default Scheme currently.</span></span><br><span class="line"><span class="preprocessor"># Options:</span></span><br><span class="line"><span class="preprocessor">#   enabled: [true/false] - Replace with specific image</span></span><br><span class="line"><span class="preprocessor">#   image: url-of-image   - Images's url</span></span><br><span class="line">custom_logo:</span><br><span class="line">  enabled: <span class="literal">false</span></span><br><span class="line">  image:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Code Highlight theme</span></span><br><span class="line"><span class="preprocessor"># Available value:</span></span><br><span class="line"><span class="preprocessor">#    normal | night | night eighties | night blue | night bright</span></span><br><span class="line"><span class="preprocessor"># https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">highlight_theme: night blue</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># `阅读全文` 按钮跳转之后是否自动滚动页面到设置 `&lt;!-- more --&gt;` 的地方。</span></span><br><span class="line">scroll_to_more: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 是否为侧边栏文章的目录自动添加索引，默认开启。设置为 `false` 关闭。</span></span><br><span class="line">toc_list_number: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Automatically Excerpt</span></span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  length: <span class="number">150</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Use Lato font</span></span><br><span class="line">use_font_lato: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor"># Third Party Services Settings</span></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># MathJax Support # 数学公式，要使用就设置为True</span></span><br><span class="line">mathjax:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Swiftype Search API Key</span></span><br><span class="line">swiftype_key:</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Baidu Analytics ID</span></span><br><span class="line"><span class="preprocessor">#baidu_analytics:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 多说热评文章 true 或者 false</span></span><br><span class="line"><span class="preprocessor"># duoshuo_hotartical: true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Disqus</span></span><br><span class="line"><span class="preprocessor">#disqus_shortname:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Share</span></span><br><span class="line">jiathis: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Share</span></span><br><span class="line"><span class="preprocessor"># duoshuo_share: true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Google Webmaster tools verification setting</span></span><br><span class="line"><span class="preprocessor"># See: https://www.google.com/webmasters/</span></span><br><span class="line"><span class="preprocessor">#google_site_verification:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Google Analytics</span></span><br><span class="line"><span class="preprocessor">#google_analytics:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Make duoshuo show UA</span></span><br><span class="line"><span class="preprocessor"># user_id must NOT be null when admin_enable is true!</span></span><br><span class="line"><span class="preprocessor"># you can visit http://dev.duoshuo.com get duoshuo user id.</span></span><br><span class="line">duoshuo_info:</span><br><span class="line">  ua_enable: <span class="literal">true</span></span><br><span class="line">  admin_enable: <span class="literal">false</span></span><br><span class="line">  user_id: <span class="number">0</span></span><br><span class="line">  #admin_nickname: ROOT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Facebook SDK Support.</span></span><br><span class="line"><span class="preprocessor"># https://github.com/iissnan/hexo-theme-next/pull/410</span></span><br><span class="line">facebook_sdk:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  app_id:       #&lt;app_id&gt;</span><br><span class="line">  fb_admin:     #&lt;user_id&gt;</span><br><span class="line">  like_button:  #<span class="literal">true</span></span><br><span class="line">  webmaster:    #<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#! ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor">#! DO NOT EDIT THE FOLLOWING SETTINGS</span></span><br><span class="line"><span class="preprocessor">#! UNLESS YOU KNOW WHAT YOU ARE DOING</span></span><br><span class="line"><span class="preprocessor">#! ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Motion</span></span><br><span class="line">use_motion: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Fancybox</span></span><br><span class="line">fancybox: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Static files</span></span><br><span class="line">vendors: vendors</span><br><span class="line">css: css</span><br><span class="line">js: js</span><br><span class="line">images: images</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Theme version</span></span><br><span class="line">version: <span class="number">0.4</span><span class="number">.5</span><span class="number">.2</span></span><br></pre></td></tr></table></figure></p>
<p>附 <a href="https://support.google.com/analytics/answer/1008015?hl=zh-Hans" target="_blank" rel="external">Google Analysis</a></p>
<hr>
<h1 id="个性化设置">个性化设置</h1><p>先按照<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT 使用文档</a>设置一下，其中的内容下面不再赘述。</p>
<h2 id="sitemap_插件">sitemap 插件</h2><p>谷歌与百度的站点地图，前者适用于其他搜索引擎，用来手动提交以增加收录</p>
<p>安装：</p>
<pre><code>npm <span class="operator"><span class="keyword">install</span> hexo-generator-sitemap@<span class="number">1</span> <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-generator-baidu-sitemap@<span class="number">0.1</span><span class="number">.1</span> <span class="comment">--save</span></span>
</code></pre><p><code>_config.yml</code>添加代码：</p>
<pre><code><span class="attribute">baidusitemap</span>:
  <span class="attribute">path</span>: baidusitemap.xml
</code></pre><p>谷歌的<code>sitemap.xml</code>不需要写到配置文件中，自动生效。</p>
<p>在主页后面加<code>/baidusitemap.xml</code>可以看到baidusitemap（谷歌同理），将该网址它提交给百度搜索：<a href="http://zhanzhang.baidu.com/?castk=LTE%3D" target="_blank" rel="external">百度站长平台</a>，贴吧账号无法在这里使用。</p>
<p>不过由于Github禁止了百度爬虫，百度无法抓取其中的URL：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%99%BE%E5%BA%A6%E6%8A%93%E5%8F%96Github%E5%8D%9A%E5%AE%A2sitemap%E5%A4%B1%E8%B4%A5.jpg" alt="百度抓取Github博客sitemap失败.jpg"></p>
<p>试了各种解决方案都没有成功，除非把博客托管到其他平台上。</p>
<h2 id="添加新_Page">添加新 Page</h2><p>用如下命令添加新page</p>
<pre><code>hexo <span class="keyword">new</span> page <span class="string">"Android"</span>
hexo <span class="keyword">new</span> page <span class="string">"Python"</span>
hexo <span class="keyword">new</span> page <span class="string">"API"</span>
</code></pre><!-- more -->
<p>然后在主题配置文件<code>\themes\next\_config.yml</code>添加：</p>
<pre><code><span class="attribute">menu</span>:
  <span class="attribute">home</span>: /
  <span class="attribute">categories</span>: /categories
  <span class="attribute">archives</span>: /archives
  <span class="attribute">tags</span>: /tags
  <span class="attribute">Android</span>: /Android  # 加在这里
  <span class="attribute">Python</span>: /Python
  <span class="attribute">API</span>: /API
</code></pre><p>打开<code>\themes\next\languages\zh-Hans.yml</code>，这是简体中文的配置文件，如果你的博客用的是其他语言，请打开对应的文件。</p>
<pre><code><span class="attribute">menu</span>:
  <span class="attribute">home</span>: 首页
  <span class="attribute">archives</span>: 归档
  <span class="attribute">categories</span>: 分类
  <span class="attribute">tags</span>: 标签
  <span class="attribute">about</span>: 关于
  <span class="attribute">search</span>: 搜索
  <span class="attribute">commonweal</span>: 公益<span class="number">404</span>
  <span class="attribute">android</span>: Android
  <span class="attribute">python</span>: Python
  <span class="attribute">api</span>: API
</code></pre><p>注意这里第一列必须全为小写，否则效果是这样的：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/hexo/Hexo%20NexT%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/NexT%20%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE.png" alt=""></p>
<p>设置完后效果如下：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/hexo/Hexo%20NexT%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/%E9%A1%B6%E9%83%A8%E8%87%AA%E5%AE%9A%E4%B9%89page.jpg" alt="顶部自定义Page"></p>
<h2 id="自动弹出侧栏的BUG">自动弹出侧栏的BUG</h2><p>配置文件里写着：</p>
<pre><code><span class="preprocessor"># Sidebar, available value:</span>
<span class="preprocessor">#  - post    expand on posts automatically. Default.</span>
<span class="preprocessor">#  - always  expand for all pages automatically</span>
<span class="preprocessor">#  - hide    expand only when click on the sidebar toggle icon.</span>
<span class="preprocessor">#  - remove  Totally remove sidebar including sidebar toggle icon.</span>
</code></pre><p>但是当设置成<code>always</code>时，侧栏在文章页却不会自动弹出。在别的页面都能正常。</p>
<p>在<code>\themes\next\layout/_scripts/pages/post-details.swig</code>文件里看到这段代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Expand sidebar on post detail page by default, when post has a toc.</span></span><br><span class="line">motionMiddleWares.sidebar = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> $tocContent = $(<span class="string">'.post-toc-content'</span>);</span><br><span class="line">  <span class="keyword">if</span> (CONFIG.sidebar === <span class="string">'post'</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($tocContent.length &gt; <span class="number">0</span> &amp;&amp; $tocContent.html().trim().length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      displaySidebar();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>虽然没学过JS，但是看注释和 if 语句，都是仅在sidebar参数为<code>post</code>时才会自动展开，坑爹呢。在<code>if</code>里加上<code>always</code>判断，即可，修改后如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Expand sidebar on post detail page by default, when post has a toc.</span></span><br><span class="line">    motionMiddleWares.sidebar = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> $tocContent = $(<span class="string">'.post-toc-content'</span>);</span><br><span class="line">      <span class="keyword">if</span> (CONFIG.sidebar === <span class="string">'post'</span> || CONFIG.sidebar === <span class="string">'always'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($tocContent.length &gt; <span class="number">0</span> &amp;&amp; $tocContent.html().trim().length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          displaySidebar();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure></p>
<p>改完后顺手向作者反映了问题：<a href="https://github.com/iissnan/hexo-theme-next/issues/509" target="_blank" rel="external">设置sidebar: always，侧栏在文章页反而不展开</a></p>
<h2 id="使Page也自动弹出侧栏">使Page也自动弹出侧栏</h2><p>上一步中只有主页和文章页才会弹侧栏，自己添加的Page却不会。打开<code>\themes\next\layout\page.swig</code>，找到底部的<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="collection">&#123;% block sidebar %&#125;</span></span><br><span class="line">    <span class="collection">&#123;<span class="collection">&#123; sidebar_template.render<span class="list">(<span class="keyword">false</span>)</span> &#125;</span>&#125;</span></span><br><span class="line"><span class="collection">&#123;% endblock %&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>把<code>false</code>改成<code>true</code>。这时不管有没有目录，都会弹出侧栏。需要让它根据目录的度来决定是否弹出，继续修改，结果如下：<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">block</span> sidebar %&#125;</span><span class="xml"></span><br><span class="line">    </span><span class="variable">&#123;&#123; sidebar_template.render(true) &#125;&#125;</span><span class="xml"></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">endblock</span> %&#125;</span><span class="xml"></span><br><span class="line"></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">block</span> script_extra %&#125;</span><span class="xml"></span><br><span class="line">  </span><span class="template_tag">&#123;% <span class="keyword">include</span> '_scripts/pages/post-details.swig' %&#125;</span><span class="xml"></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">endblock</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<p>直接使用与文章页（post-details）相同的侧栏设置。</p>
<h2 id="修改页面宽度">修改页面宽度</h2><p>现在一般都用宽屏显示器，博客页面两侧留白太多，调整一下宽度。<br>打开<code>\themes\next\source\css\_common\components\post\post-expand.styl</code>文件，找到</p>
<pre><code><span class="constant">@media</span> (<span class="built_in">max</span>-width: <span class="number">767</span>px)
</code></pre><p>改为</p>
<pre><code><span class="constant">@media</span> (<span class="built_in">max</span>-width: <span class="number">1080</span>px)
</code></pre><p>打开<code>\themes\next\source\css\ _variables\base.styl</code>文件，找到</p>
<pre><code><span class="variable">$main-desktop</span>                   = <span class="number">960</span>px
<span class="variable">$main-desktop-large</span>             = <span class="number">1200</span>px
<span class="variable">$content-desktop</span>                = <span class="number">700</span>px
</code></pre><p>修改<code>$main-desktop</code>和<code>$content-desktop</code>的数值：</p>
<pre><code><span class="variable">$main-desktop</span>                   = <span class="number">1080</span>px
<span class="variable">$main-desktop-large</span>             = <span class="number">1200</span>px
<span class="variable">$content-desktop</span>                = <span class="number">810</span>px
</code></pre><p>Next.Mist主题的文章宽度至此改完了。如果你用的是Next.Pisces，还需要继续修改。<br>打开<code>\themes\next\source\css\_schemes\Pisces\_layout.styl</code>文件，将第4行的<code>width</code>改为<code>1080px</code>，修改后如下：</p>
<pre><code><span class="class">.header</span> <span class="rules">{
  <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;
  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span> auto</span></span>;
  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">1080px</span></span></span>;</span>
</code></pre><h2 id="修改字体大小">修改字体大小</h2><p>打开<code>\themes\next\source\css\ _variables\base.styl</code>文件，将<code>$font-size-base</code>改成16px：</p>
<pre><code><span class="variable">$font-size-base</span>           = <span class="number">16</span>px
</code></pre><h2 id="修改网页配色">修改网页配色</h2><h3 id="添加自定义颜色">添加自定义颜色</h3><p>取色可以用QQ，以<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431937554888869fb52b812243dda6103214cd61d0c2000" target="_blank" rel="external">廖雪峰的官方网站</a>为例，我想取其中代码块的颜色。打开QQ按<code>Ctrl+Alt+A</code>开始截图，将鼠标移到文字上，按住<code>Ctrl</code>键即可看到该颜色的16进制代码为：</p>
<p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/9/27/21/30/21/QQ%E5%8F%96%E8%89%B2.jpg" alt="QQ取色.jpg"></p>
<p>文字毕竟太细，鼠标很难准确移到笔画上，也可以改用Chrome的审查元素取色。按F12，先点箭头，再点代码块：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/9/27/21/38/36/Chrome%E5%8F%96%E8%89%B2.jpg" alt="Chrome取色.jpg"></p>
<p>style选项卡中就出现了字体颜色和背景色：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/9/27/21/41/8/Chrome%E5%8F%96%E8%89%B22.jpg" alt="Chrome取色2.jpg"></p>
<p>继续修改上一步中的<code>\themes\next\source\css\ _variables\base.styl</code>文件，找到文件开头的<code>colors for use across theme</code>，加入自定义颜色：</p>
<pre><code><span class="comment">// Colors</span>
<span class="comment">// colors for use across theme.</span>
<span class="comment">// --------------------------------------------------</span>
<span class="variable">$whitesmoke</span>   = <span class="hexcolor">#f5f5f5</span>
<span class="variable">$gainsboro</span>    = <span class="hexcolor">#eee</span>
<span class="variable">$gray</span>-lighter = <span class="hexcolor">#ddd</span>
<span class="variable">$grey</span>-light   = <span class="hexcolor">#ccc</span>
<span class="variable">$grey</span>         = <span class="hexcolor">#bbb</span>
<span class="variable">$grey</span>-dark    = <span class="hexcolor">#999</span>
<span class="variable">$grey</span>-dim     = <span class="hexcolor">#666</span>
<span class="variable">$black</span>-light  = <span class="hexcolor">#555</span>
<span class="variable">$black</span>-dim    = <span class="hexcolor">#333</span>
<span class="variable">$black</span>-deep   = <span class="hexcolor">#222</span>
<span class="variable">$red</span>          = <span class="hexcolor">#ff2a2a</span>
<span class="variable">$blue</span>-bright  = <span class="hexcolor">#87daff</span>
<span class="variable">$blue</span>         = <span class="hexcolor">#0684bd</span>
<span class="variable">$blue</span>-deep    = <span class="hexcolor">#262a30</span>
<span class="variable">$orange</span>       = <span class="hexcolor">#fc6423</span>
<span class="comment">// 下面是我自定义的颜色</span>
<span class="variable">$my</span>-link-blue = <span class="hexcolor">#0593d3</span>  <span class="comment">//链接颜色</span>
<span class="variable">$my</span>-link-hover-blue = <span class="hexcolor">#0477ab</span>  <span class="comment">//鼠标悬停后颜色</span>
<span class="variable">$my</span>-code-foreground = <span class="hexcolor">#dd0055</span>  <span class="comment">// 用``围出的代码块字体颜色</span>
<span class="variable">$my</span>-code-<span class="attribute">background</span> = <span class="hexcolor">#eee</span>  <span class="comment">// 用``围出的代码块背景颜色</span>
</code></pre><h3 id="修改超链接颜色">修改超链接颜色</h3><p>改掉这几行：</p>
<pre><code>// Global link color.
<span class="variable">$link-color</span>                   = <span class="variable">$my-link-blue</span>
<span class="variable">$link-hover-color</span>             = <span class="variable">$my-link-hover-blue</span>
<span class="variable">$link-decoration-color</span>        = <span class="variable">$gray-lighter</span>
<span class="variable">$link-decoration-hover-color</span>  = <span class="variable">$my-link-hover-blue</span>
</code></pre><p>效果如图：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/9/27/21/43/42/%E6%94%B9%E8%B6%85%E9%93%BE%E6%8E%A5%E9%A2%9C%E8%89%B2%E6%95%88%E6%9E%9C%E5%9B%BE.jpg" alt="改超链接颜色效果图.jpg"></p>
<h3 id="修改小型代码块颜色">修改小型代码块颜色</h3><p>修改<code>$code-background</code>和<code>$code-foreground</code>的值：</p>
<pre><code>// Code &amp; Code Blocks
// 用``围出的代码块
// --------------------------------------------------
<span class="variable">$code-font-family</span>               = <span class="variable">$font-family-monospace</span>
<span class="variable">$code-font-size</span>                 = <span class="number">15</span>px
<span class="variable">$code-background</span>                = <span class="variable">$my-code-background</span>
<span class="variable">$code-foreground</span>                = <span class="variable">$my-code-foreground</span>
<span class="variable">$code-border-radius</span>             = <span class="number">4</span>px
</code></pre><p>效果如图：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2016/9/27/21/47/12/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%95%88%E6%9E%9C.jpg" alt="代码块效果.jpg"></p>
<h2 id="替换字体库网址">替换字体库网址</h2><p>使用中发现网站打开速度巨慢，一开始以为是Github的原因，但是本地调试时也要一分钟才能打开。使用Chrome抓包发现：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/hexo/Hexo%20NexT%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/%E5%B7%A8%E6%85%A2%E7%9A%84%E6%89%93%E5%BC%80%E9%80%9F%E5%BA%A6.png" alt="巨慢无比的打开速度"></p>
<p>57.04 秒！</p>
<p>在<code>\themes\next</code>目录执行命令</p>
<pre><code><span class="keyword">grep</span> <span class="string">'css?family'</span> -r .<span class="regexp">/</span>
</code></pre><p>可以找到罪魁祸首就在<code>\themes\next\layout\_partials\head.swig</code>文件中：<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">if</span> theme.use_font_lato %&#125;</span><span class="xml"></span><br><span class="line">  </span><span class="template_tag">&#123;% <span class="keyword">if</span> config.<span class="keyword">language</span> === 'zh-Hans' %&#125;</span><span class="xml"></span><br><span class="line">    <span class="tag">&lt;<span class="title">link</span> <span class="attribute">href</span>=<span class="value">'//fonts.lug.ustc.edu.cn/css?family=Lato:300,400,700,400italic&amp;subset=latin,latin-ext'</span> <span class="attribute">rel</span>=<span class="value">'stylesheet'</span> <span class="attribute">type</span>=<span class="value">'text/css'</span>&gt;</span></span><br><span class="line">  </span><span class="template_tag">&#123;% <span class="keyword">else</span> %&#125;</span><span class="xml"></span><br><span class="line">    <span class="tag">&lt;<span class="title">link</span> <span class="attribute">href</span>=<span class="value">'//fonts.googleapis.com/css?family=Lato:300,400,700,400italic&amp;subset=latin,latin-ext'</span> <span class="attribute">rel</span>=<span class="value">'stylesheet'</span> <span class="attribute">type</span>=<span class="value">'text/css'</span>&gt;</span></span><br><span class="line">  </span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<p>作者的原意是想让语言设置为简体的用户都连接到中国科技大学的免费字体库，其他用户链接到Google，没想到这个链接挂了。使用<a href="http://ping.chinaz.com/" target="_blank" rel="external">Ping检测工具</a>可以看到<code>fonts.googleapis.com</code>被解析到了北京的服务器，速度相当快，所以我们直接使用Google的字体库就可以了：<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">if</span> theme.use_font_lato %&#125;</span><span class="xml"></span><br><span class="line">    <span class="tag">&lt;<span class="title">link</span> <span class="attribute">href</span>=<span class="value">'//fonts.googleapis.com/css?family=Lato:300,400,700,400italic&amp;subset=latin,latin-ext'</span> <span class="attribute">rel</span>=<span class="value">'stylesheet'</span> <span class="attribute">type</span>=<span class="value">'text/css'</span>&gt;</span></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<h2 id="修改底栏">修改底栏</h2><p>先准备一些代码。<a href="http://www.cnzz.com" target="_blank" rel="external">站长统计</a>，注册并获取统计代码：</p>
<pre><code>&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;
&lt;script <span class="keyword">type</span>=<span class="string">"text/javascript"</span>&gt;
  var cnzz_protocol = ((<span class="string">"https:"</span> == document.location.protocol) ? <span class="string">" https://"</span> : <span class="string">" http://"</span>);
  document.write(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' <span class="keyword">type</span>=<span class="symbol">'text</span>/javascript'%<span class="number">3</span>E%<span class="number">3</span>C/script%<span class="number">3</span>E<span class="string">"));
&lt;/script&gt;</span>
</code></pre><p>出于保护隐私的考虑，我编辑掉了部分关键代码，直接复制上面的无法使用。</p>
<p>百度和Google网站地图，上面已经安装了，这是插入到底栏的代码：</p>
<pre><code>&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;<span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"/sitemap.xml"</span>&gt;</span>Google网站地图<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>
&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;<span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"/baidusitemap.xml"</span>&gt;</span>百度网站地图<span class="tag">&lt;</span>
</code></pre><p><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">不蒜子</a>统计代码：</p>
<pre><code>&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;本页点击 <span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_page_pv"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span> 次
&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;本站总点击 <span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span> 次
&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;您是第 <span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span> 位访客

<span class="tag">&lt;<span class="title">script</span> <span class="attribute">async</span> <span class="attribute">src</span>=<span class="value">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined">
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</code></pre><p>百度自动推送代码，在页面被访问时，页面URL将立即被推送给百度，可以增加百度收录：</p>
<pre><code><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript">
(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);
    bp.src = <span class="string">'//push.zhanzhang.baidu.com/push.js'</span>;
    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];
    s.parentNode.insertBefore(bp, s);
})();
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</code></pre><p>下面把这些代码全加入模板中，打开<code>\themes\next\layout\_partials\footer.swig</code>，修改后的完整文件内容为：<br><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"copyright"</span> &gt;</span></span><br><span class="line">  </span><span class="template_tag">&#123;% <span class="keyword">set</span> current = <span class="function"><span class="keyword">date</span><span class="params">(Date.now()</span></span>, "YYYY") %&#125;</span><span class="xml"></span><br><span class="line">  &amp;copy; </span><span class="template_tag">&#123;% <span class="keyword">if</span> theme.since and theme.since != current %&#125;</span><span class="xml"> </span><span class="variable">&#123;&#123; theme.since &#125;&#125;</span><span class="xml"> - </span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span><br><span class="line">  <span class="tag">&lt;<span class="title">span</span> <span class="attribute">itemprop</span>=<span class="value">"copyrightYear"</span>&gt;</span></span><span class="variable">&#123;&#123; current &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"with-love"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"icon-next-heart fa fa-heart"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"author"</span> <span class="attribute">itemprop</span>=<span class="value">"copyrightHolder"</span>&gt;</span></span><span class="variable">&#123;&#123; config.author &#125;&#125;</span><span class="xml"></span><br><span class="line"></span><br><span class="line">  &amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;</span><br><span class="line">  <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="undefined"></span><br><span class="line">    var cnzz_protocol = (("https:" == document.location.protocol) ? " https://" : " http://");</span><br><span class="line">    document.write(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' type='text/javascript'%3E%3C/script%3E"));</span><br><span class="line">  </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  &amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;<span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"/sitemap.xml"</span>&gt;</span>Google网站地图<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">  &amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;<span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"/baidusitemap.xml"</span>&gt;</span>百度网站地图<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"powered-by"</span>&gt;</span></span><br><span class="line">  </span><span class="variable">&#123;&#123; __('footer.powered', '&lt;a class="theme-link" href="http://hexo.io"&gt;Hexo&lt;/a&gt;') &#125;&#125;</span><span class="xml"></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"theme-info"</span>&gt;</span></span><br><span class="line">  </span><span class="variable">&#123;&#123; __('footer.theme') &#125;&#125;</span><span class="xml"> -</span><br><span class="line">  <span class="tag">&lt;<span class="title">a</span> <span class="attribute">class</span>=<span class="value">"theme-link"</span> <span class="attribute">href</span>=<span class="value">"https://github.com/iissnan/hexo-theme-next"</span>&gt;</span></span><br><span class="line">    NexT</span><span class="template_tag">&#123;% <span class="keyword">if</span> theme.scheme %&#125;</span><span class="xml">.</span><span class="variable">&#123;&#123; theme.scheme &#125;&#125;</span><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span><br><span class="line">  <span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;本站总点击 <span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span> 次</span><br><span class="line">&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;您是第 <span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span> 位访客</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">async</span> <span class="attribute">src</span>=<span class="value">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">    bp.src = <span class="string">'//push.zhanzhang.baidu.com/push.js'</span>;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</span><br><span class="line">    s.parentNode.insertBefore(bp, s);</span><br><span class="line">&#125;)();</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="function"><span class="keyword">block</span></span> footer %&#125;</span><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">endblock</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<p>注意把上面的<code>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</code>换成你自己的站长统计代码</p>
<p>设置之后的底栏效果：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/hexo/Hexo%20NexT%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/%E5%BA%95%E6%A0%8F%E6%95%88%E6%9E%9C.png" alt="自定义的底栏"></p>
<h2 id="标题下添加「阅读量」">标题下添加「阅读量」</h2><p>上一节中有一段JS代码：</p>
<pre><code><span class="tag">&lt;<span class="title">script</span> <span class="attribute">async</span> <span class="attribute">src</span>=<span class="value">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined">
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</code></pre><p>现在要添加的阅读量统计也依赖这段代码，上面已经将它添加到页面中，这里可以直接调用它。</p>
<p>打开<code>/themes/next/layout/_macro/post.swig</code>，找到标签<code>&lt;div class=&quot;post-meta&quot;&gt;&lt;/div&gt;</code>，在该标签内部合适的位置添加：<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">if</span> not is_index %&#125;</span><span class="xml"></span><br><span class="line">  <span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_container_page_pv"</span>&gt;</span>&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;阅读量 <span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_page_pv"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span> 次<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line"></span><span class="template_tag">&#123;% <span class="keyword">endif</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<p>我放在这里：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/hexo/Hexo%20NexT%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/%E6%B7%BB%E5%8A%A0%E4%BB%A3%E7%A0%81.png" alt="红框内为新添加的代码"></p>
<p>效果：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/%E7%BC%96%E7%A8%8B/hexo/Hexo%20NexT%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/%E6%B7%BB%E5%8A%A0%E9%98%85%E8%AF%BB%E9%87%8F%E6%95%88%E6%9E%9C.png" alt="添加了阅读量统计"></p>
<h2 id="embed-js本地化">embed.js本地化</h2><p>使用Chrome抓包可以得到多说评论核心脚本embed.js的远程文件地址：</p>
<pre><code><span class="string">http:</span><span class="comment">//static.duoshuo.com/embed.js</span>
</code></pre><p>在浏览器中打开，右键另存为，放到<code>\theme\next\source\js\</code>文件夹中。</p>
<p>再打开<code>\themes\next\layout\_scripts\comments\duoshuo.swig</code>。搜索<code>//static.duoshuo.com/embed.js</code>，把它改成<code>/js/embed.js</code>。</p>
<p>如法炮制，把加载慢的.js都本地化。目前Github的响应速度非常快。</p>
<p>其他处理的js有：</p>
<ul>
<li><p><code>\themes\next\layout\_partials\searchswiftype.swig</code>中的</p>
<p>  //s.swiftypecdn.com/install/v2/st.js</p>
</li>
</ul>
<h2 id="美化多说评论">美化多说评论</h2><h3 id="添加浏览器、操作系统信息">添加浏览器、操作系统信息</h3><p>1.博客中找一条自己的留言，获取多说id：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/19/15/55/46/%E5%A4%9A%E8%AF%B4userid.jpg" alt="多说userid.jpg"></p>
<p>2.修改<code>embed.js</code>，也可以直接下载我的<a href="http://lovenight.github.io/js/src/embed.js">embed.js</a>。</p>
<p>打开上一步本地化的<code>embed.js</code>，在最顶部添加如下代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//管理员判断开始</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sskadmin</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ssk = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">if</span> (e.user_id == <span class="number">14198272</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (checkMobile()) &#123;</span><br><span class="line">            ssk = <span class="string">'&lt;span class="ua"&gt;&lt;span class="sskadmin"&gt;博主&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ssk = <span class="string">'&lt;span class="ua"&gt;&lt;span class="sskadmin"&gt;博主&lt;/span&gt;&lt;/span&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (checkMobile()) &#123;</span><br><span class="line">            ssk = <span class="string">'&lt;br&gt;&lt;br&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ssk;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//管理员判断结束</span></span><br><span class="line"><span class="comment">//移动客户端判断开始</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkMobile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> isiPad = navigator.userAgent.match(<span class="regexp">/iPad/i</span>) != <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (isiPad) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> isMobile = navigator.userAgent.match(<span class="regexp">/iphone|android|phone|mobile|wap|netfront|x11|java|opera mobi|opera mini|ucweb|windows ce|symbian|symbianos|series|webos|sony|blackberry|dopod|nokia|samsung|palmsource|xda|pieplus|meizu|midp|cldc|motorola|foma|docomo|up.browser|up.link|blazer|helio|hosin|huawei|novarra|coolpad|webos|techfaith|palmsource|alcatel|amoi|ktouch|nexian|ericsson|philips|sagem|wellcom|bunjalloo|maui|smartphone|iemobile|spice|bird|zte-|longcos|pantech|gionee|portalmmm|jig browser|hiptop|benq|haier|^lct|320x320|240x320|176x220/i</span>) != <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (isMobile) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//移动客户端判断结束</span></span><br><span class="line"><span class="comment">//显UA开始</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ua</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">    <span class="keyword">var</span> outputer = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">if</span> (r = e.match(<span class="regexp">/FireFox\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">"/"</span>);</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_firefox"&gt;&lt;i class="fa fa-firefox"&gt;&lt;/i&gt; FireFox'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Maxthon([\d]*)\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">"/"</span>);</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_maxthon"&gt;&lt;i class="fa fa-globe"&gt;&lt;/i&gt; Maxthon'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/BIDUBrowser([\d]*)\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">"/"</span>);</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_ucweb"&gt;&lt;i class="fa fa-globe"&gt;&lt;/i&gt; 百度浏览器'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/UBrowser([\d]*)\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">"/"</span>);</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_ucweb"&gt;&lt;i class="fa fa-globe"&gt;&lt;/i&gt; UCBrowser'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/UCBrowser([\d]*)\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">"/"</span>);</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_ucweb"&gt;&lt;i class="fa fa-globe"&gt;&lt;/i&gt; UCBrowser'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/MetaSr/ig</span>)) &#123;</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_sogou"&gt;&lt;i class="fa fa-globe"&gt;&lt;/i&gt; 搜狗浏览器'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/2345Explorer/ig</span>)) &#123;</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_2345explorer"&gt;&lt;i class="fa fa-globe"&gt;&lt;/i&gt; 2345王牌浏览器'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/2345chrome/ig</span>)) &#123;</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_2345chrome"&gt;&lt;i class="fa fa-globe"&gt;&lt;/i&gt; 2345加速浏览器'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/LBBROWSER/ig</span>)) &#123;</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_lbbrowser"&gt;&lt;i class="fa fa-globe"&gt;&lt;/i&gt; 猎豹安全浏览器'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/MicroMessenger\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">"/"</span>);</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_qq"&gt;&lt;i class="fa fa-weixin"&gt;&lt;/i&gt; 微信'</span></span><br><span class="line">        <span class="comment">/*.split('/')[0]*/</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/QQBrowser\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">"/"</span>);</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_qq"&gt;&lt;i class="fa fa-qq"&gt;&lt;/i&gt; QQ浏览器'</span></span><br><span class="line">        <span class="comment">/*.split('/')[0]*/</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/QQ\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">"/"</span>);</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_qq"&gt;&lt;i class="fa fa-qq"&gt;&lt;/i&gt; QQ浏览器'</span></span><br><span class="line">        <span class="comment">/*.split('/')[0]*/</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/MiuiBrowser\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">"/"</span>);</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_mi"&gt;&lt;i class="fa fa-globe"&gt;&lt;/i&gt; Miui浏览器'</span></span><br><span class="line">        <span class="comment">/*.split('/')[0]*/</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Chrome([\d]*)\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">"/"</span>);</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_chrome"&gt;&lt;i class="fa fa-chrome"&gt;&lt;/i&gt; Chrome'</span></span><br><span class="line">        <span class="comment">/*.split('.')[0]*/</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/safari\/([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">"/"</span>);</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_apple"&gt;&lt;i class="fa fa-safari"&gt;&lt;/i&gt; Safari'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Opera[\s|\/]([^\s]+)/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">var</span> r1 = r[<span class="number">0</span>].split(<span class="string">"/"</span>);</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_opera"&gt;&lt;i class="fa fa-opera"&gt;&lt;/i&gt; Opera'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/Trident\/7.0/gi</span>)) &#123;</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_ie"&gt;&lt;i class="fa fa-internet-explorer"&gt;&lt;/i&gt; IE 11'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (r = e.match(<span class="regexp">/MSIE\s([^\s|;]+)/gi</span>)) &#123;</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_ie"&gt;&lt;i class="fa fa-internet-explorer"&gt;&lt;/i&gt; IE'</span> + <span class="string">' '</span> + r[<span class="number">0</span>]</span><br><span class="line">        <span class="comment">/*.replace('MSIE', '').split('.')[0]*/</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        outputer = <span class="string">'&lt;span class="ua_other"&gt;&lt;i class="fa fa-globe"&gt;&lt;/i&gt; 其它浏览器'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (checkMobile()) &#123;</span><br><span class="line">        Mobile = <span class="string">'&lt;br&gt;&lt;br&gt;'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Mobile = <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> outputer + <span class="string">"&lt;/span&gt;"</span> + Mobile;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">os</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> os = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">if</span> (e.match(<span class="regexp">/win/ig</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.match(<span class="regexp">/nt 5.1/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">'&lt;span class="os_xp"&gt;&lt;i class="fa fa-windows"&gt;&lt;/i&gt; Windows XP'</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/nt 6.1/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">'&lt;span class="os_7"&gt;&lt;i class="fa fa-windows"&gt;&lt;/i&gt; Windows 7'</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/nt 6.2/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">'&lt;span class="os_8"&gt;&lt;i class="fa fa-windows"&gt;&lt;/i&gt; Windows 8'</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/nt 6.3/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">'&lt;span class="os_8_1"&gt;&lt;i class="fa fa-windows"&gt;&lt;/i&gt; Windows 8.1'</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/nt 10.0/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">'&lt;span class="os_8_1"&gt;&lt;i class="fa fa-windows"&gt;&lt;/i&gt; Windows 10'</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/nt 6.0/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">'&lt;span class="os_vista"&gt;&lt;i class="fa fa-windows"&gt;&lt;/i&gt; Windows Vista'</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/nt 5/ig</span>)) &#123;</span><br><span class="line">            os = <span class="string">'&lt;span class="os_2000"&gt;&lt;i class="fa fa-windows"&gt;&lt;/i&gt; Windows 2000'</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            os = <span class="string">'&lt;span class="os_windows"&gt;&lt;i class="fa fa-windows"&gt;&lt;/i&gt; Windows'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/android/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">'&lt;span class="os_android"&gt;&lt;i class="fa fa-android"&gt;&lt;/i&gt; Android'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/ubuntu/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">'&lt;span class="os_ubuntu"&gt;&lt;i class="fa fa-desktop"&gt;&lt;/i&gt; Ubuntu'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/linux/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">'&lt;span class="os_linux"&gt;&lt;i class="fa fa-linux"&gt;&lt;/i&gt; Linux'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/mac/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">'&lt;span class="os_mac"&gt;&lt;i class="fa fa-apple"&gt;&lt;/i&gt; Mac OS X'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/unix/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">'&lt;span class="os_unix"&gt;&lt;i class="fa fa-desktop"&gt;&lt;/i&gt; Unix'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.match(<span class="regexp">/symbian/ig</span>)) &#123;</span><br><span class="line">        os = <span class="string">'&lt;span class="os_nokia"&gt;&lt;i class="fa fa-mobile"&gt;&lt;/i&gt; Nokia SymbianOS'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        os = <span class="string">'&lt;span class="os_other"&gt;&lt;i class="fa fa-desktop"&gt;&lt;/i&gt; 其它操作系统'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> os + <span class="string">"&lt;/span&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显UA结束</span></span><br></pre></td></tr></table></figure></p>
<p>然后搜索</p>
<pre><code>data-qqt-account=<span class="string">"' + (r.qqt_account || "</span><span class="string">") + '"</span>&gt;' + u(r.<span class="property">name</span>) + <span class="string">"&lt;/span&gt;"</span>),
</code></pre><p>在后面添加</p>
<pre><code>t += <span class="function"><span class="title">sskadmin</span><span class="params">(s.author)</span></span> + <span class="string">"&lt;span class=\"ua\"&gt;"</span> + <span class="function"><span class="title">ua</span><span class="params">(s.agent)</span></span> + <span class="string">"&lt;/span&gt;&lt;span class=\"ua\"&gt;"</span> + <span class="function"><span class="title">os</span><span class="params">(s.agent)</span></span> + <span class="string">"&lt;/span&gt;"</span>,
</code></pre><p>3.添加对应CSS。打开<code>\themes\next\source\css\main.styl</code>，在文件开头插入代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*博主标记 CSS开始*/</span></span><br><span class="line"><span class="class">.sskadmin</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#00a67c</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#01B171</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">opacity</span>:<span class="value"> <span class="number">1</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="comment">/*博主标记 CSS结束*/</span></span><br><span class="line"><span class="comment">/*多说UA开始*/</span></span><br><span class="line"><span class="tag">span</span><span class="class">.ua</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span> <span class="number">1px</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#FFFFFF</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="comment">/*text-transform: Capitalize!important;</span><br><span class="line">    float: right!important;</span><br><span class="line">    line-height: 18px!important;*/</span></span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_other</span><span class="class">.os_other</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#ccc</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#fff</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#BBB</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_ie</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#428bca</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#357ebd</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_firefox</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#f0ad4e</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#eea236</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_maxthon</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#7373B9</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#7373B9</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_ucweb</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#FF740F</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#d43f3a</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_sogou</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#78ACE9</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#4cae4c</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_2345explorer</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#2478B8</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#4cae4c</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_2345chrome</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#F9D024</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#4cae4c</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_mi</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#FF4A00</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#4cae4c</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_lbbrowser</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#FC9D2E</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#4cae4c</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_chrome</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#EE6252</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#4cae4c</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_qq</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#3D88A8</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#4cae4c</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_apple</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#E95620</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#4cae4c</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.ua_opera</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#d9534f</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#d43f3a</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class">.os_vista</span>,<span class="class">.os_2000</span>,<span class="class">.os_windows</span>,<span class="class">.os_xp</span>,<span class="class">.os_7</span>,<span class="class">.os_8</span>,<span class="class">.os_8_1</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#39b3d7</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#46b8da</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="class">.os_android</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#98C13D</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#01B171</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.os_ubuntu</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#DD4814</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#01B171</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.os_linux</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#3A3A3A</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#1F1F1F</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.os_mac</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#666666</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#1F1F1F</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.os_unix</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#006600</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#1F1F1F</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.os_nokia</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#014485</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#1F1F1F</span><span class="important">!important</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span><span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="comment">/*多说UA结束*/</span></span><br></pre></td></tr></table></figure></p>
<p>效果：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/19/19/33/4/%E6%98%BEUA%E3%80%81OS%E3%80%81Root%E4%BF%A1%E6%81%AF.jpg" alt="显UA、OS、Root信息.jpg"></p>
<h3 id="动感头像">动感头像</h3><p>效果和CSS代码见<a href="http://www.vsay.cn/one-more-custom-css-lets-you-say-comments-city.html" target="_blank" rel="external">多说自定义CSS 让你的多说评论动感起来</a></p>
<p>然后打开多说后台，按下图操作，把代码粘贴进去<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/19/17/37/21/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%A4%9A%E8%AF%B4CSS.jpg" alt="自定义多说CSS.jpg"></p>
<p>大功告成。</p>
<p>我还添加了网上搜集的其他代码，详见注释：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*头像样式 圆形，鼠标移上会旋转*/</span></span><br><span class="line"><span class="preprocessor">#ds-reset .ds-avatar img&#123;</span></span><br><span class="line">    width:<span class="number">54</span>px;height:<span class="number">54</span>px; <span class="comment">/*设置图像的长和宽，这里要根据自己的评论框情况更改*/</span></span><br><span class="line">    border-radius: <span class="number">27</span>px;<span class="comment">/*设置图像圆角效果,在这里我直接设置了超过width/2的像素，即为圆形了*/</span></span><br><span class="line">    -webkit-border-radius: <span class="number">27</span>px;<span class="comment">/*圆角效果：兼容webkit浏览器*/</span></span><br><span class="line">    -moz-border-radius:<span class="number">27</span>px;</span><br><span class="line">    box-shadow: inset <span class="number">0</span> -<span class="number">1</span>px <span class="number">0</span> <span class="preprocessor">#<span class="number">3333</span>sf;<span class="comment">/*设置图像阴影效果*/</span></span></span><br><span class="line">    -webkit-box-shadow: inset <span class="number">0</span> -<span class="number">1</span>px <span class="number">0</span> <span class="preprocessor">#<span class="number">3333</span>sf;</span></span><br><span class="line">    -webkit-transition: <span class="number">0.4</span>s;</span><br><span class="line">    -webkit-transition: -webkit-transform <span class="number">0.4</span>s ease-out;</span><br><span class="line">    transition: transform <span class="number">0.4</span>s ease-out;<span class="comment">/*变化时间设置为0.4秒(变化动作即为下面的图像旋转360读）*/</span></span><br><span class="line">    -moz-transition: -moz-transform <span class="number">0.4</span>s ease-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="preprocessor">#ds-reset .ds-avatar img:hover&#123;<span class="comment">/*设置鼠标悬浮在头像时的CSS样式*/</span></span></span><br><span class="line">    box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">10</span>px <span class="preprocessor">#fff; rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">.6</span>), inset <span class="number">0</span> <span class="number">0</span> <span class="number">20</span>px rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">1</span>);</span></span><br><span class="line">    -webkit-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">10</span>px <span class="preprocessor">#fff; rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">.6</span>), inset <span class="number">0</span> <span class="number">0</span> <span class="number">20</span>px rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">1</span>);</span></span><br><span class="line">    transform: rotateZ(<span class="number">360</span>deg);<span class="comment">/*图像旋转360度*/</span></span><br><span class="line">    -webkit-transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">    -moz-transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*评论列表背景*/</span></span><br><span class="line"><span class="preprocessor">#ds-thread #ds-reset li.ds-post &#123;</span></span><br><span class="line">    background: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">.2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="preprocessor">#ds-thread #ds-reset li.ds-post:hover &#123;</span></span><br><span class="line">    background-color: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">.6</span>) !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*发布按钮背景 去掉背景图，修改底色，去掉文字阴影。*/</span></span><br><span class="line"><span class="preprocessor">#ds-thread #ds-reset .ds-post-button &#123;</span></span><br><span class="line">    background-image: none;</span><br><span class="line">    background: rgba(<span class="number">136</span>, <span class="number">172</span>, <span class="number">219</span>, <span class="number">.2</span>);</span><br><span class="line">    text-shadow: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*工具栏背景*/</span></span><br><span class="line"><span class="preprocessor">#ds-reset .ds-gradient-bg &#123;</span></span><br><span class="line">    background: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*评论框背景*/</span></span><br><span class="line"><span class="preprocessor">#ds-thread #ds-reset .ds-textarea-wrapper &#123;</span></span><br><span class="line">    background: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*未登录用户名字颜色，与登录用户一致*/</span></span><br><span class="line"><span class="preprocessor">#ds-thread #ds-reset .ds-user-name &#123;</span></span><br><span class="line">    color: <span class="preprocessor">#ef7c6c !important;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*用户名等超链接颜色*/</span></span><br><span class="line"><span class="preprocessor">#ds-thread #ds-reset .ds-highlight &#123;</span></span><br><span class="line">    color: <span class="preprocessor">#ef7c6c !important;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*评论、文本框字体， 默认字体偏小，稍作调整。*/</span></span><br><span class="line"><span class="preprocessor">#ds-thread #ds-reset .ds-comment-body p, #ds-thread #ds-reset .ds-textarea-wrapper textarea &#123;</span></span><br><span class="line">    font-size: <span class="number">1.15</span>em;</span><br><span class="line">    color: <span class="preprocessor">#<span class="number">717171</span>;</span></span><br><span class="line">    font-family: inherit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*社交账号登陆透明度*/</span></span><br><span class="line"><span class="preprocessor">#ds-thread #ds-reset .ds-login-buttons &#123;</span></span><br><span class="line">    opacity: <span class="number">.5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="preprocessor">#ds-thread #ds-reset .ds-login-buttons:hover &#123;</span></span><br><span class="line">    opacity: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="SEO优化">SEO优化</h2><p>更改首页标题格式为「关键词-网站名称 - 网站描述」。打开<code>\themes\next\layout\index.swig</code>文件，找到这行代码：</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template_tag">&#123;% <span class="keyword">block</span> title %&#125;</span><span class="xml"> </span><span class="variable">&#123;&#123; config.title &#125;&#125;</span><span class="xml"> </span><span class="template_tag">&#123;% <span class="keyword">endblock</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
<p>把它改成：<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125;</span><br><span class="line">  &#123;&#123; theme.keywords &#125;&#125; - &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="项目主页添加README">项目主页添加README</h2><p>Github上博客的仓库主页空荡荡的，没有README。如果把README.md放入source文件夹，<code>hexo g</code>生成时会被解析成html文件，放到public文件夹，生成时又会自动删除。</p>
<p>解决方法很简单，在source目录下新建文件<code>README.mdown</code>，在里面写README即可。<code>hexo g</code>会把它复制到public文件夹，且不会被解析成html</p>
<hr>
<h1 id="Git相关">Git相关</h1><h2 id="多PC同步">多PC同步</h2><p>需要在公司和家里电脑上写博客，打包拷来拷去太麻烦。我使用<a href="https://coding.net/" target="_blank" rel="external">Coding.net</a>的免费私有仓库来同步hexo文件夹。</p>
<ul>
<li><p>1.删除根目录和<code>\theme\next\</code>下的<code>.git</code>文件夹。</p>
</li>
<li><p>2.修改根目录下的<code>.gitignore</code>文件为：</p>
</li>
</ul>
<pre><code>/<span class="class">.deploy_git</span>
/public
</code></pre><p>其实第一行留不留都一样，它是hexo默认的git配置文件夹，里面也有一个<code>.git</code>，使<code>/.deploy_git</code>里的文件无法被提交。<code>public</code>是每次<code>hexo g</code>新生成的静态博客文件，不需要同步。</p>
<ul>
<li>3.push &amp; pull</li>
</ul>
<p>如果没接触过Git，可以看这本书学习一个：<a href="http://git-scm.com/book/zh/v2" target="_blank" rel="external">《Pro Git》</a></p>
<h2 id="pull失败：Filename_too_long">pull失败：Filename too long</h2><p>在git bash里面，输入</p>
<pre><code>git config --<span class="keyword">global</span> core.longpaths <span class="literal">true</span>
</code></pre><h2 id="关闭换行符警告">关闭换行符警告</h2><p>部署时会出现如下警告</p>
<pre><code><span class="label">warning</span>: LF will <span class="keyword">be </span>replaced <span class="keyword">by </span>CRLF
</code></pre><p>LF为换行符，CR为回车符。Windows结束一行用CRLF，Mac和Linux用LF。Git默认在你提交时自动地把行结束符CRLF转换成LF，而在签出代码时把LF转换成CRLF。</p>
<p>要关闭警告，执行如下命令：</p>
<pre><code>git config --<span class="keyword">global</span> core.autocrlf <span class="literal">false</span>
</code></pre><p>上述命令中：</p>
<blockquote>
<p>false表示取消自动转换功能。适合纯Windows<br>true表示提交代码时把CRLF转换成LF，签出时LF转换成CRLF。适合多平台协作<br>input表示提交时把CRLF转换成LF，签出时不转换。适合纯Linux或Mac</p>
</blockquote>
<p><strong>补充</strong>：<br>Git还提供了一个换行符检查功能<code>core.safecrlf</code>，可以在提交时检查文件是否混用了不同风格的换行符。可以用同样的命令更改设置。<br>选项如下：</p>
<blockquote>
<p>false - 不做任何检查<br>warn - 在提交时检查并警告<br>true - 在提交时检查，如果发现混用则拒绝提交</p>
</blockquote>
<p>建议使用最严格的 true 选项</p>
<h2 id="博客部署的message">博客部署的message</h2><p><code>\node_modules\hexo-deployer-git\lib\deployer.js</code>文件末尾找到这一句：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">Site</span> <span class="symbol">updated:</span> <span class="expansion">&#123;&#123; now(<span class="string">'YYYY-MM-DD HH:mm:ss'</span>) &#125;&#125;</span>.</span><br></pre></td></tr></table></figure></p>
<p>改得个性化一点：<br><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">这个勤奋的家伙又更新了: </span><span class="expression">&#123;&#123; <span class="variable">now</span>(\'<span class="variable">YYYY-MM-DD</span> <span class="variable">HH</span>:<span class="variable">mm</span>:<span class="variable">ss</span>\') &#125;&#125;</span><span class="xml">.</span></span><br></pre></td></tr></table></figure></p>
<p>在Github对应项目中可以看到效果：<br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/2015/11/29/21/53/44/%E5%8F%88%E6%9B%B4%E6%96%B0%E4%BA%86.png" alt="又更新了.png"></p>
<hr>
<h1 id="参考资料">参考资料</h1><ul>
<li><a href="http://zipperary.com/categories/hexo/" target="_blank" rel="external">hexo系列教程</a></li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客</a></li>
<li><a href="http://yangjian.me/pacman/hello/introducing-pacman-theme/" target="_blank" rel="external">pacman主题介绍</a></li>
<li><a href="http://www.yingsec.com/2015/11/running-time-js/" target="_blank" rel="external">使用脚本添加“本站已运行 X 天”</a></li>
<li><a href="http://wuchong.me/blog/2014/11/20/how-to-use-jacman/" target="_blank" rel="external">如何使用 Jacman 主题</a></li>
<li><a href="http://segmentfault.com/a/1190000002592993" target="_blank" rel="external">Hexo 3.0 静态博客使用指南</a></li>
<li><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">不蒜子-搞定你的网站计数</a></li>
<li><a href="https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0" target="_blank" rel="external">Breaking Changes in Hexo 3.0</a></li>
<li><a href="http://vkki.me/2014/02/04/beautify-your-hexo/" target="_blank" rel="external">美化你的Hexo站点</a></li>
<li><a href="http://www.qinbin.me/git-core-autocrlf%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/" target="_blank" rel="external">git core.autocrlf配置说明</a></li>
<li><a href="http://chitanda.me/2015/06/18/hexo-sync-in-multiple-pc/" target="_blank" rel="external">利用git解决hexo博客多PC间同步问题</a></li>
<li><a href="http://www.selfrebuild.net/2015/06/24/Github-Hexo-Next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E5%AE%9A%E5%88%B6/" target="_blank" rel="external">Hexo博客优化 - Next主题个性化定制</a></li>
<li><a href="https://www.mxgw.info/t/filename-too-long-in-git.html" target="_blank" rel="external">win下面的git客户端提示FIlename too long解决方法</a></li>
<li><a href="http://wsgzao.github.io/post/duoshuo" target="_blank" rel="external">多说自定义CSS动感头像和多说评论显示User Agent的那些小事</a></li>
<li><a href="http://www.vsay.cn/one-more-custom-css-lets-you-say-comments-city.html" target="_blank" rel="external">多说自定义CSS 让你的多说评论动感起来</a></li>
<li><a href="http://moxfive.xyz/2015/09/29/duoshuo-style/" target="_blank" rel="external">多说样式折腾记录 — 添加 UA 浏览器标识、旋转头像等</a></li>
<li><a href="https://haiyusun.github.io/2016/09/21/%E5%9F%BA%E4%BA%8EHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0Github-Pages/" target="_blank" rel="external">基于Hexo搭建博客并部署到Github Pages</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HelloWorld！]]></title>
      <url>http://lovenight.github.io/2015/11/09/HelloWorld/</url>
      <content type="html"><![CDATA[<p>按网上的教程终于配置好了Hexo，其实挺简单的，不过由于Hexo版本的原因，遇到不少坑。顺便学了SSH，push起来方便不少。</p>
<p>稍后把此次博客搭建心得整理好发出来。</p>
<p>以前用新浪的博客，可惜不支持代码块和Markdown，主题近十年没怎么变化，三天两头收到无聊的纸条、转发消息。后来转战CSDN，主题和Markdown非常丑，右上角定期出现广告，没法取消。有次还无故封了博客，找管理员询问得知是误操作。试了博客园，后台有无用的新闻、文章、日志分类，无法取消，默认的代码块不显示行数，Markdown比CSDN还丑。</p>
<a id="more"></a>
<p>博客还没配置完，先发这篇文章试试效果。</p>
<p>Python：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Hello World"</span>)</span><br></pre></td></tr></table></figure>
<p>Java：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello World"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>结束</p>
]]></content>
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[Tagcloud]]></title>
      <url>http://lovenight.github.io/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[分类]]></title>
      <url>http://lovenight.github.io/categories/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title></title>
      <url>http://lovenight.github.io/baidu_verify_G8VkOo9EGm.html</url>
      <content type="html"><![CDATA[G8VkOo9EGm]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python Notes]]></title>
      <url>http://lovenight.github.io/Python/index.html</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">Python资源汇总</blockquote>


<h2 id="基础知识">基础知识</h2><p><a href="http://lovenight.github.io/2016/09/25/Python-3-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">Python学习笔记</a></p>
<h2 id="Python_Docs">Python Docs</h2><ul>
<li><a href="https://docs.python.org/3.5/index.html" target="_blank" rel="external">Python 3.5.0 documentation</a></li>
<li><a href="http://7xo8t2.com1.z0.glb.clouddn.com/file/Python%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%AD%E6%96%87%E7%89%88.pdf" target="_blank" rel="external">Python标准库中文版.pdf</a></li>
</ul>
<hr>
<h2 id="实用代码">实用代码</h2><h3 id="简易Web服务">简易Web服务</h3><p>终端输入：<code>python -m http.server 8000</code><br>浏览器打开<code>localhost:8000</code>即可当FTP使用</p>
<h3 id="获取脚本所在的目录">获取脚本所在的目录</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 确切地说，__file__是模块所在的文件</span></span><br><span class="line"><span class="comment"># 如果该模块从其他文件中导入，则显示其他文件的目录</span></span><br><span class="line">print(__file__)   <span class="comment"># F:\hexo\test.py</span></span><br><span class="line">print(os.path.dirname(__file__))  <span class="comment"># F:\hexo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 始终显示主执行文件的目录</span></span><br><span class="line">print(sys.path[<span class="number">0</span>])  <span class="comment"># F:\hexo\test.py</span></span><br><span class="line">print(os.path.dirname(sys.path[<span class="number">0</span>]))  <span class="comment"># F:\hexo</span></span><br><span class="line">print(sys.argv[<span class="number">0</span>])  <span class="comment"># F:\hexo</span></span><br></pre></td></tr></table></figure>
<h3 id="拖曳文件到Python脚本图标上，获取文件名">拖曳文件到Python脚本图标上，获取文件名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># sys.argv[0]为脚本本身，sys.argv[1:]为其他文件</span></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) == <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">"请将文件拖曳到本脚本！"</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line">    files = sys.argv[<span class="number">1</span>:]</span><br></pre></td></tr></table></figure>
<h3 id="解析csv">解析csv</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv  <span class="comment"># 标准库</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 由于csv库有自己的换行符，需要把open方法的newline设置为空，否则在Excel中会出现数据隔行。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入</span></span><br><span class="line"><span class="keyword">with</span> open(filename, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>, newline=<span class="string">''</span>) <span class="keyword">as</span> f:</span><br><span class="line">    writer = csv.writer(f)</span><br><span class="line">    writer.writerow(row)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取</span></span><br><span class="line"><span class="keyword">with</span> open(filename, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>, newline=<span class="string">''</span>) <span class="keyword">as</span> f:</span><br><span class="line">    reader = csv.reader(f)</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> reader:</span><br><span class="line">        print(_)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不使用csv标准库，自己解析</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'t.csv'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    rows = [line.strip().split(<span class="string">','</span>) <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines()]</span><br></pre></td></tr></table></figure>
<h3 id="如果文件已存在，则删除">如果文件已存在，则删除</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> os.path.exists(save_file):</span><br><span class="line">    os.remove(save_file)</span><br></pre></td></tr></table></figure>
<h3 id="打开文件">打开文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess <span class="comment"># 自带模块</span></span><br><span class="line">subprocess.call(fileName, shell=<span class="keyword">True</span>)  <span class="comment"># 打开文件</span></span><br></pre></td></tr></table></figure>
<h3 id="性能分析使用cProfile模块">性能分析使用cProfile模块</h3><p>命令行输入：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python</span> -<span class="keyword">m</span> cProfile your.<span class="keyword">py</span></span><br></pre></td></tr></table></figure></p>
<h3 id="一维数组变二维">一维数组变二维</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>]</span><br><span class="line">g = iter(a)</span><br><span class="line">res = [[next(g) <span class="keyword">for</span> _ <span class="keyword">in</span> range(n)] <span class="keyword">for</span> _ <span class="keyword">in</span> range(n)]</span><br><span class="line"><span class="comment"># [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19], [20, 21, 22, 23, 24]]</span></span><br></pre></td></tr></table></figure>
<h3 id="二维矩阵转置">二维矩阵转置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br><span class="line">[[row[col] <span class="keyword">for</span> row <span class="keyword">in</span> a] <span class="keyword">for</span> col <span class="keyword">in</span> range(len(a[<span class="number">0</span>]))] <span class="comment"># 方法一</span></span><br><span class="line">list(map(list,zip(*a))) <span class="comment"># 方法二</span></span><br><span class="line"><span class="comment"># 结果都是：[[1, 4, 7], [2, 5, 8], [3, 6, 9]]</span></span><br></pre></td></tr></table></figure>
<h3 id="使用zip合并相邻的列表项">使用zip合并相邻的列表项</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">list(zip(*([iter(a)] * <span class="number">2</span>)))   <span class="comment"># [(1, 2), (3, 4), (5, 6)]</span></span><br><span class="line">list(zip(a[::<span class="number">2</span>], a[<span class="number">1</span>::<span class="number">2</span>]))   <span class="comment"># [(1, 2), (3, 4), (5, 6)]</span></span><br><span class="line">list(zip(a[::<span class="number">3</span>], a[<span class="number">1</span>::<span class="number">3</span>], a[<span class="number">2</span>::<span class="number">3</span>]))   <span class="comment"># [(1, 2, 3), (4, 5, 6)]</span></span><br><span class="line"><span class="comment"># 通用公式</span></span><br><span class="line">f1 = <span class="keyword">lambda</span> a, k: zip(*([iter(a)] * k))</span><br><span class="line">f2 = <span class="keyword">lambda</span> a, k: zip(*(a[i::k] <span class="keyword">for</span> i <span class="keyword">in</span> range(k)))</span><br></pre></td></tr></table></figure>
<h3 id="使用zip反转字典">使用zip反转字典</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">m = &#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">2</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'d'</span>: <span class="number">4</span>&#125;</span><br><span class="line">list(zip(m.values(), m.keys()))   <span class="comment"># [(4, 'd'), (1, 'a'), (3, 'c'), (2, 'b')]</span></span><br></pre></td></tr></table></figure>
<h3 id="random-sample(list,_n)通常用来产生不重复的n位数字">random.sample(list, n)通常用来产生不重复的n位数字</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> int(<span class="string">''</span>.join(map(str, random.sample(range(<span class="number">10</span>), <span class="number">10</span>))))</span><br><span class="line"><span class="comment">#3571490628</span></span><br></pre></td></tr></table></figure>
<h3 id="enumerate会将数组或列表组成一个索引序列">enumerate会将数组或列表组成一个索引序列</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> index，text <span class="keyword">in</span> enumerate(list)):</span><br><span class="line">    <span class="keyword">print</span> index ,text</span><br></pre></td></tr></table></figure>
<h3 id="判断一个数是不是素数">判断一个数是不是素数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lambda</span> x:<span class="keyword">not</span>[x%i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,x/<span class="number">2</span>+<span class="number">1</span>) <span class="keyword">if</span> x%i == <span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<h3 id="多序列同时迭代">多序列同时迭代</h3><p><strong>注：Iterator指惰性序列</strong>，list、turple等是Iteratable，但不是Iterator<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">b = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">### 以下都是Iterator，可作用于二个或以上序列</span></span><br><span class="line">zip(a, b)   <span class="comment"># (1,'a'), (2, 'b'), (3, 'c')</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> zip_longest</span><br><span class="line">zip_longest(a, b)   <span class="comment"># (1, 'a'), (2, 'b'), (3, 'c'), (4, None)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line">chain(a, b)   <span class="comment"># [1, 2, 3, 4, 'a', 'b', 'c']</span></span><br></pre></td></tr></table></figure></p>
<h3 id="嵌套序列变平">嵌套序列变平</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flatten</span><span class="params">(items, ignore_types=<span class="params">(str, bytes)</span>)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> items:</span><br><span class="line">        <span class="keyword">if</span> isinstance(x, Iterable) <span class="keyword">and</span> <span class="keyword">not</span> isinstance(x, ignore_types):</span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">from</span> flatten(x)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">yield</span> x</span><br><span class="line"></span><br><span class="line">items = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>, [<span class="number">5</span>, <span class="number">6</span>], <span class="number">7</span>], <span class="number">8</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> flatten(items):</span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure>
<h3 id="迭代多个有序排列数组（多路归并排序）">迭代多个有序排列数组（多路归并排序）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterator</span><br><span class="line">a = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>]</span><br><span class="line">b = [<span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">11</span>]</span><br><span class="line">heapq.merge(a, b) <span class="comment"># 1, 2, 4, 5, 6, 7, 10, 11</span></span><br></pre></td></tr></table></figure>
<h3 id="一行筛质数">一行筛质数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filter(<span class="keyword">lambda</span> x: all(map(<span class="keyword">lambda</span> p: x % p != <span class="number">0</span>, range(<span class="number">2</span>, x))), range(<span class="number">2</span>, n))</span><br></pre></td></tr></table></figure>
<h3 id="对_array_按照第二列降序排序并取前_10_个">对 array 按照第二列降序排序并取前 10 个</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sorted(array, key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="keyword">True</span>)[:<span class="number">10</span>]</span><br></pre></td></tr></table></figure>
<h3 id="对两个字符串（这里假设等长）做异或操作">对两个字符串（这里假设等长）做异或操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">""</span>.join([chr(ord(x) ^ ord(y)) <span class="keyword">for</span> (x, y) <span class="keyword">in</span> zip(a, b)])</span><br></pre></td></tr></table></figure>
<h3 id="转置矩阵">转置矩阵</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">m = [[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]]</span><br><span class="line">zip(*m)   <span class="comment"># *是把list中的项当成可选参数传进去</span></span><br></pre></td></tr></table></figure>
<h3 id="链式比较：">链式比较：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">3</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line"><span class="number">1</span> &lt;= b &lt;= a &lt; <span class="number">10</span>  <span class="comment">#True</span></span><br></pre></td></tr></table></figure>
<h3 id="真值测试">真值测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">'Tim'</span></span><br><span class="line">langs = [<span class="string">'AS3'</span>, <span class="string">'Lua'</span>, <span class="string">'C'</span>]</span><br><span class="line">info = &#123;<span class="string">'name'</span>: <span class="string">'Tim'</span>, <span class="string">'sex'</span>: <span class="string">'Male'</span>, <span class="string">'age'</span>:<span class="number">23</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> name <span class="keyword">and</span> langs <span class="keyword">and</span> info:</span><br><span class="line">    print(<span class="string">'All True!'</span>)  <span class="comment">#All True!</span></span><br></pre></td></tr></table></figure>
<h3 id="字典默认值">字典默认值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'name'</span>:<span class="string">'Tim'</span>, <span class="string">'age'</span>:<span class="number">23</span>&#125;</span><br><span class="line"></span><br><span class="line">dic[<span class="string">'workage'</span>] = dic.get(<span class="string">'workage'</span>,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line"><span class="comment">#dic = &#123;'age': 23, 'workage': 1, 'name': 'Tim'&#125;</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="技术博客">技术博客</h2><ul>
<li><a href="http://aljun.me/" target="_blank" rel="external">gaga salamer</a></li>
<li><a href="http://opslinux.com/" target="_blank" rel="external">创e</a> 一个运维工程师的python自动化运维实践。</li>
<li><a href="http://blog.csdn.net/cwyalpha?viewmode=contents" target="_blank" rel="external">cwyalpha的博客</a> Python爬虫学习记录系列</li>
<li><a href="http://xlzd.me/" target="_blank" rel="external">xlzd</a></li>
<li><a href="http://playbear.github.io/" target="_blank" rel="external">小信’Blog</a></li>
<li><a href="https://www.leavesongs.com/" target="_blank" rel="external">离别歌</a>：乌云核心白帽子、混迹于各大社区的伪装程序猿，喜欢各种代码与审计、linux运维与内网、python web开发。</li>
</ul>
<hr>
<h2 id="练习资源">练习资源</h2><ul>
<li><a href="http://www.heibanke.com/lesson/crawler_ex00/" target="_blank" rel="external">黑板客爬虫闯关</a></li>
<li><a href="http://www.zhihu.com/question/27621722" target="_blank" rel="external">能利用爬虫技术做到哪些很酷很有趣很有用的事情</a></li>
<li><a href="http://www.zhihu.com/question/21358581" target="_blank" rel="external">你是如何开始能写python爬虫？</a></li>
<li><a href="http://www.zhihu.com/question/31830544" target="_blank" rel="external">Python 有哪些一千行左右的经典练手项目？</a></li>
<li><a href="http://www.zhihu.com/question/36132174" target="_blank" rel="external">有哪些网站用爬虫爬取能得到很有价值的数据？</a></li>
</ul>
<hr>
<h2 id="学习资料">学习资料</h2><ul>
<li><a href="http://www.cnblogs.com/vamei/archive/2012/09/13/2682778.html" target="_blank" rel="external">Python快速教程</a></li>
<li><a href="http://cuiqingcai.com/1052.html" target="_blank" rel="external">Python爬虫学习系列教程</a></li>
<li><a href="http://www.cnblogs.com/huxi/archive/2010/07/04/1771073.html" target="_blank" rel="external">Python正则表达式指南</a></li>
<li><a href="http://www.pythoner.cn/course/" target="_blank" rel="external">pythoner.cn视频课程</a> 截至2015年9月30号，上面发布了7个相关视频教程， 内容覆盖了面向对象知识体系， Flask入门， Django入门， 多线程开发， 文件处理，网络爬虫，图形开发的内容。</li>
<li><a href="http://pm.readthedocs.org/zh_CN/latest/index.html" target="_blank" rel="external">Python项目构建实践</a>  Python项目构建最佳实践。 用Python开发项目的童鞋可以看看别人的实践， 有一些指导意义。</li>
<li><a href="http://docs.pythontab.com/flask/flask0.10/" target="_blank" rel="external">Flask 教程</a></li>
<li><a href="http://www.pythondoc.com/flask/" target="_blank" rel="external">Flask开发文档</a></li>
<li><a href="http://www.pythondoc.com/flask-mega-tutorial/" target="_blank" rel="external">Flask大型教程</a> 本系列是作者平时使用 Flask 微框架编写应用的经验之谈</li>
<li><a href="http://docs.pythontab.com/tornado/introduction-to-tornado/" target="_blank" rel="external">Tornado入门教程</a></li>
<li><a href="http://www.pythondoc.com/" target="_blank" rel="external">Python中文学习大本营</a></li>
<li>《编写高质量代码 改善Python程序的91个建议.pdf》</li>
<li><a href="http://www.dongwm.com/" target="_blank" rel="external">聊聊python面试这件事儿</a></li>
<li><a href="http://www.cnblogs.com/haozi0804/p/4736113.html" target="_blank" rel="external">Python开发入门与实战</a> Django教程</li>
<li><a href="http://python3-cookbook.readthedocs.org/zh_CN/latest/copyright.html" target="_blank" rel="external">Python 3 CookBook</a></li>
</ul>
<hr>
<h2 id="常用库">常用库</h2><ul>
<li><a href="https://pypi.python.org/pypi" target="_blank" rel="external">Python Package Index</a> 检索各种Python库</li>
<li><a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="external">Python Extension Package For Windows</a>：编译好的Python库</li>
</ul>
<p><strong>可以直接根据下面的名字用pip命令安装</strong> eg：</p>
<pre><code>pip <span class="keyword">install</span> BeautifulSoup4
</code></pre><p>批量安装第三方库：</p>
<pre><code>pip install -r requirements.txt --allow-<span class="built_in">all</span>-<span class="type">external</span>
</code></pre><p>其中，<code>requirments.txt</code>的内容为:</p>
<pre><code>Flask==<span class="number">0.9</span>
Jinja2==<span class="number">2.7</span><span class="number">.2</span>
Werkzeug==<span class="number">0.8</span><span class="number">.3</span>
gunicorn==<span class="number">0.17</span><span class="number">.2</span>
</code></pre><ul>
<li><a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/" target="_blank" rel="external">BeautifulSoup4</a>：从HTML或XML文件中提取数据</li>
<li><a href="http://lxml.de/" target="_blank" rel="external">lxml</a>：HTML/XML的解析器，可与BeautifulSoup配套使用。如果安装出错请看这里：<a href="http://blog.csdn.net/kinglearnjava/article/details/49469881" target="_blank" rel="external">Python 3 安装 lxml</a></li>
<li><a href="https://github.com/gawel/pyquery" target="_blank" rel="external">pyquery</a>：使用jquery语法解析HTML，需要先安装lxml。用法：<a href="http://blog.itpub.net/22166274/viewspace-1183937/" target="_blank" rel="external">python数据抓取之pyquery包 </a></li>
<li><a href="https://github.com/kennethreitz/requests" target="_blank" rel="external">requests</a>：比python自带的urllib更人性化</li>
<li>xlrd，xlwt：分别用于读、写Excel</li>
<li><a href="http://docs.seleniumhq.org/docs/" target="_blank" rel="external">selenium</a>：用于Web应用程序测试</li>
<li>ipython，pyreadline：ipython能够逐行显示python代码的运行结果，能够更好的调试python代码，并且有tab自动补全功能。后者是配色</li>
<li><a href="https://github.com/aaronsw/html2text" target="_blank" rel="external">html2text</a>：从HTML中提取易于阅读的文本</li>
<li><a href="http://pandas.pydata.org/" target="_blank" rel="external">pandas</a>：数据分析。<a href="http://pandas.pydata.org/pandas-docs/stable/cookbook.html#cookbook" target="_blank" rel="external">CookBook</a></li>
<li><a href="https://github.com/fxsjy/jieba" target="_blank" rel="external">jieba</a>：中文分词</li>
<li><a href="https://github.com/mozillazg/python-pinyin" target="_blank" rel="external">pypinyin</a>：将汉语转为拼音。可以用于汉字注音、排序、检索。</li>
<li><a href="https://github.com/amoffat/sh" target="_blank" rel="external">sh</a>：可以用 Python 函数的语法去调用 shell 命令</li>
<li><a href="https://pythonhosted.org/watchdog/" target="_blank" rel="external">Watchdog</a>：监视文件系统改动</li>
<li><a href="https://github.com/jaraco/path.py" target="_blank" rel="external">Path</a>：简化文件系统相关操作</li>
<li><a href="http://sphinx-doc.org/" target="_blank" rel="external">Sphinx</a>：爱上写文档</li>
<li><a href="https://github.com/mitsuhiko/flask" target="_blank" rel="external">flask</a>：Web框架</li>
<li><a href="https://github.com/whtsky/WeRoBot" target="_blank" rel="external">WeRoBot</a>：微信机器人框架</li>
<li><a href="https://github.com/noamraph/tqdm" target="_blank" rel="external">tqdm</a>：在长循环中添加一个进度提示信息，用户只需要封装任意的迭代器 tqdm(iterator)。</li>
</ul>
<hr>
<h2 id="pip_常用命令">pip 常用命令</h2><pre><code>pip --help                        <span class="comment"># 帮助文档</span>
pip <span class="keyword">install</span> SomePackage           <span class="comment"># 安装最新版本</span>
pip <span class="keyword">install</span> SomePackage==<span class="number">1.0</span>.<span class="number">4</span>    <span class="comment"># 安装指定版本</span>
pip <span class="keyword">install</span> 'SomePackage&gt;=<span class="number">1.0</span>.<span class="number">4</span>'  <span class="comment"># 限制最低版本</span>
pip uninstall SomePackage         <span class="comment"># 卸载</span>
pip list                          <span class="comment"># 查看已安装</span>
pip list --outdated               <span class="comment"># 查看可升级</span>
pip <span class="keyword">install</span> --upgrade SomePackage <span class="comment"># 升级</span>
pip show --files SomePackage      <span class="comment"># 相关文件及路径等信息</span>
pip freeze &gt; F:\requirements.txt  <span class="comment"># 导出所有第三方库到文件</span>
pip <span class="keyword">install</span> -r requirements.txt   <span class="comment"># 根据文件安装对应的软件包</span>
<span class="comment"># 下面是批量升级所有可更新的第三方库，需要在git bash中运行</span>
pip list --outdated | grep '^[a-z]* (' | cut -d <span class="string">" "</span> -f <span class="number">1</span> | xargs pip <span class="keyword">install</span> -U
</code></pre><hr>
<h2 id="IDE与编辑器">IDE与编辑器</h2><ul>
<li><a href="http://www.jetbrains.com/pycharm/download/" target="_blank" rel="external">PyCharm</a></li>
<li>Sublime Text 3 插件：<br>代码自动完成<a href="http://damnwidget.github.io/anaconda/#carousel-features" target="_blank" rel="external">Anaconda</a> 。安装后代码会因PEP 8格式检查而出现白框，在Sublime &gt; Preferences &gt; Package Settings &gt; Anaconda &gt; Settings User 中添加如下代码即可解决：<code>{&quot;anaconda_linting&quot;: false}</code>。</li>
</ul>
<p><a href="http://blog.csdn.net/kinglearnjava/article/details/49107253" target="_blank" rel="external">《SublimeText3 运行Python控制台不能输出中文的解决方法》</a></p>
<hr>
<h2 id="论坛与网站">论坛与网站</h2><ul>
<li><a href="http://www.pythonfan.org/forum.php" target="_blank" rel="external">Python爱好者</a></li>
<li><a href="http://www.pythontip.com/" target="_blank" rel="external">PythonTip</a> Python主题网站</li>
</ul>
<hr>
<h2 id="经验教训">经验教训</h2><h3 id="os_库">os 库</h3><ul>
<li><code>os.path.isdir()</code>方法应该传入带绝对路径的文件名，如：<code>r&#39;e:\java&#39;</code>，如果只是传入文件名，如<code>&#39;java&#39;</code>，该方法只会在当前工作目录（可以用<code>os.getcwd()</code>查看)下查找有没有同名文件夹，有则返回true</li>
<li><code>os.listdir()</code>方法只返回文件名，需要自己用<code>os.path.join()</code>方法拼接出绝对路径。</li>
<li><code>os.path.realpath()</code>获取绝对路径，该方法会将传入的文件名与<strong>当前工作目录</strong>拼接出绝对路径。如果要使用这个方法，必须先用<code>os.chdir()</code>改变当前工作目录！建议优先用<code>os.path.join()</code>。</li>
<li><code>os.path.relpath()</code>获取相对路径，如果不传入命名关键字参数start，如<code>start = r&#39;C:\python&#39;</code>，则该方法会与根据当前工作目录计算相对路径，目录不同则报错。</li>
</ul>
<hr>
<h2 id="面试宝典">面试宝典</h2><p>网上搜集的面试题</p>
<h3 id="到底什么是Python？">到底什么是Python？</h3><p><strong>为什么提这个问题</strong>：如果你应聘的是一个Python开发岗位，你就应该知道这是门什么样的语言，以及它为什么这么酷。以及它哪里不好。</p>
<p><strong>关键点</strong>：</p>
<ul>
<li>Python是一种解释型语言。这就是说，与C语言和C的衍生语言不同，Python代码在运行之前不需要编译。其他解释型语言还包括PHP和Ruby。</li>
<li>Python是动态类型语言，指的是你在声明变量时，不需要说明变量的类型。你可以直接编写类似x=111和x=”I’m a string”这样的代码，程序不会报错。</li>
<li>Python非常适合面向对象的编程（OOP），因为它支持通过组合（composition）与继承（inheritance）的方式定义类（class）。Python中没有访问说明符（access<br>specifier，类似C++中的public和private），这么设计的依据是“大家都是成年人了”。</li>
<li>在Python语言中，函数是第一类对象（first-class objects）。这指的是它们可以被指定给变量，函数既能返回函数类型，也可以接受函数作为输入。类（class）也是第一类对象。</li>
<li>Python代码编写快，但是运行速度比编译语言通常要慢。好在Python允许加入基于C语言编写的扩展，因此我们能够优化代码，消除瓶颈，这点通常是可以实现的。numpy就是一个很好地例子，它的运行速度真的非常快，因为很多算术运算其实并不是通过Python实现的。</li>
<li>Python用途非常广泛——网络应用，自动化，科学建模，大数据应用，等等。它也常被用作“胶水语言”，帮助其他语言和组件改善运行状况。</li>
<li>Python让困难的事情变得容易，因此程序员可以专注于算法和数据结构的设计，而不用处理底层的细节。</li>
</ul>
<h3 id="补充缺失的代码">补充缺失的代码</h3><p><strong>为什么提这个问题？</strong></p>
<ul>
<li>说明面试者对与操作系统交互的基础知识</li>
<li>递归真是太好用啦</li>
</ul>
<pre><code><span class="function"><span class="keyword">def</span> <span class="title">print_directory_contents</span><span class="params">(sPath)</span>:</span>
    <span class="string">"""
    这个函数接受文件夹的名称作为输入参数，
    返回该文件夹中文件的路径，
    以及其包含文件夹中文件的路径。

    """</span>
    <span class="comment"># 补充代码</span>
</code></pre><p><strong>答案</strong>：</p>
<pre><code>def <span class="function"><span class="title">print_directory_contents</span><span class="params">(sPath)</span></span>:
    import os
    <span class="keyword">for</span> sChild <span class="keyword">in</span> os.<span class="function"><span class="title">listdir</span><span class="params">(sPath)</span></span>:
        sChildPath = os<span class="class">.path</span><span class="class">.join</span>(sPath,sChild)
        <span class="keyword">if</span> os<span class="class">.path</span><span class="class">.isdir</span>(sChildPath):
            <span class="function"><span class="title">print_directory_contents</span><span class="params">(sChildPath)</span></span>
        <span class="keyword">else</span>:
            print sChildPath
</code></pre><p><strong>特别要注意以下几点：</strong></p>
<ul>
<li>命名规范要统一。如果样本代码中能够看出命名规范，遵循其已有的规范。</li>
<li>递归函数需要递归并终止。确保你明白其中的原理，否则你将面临无休无止的调用栈（callstack）。</li>
<li>我们使用os模块与操作系统进行交互，同时做到交互方式是可以跨平台的。你可以把代码写成<code>sChildPath = sPath + &#39;/&#39; + sChild</code>，但是这个在Windows系统上会出错。</li>
<li>熟悉基础模块是非常有价值的，但是别想破脑袋都背下来，记住Google是你工作中的良师益友。</li>
<li>如果你不明白代码的预期功能，就大胆提问。</li>
<li>坚持KISS原则！保持简单，不过脑子就能懂！</li>
</ul>
<h3 id="阅读下面的代码，写出A0，A1至An的最终值">阅读下面的代码，写出A0，A1至An的最终值</h3><p><strong>为什么提这个问题？</strong></p>
<ul>
<li>列表解析（list comprehension）十分节约时间，对很多人来说也是一个大的学习障碍。</li>
<li>如果你读懂了这些代码，就很可能可以写下正确地值。</li>
<li>其中部分代码故意写的怪怪的。因为你共事的人之中也会有怪人。</li>
</ul>
<pre><code>A0 = dict(zip((<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>),(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)))
A1 = range(<span class="number">10</span>)
A2 = [i <span class="keyword">for</span> i <span class="keyword">in</span> A1 <span class="keyword">if</span> i <span class="keyword">in</span> A0]
A3 = [A0[s] <span class="keyword">for</span> s <span class="keyword">in</span> A0]
A4 = [i <span class="keyword">for</span> i <span class="keyword">in</span> A1 <span class="keyword">if</span> i <span class="keyword">in</span> A3]
A5 = <span class="comment">{i:i*i for i in A1}</span>
A6 = [[i,i*i] <span class="keyword">for</span> i <span class="keyword">in</span> A1]
</code></pre><p><strong>答案：</strong></p>
<pre><code>A0 = {<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'b'</span>: <span class="number">2</span>, <span class="string">'e'</span>: <span class="number">5</span>, <span class="string">'d'</span>: <span class="number">4</span>} <span class="preprocessor"># 顺序不固定</span>
A1 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]
A2 = []
A3 = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">4</span>]
A4 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]
A5 = {<span class="number">0</span>: <span class="number">0</span>, <span class="number">1</span>: <span class="number">1</span>, <span class="number">2</span>: <span class="number">4</span>, <span class="number">3</span>: <span class="number">9</span>, <span class="number">4</span>: <span class="number">16</span>, <span class="number">5</span>: <span class="number">25</span>, <span class="number">6</span>: <span class="number">36</span>, <span class="number">7</span>: <span class="number">49</span>, <span class="number">8</span>: <span class="number">64</span>, <span class="number">9</span>: <span class="number">81</span>}
A6 = [[<span class="number">0</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">4</span>], [<span class="number">3</span>, <span class="number">9</span>], [<span class="number">4</span>, <span class="number">16</span>], [<span class="number">5</span>, <span class="number">25</span>], [<span class="number">6</span>, <span class="number">36</span>], [<span class="number">7</span>, <span class="number">49</span>], [<span class="number">8</span>, <span class="number">64</span>], [<span class="number">9</span>, <span class="number">81</span>]]
</code></pre><h3 id="Python的多线程是个好主意吗？">Python的多线程是个好主意吗？</h3><p><strong>为什么提这个问题？</strong></p>
<p>因为GIL就是个混账东西（A-hole）。很多人花费大量的时间，试图寻找自己多线程代码中的瓶颈，直到他们明白GIL的存在。</p>
<p><strong>答案：</strong></p>
<p>Python并不支持真正意义上的多线程。Python中提供了多线程包，但是如果你想通过多线程提高代码的速度，使用多线程包并不是个好主意。Python中有一个被称为Global Interpreter Lock（GIL）的东西，它会确保任何时候你的多个线程中，只有一个被执行。线程的执行速度非常之快，会让你误以为线程是并行执行的，但是实际上都是轮流执行。经过GIL这一道关卡处理，会增加执行的开销。这意味着，如果你想提高代码的运行速度，使用threading包并不是一个很好的方法。</p>
<p>不过还是有很多理由促使我们使用threading包的。如果你想同时执行一些任务，而且不考虑效率问题，那么使用这个包是完全没问题的，而且也很方便。但是大部分情况下，并不是这么一回事，你会希望把多线程的部分外包给操作系统完成（通过开启多个进程），或者是某些调用你的Python代码的外部程序（例如Spark或Hadoop），又或者是你的Python代码调用的其他代码（例如，你可以在Python中调用C函数，用于处理开销较大的多线程工作）。</p>
<h3 id="你如何管理不同版本的代码？">你如何管理不同版本的代码？</h3><p><strong>为什么提这个问题？</strong></p>
<p>因为没有版本控制的代码，就像没有杯子的咖啡。有时候我们需要写一些一次性的、可以随手扔掉的脚本，这种情况下不作版本控制没关系。但是如果你面对的是大量的代码，使用版本控制系统是有利的。版本控制能够帮你追踪谁对代码库做了什么操作；发现新引入了什么bug；管理你的软件的不同版本和发行版；在团队成员中分享源代码；部署及其他自动化处理。它能让你回滚到出现问题之前的版本，单凭这点就特别棒了。还有其他的好功能。怎么一个棒字了得！</p>
<p><strong>答案：</strong></p>
<p>版本管理！被问到这个问题的时候，你应该要表现得很兴奋，甚至告诉他们你是如何使用Git（或是其他你最喜欢的工具）追踪自己和奶奶的书信往来。我偏向于使用Git作为版本控制系统（VCS），但还有其他的选择，比如subversion（SVN）。</p>
<h3 id="下面代码会输出什么？">下面代码会输出什么？</h3><pre><code>def <span class="function"><span class="title">f</span><span class="params">(x,L=[])</span></span>:
    <span class="keyword">for</span> <span class="tag">i</span> <span class="keyword">in</span> <span class="function"><span class="title">range</span><span class="params">(x)</span></span>:
        L.<span class="function"><span class="title">append</span><span class="params">(i*i)</span></span>
    print L

<span class="function"><span class="title">f</span><span class="params">(<span class="number">2</span>)</span></span>
<span class="function"><span class="title">f</span><span class="params">(<span class="number">3</span>,[<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>])</span></span>
<span class="function"><span class="title">f</span><span class="params">(<span class="number">3</span>)</span></span>
</code></pre><p><strong>答案</strong></p>
<pre><code>[<span class="number">0</span>, <span class="number">1</span>]
[<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>]
[<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>]
</code></pre><p>第三个函数使用了之前内存地址中存储的旧列表。</p>
<h3 id="猴子补丁（monkey_patching）是什么？这种做法好吗？">猴子补丁（monkey patching）是什么？这种做法好吗？</h3><p><strong>为什么提这个问题？</strong></p>
<p>答对这个问题说明你对单元测试的方法有一定了解。你如果提到要避免“猴子补丁”，可以说明你不是那种喜欢花里胡哨代码的程序员（公司里就有这种人，跟他们共事真是糟糕透了），而是更注重可维护性。还记得KISS原则码？答对这个问题还说明你明白一些Python底层运作的方式，函数实际是如何存储、调用等等。</p>
<p>另外：如果你没读过mock模块的话，真的值得花时间读一读。这个模块非常有用。</p>
<p><strong>答案：</strong></p>
<p>“猴子补丁”就是指，在函数或对象已经定义之后，再去改变它们的行为。</p>
<p>举个例子：</p>
<pre><code>import datetime
datetime<span class="class">.datetime</span><span class="class">.now</span> = lambda: datetime.<span class="function"><span class="title">datetime</span><span class="params">(<span class="number">2012</span>, <span class="number">12</span>, <span class="number">12</span>)</span></span>
</code></pre><p>大部分情况下，这是种很不好的做法 - 因为函数在代码库中的行为最好是都保持一致。打“猴子补丁”的原因可能是为了测试。mock包对实现这个目的很有帮助。</p>
<h3 id="解释*args，**kwargs的含义与用途">解释<code>*args</code>，<code>**kwargs</code>的含义与用途</h3><p><strong>为什么提这个问题？</strong></p>
<p>有时候，我们需要往函数中传入未知个数的参数或关键词参数。有时候，我们也希望把参数或关键词参数储存起来，以备以后使用。有时候，仅仅是为了节省时间。</p>
<p><strong>答案</strong></p>
<p>如果我们不确定要往函数中传入多少个参数，或者我们想往函数中以列表和元组的形式传参数时，那就使要用<code>*args</code>；如果我们不知道要往函数中传入多少个关键词参数，或者想传入字典的值作为关键词参数时，那就要使用<code>**kwargs</code>。<code>args</code>和<code>kwargs</code>这两个标识符是约定俗成的用法，你当然还可以用<code>*bob</code>和<code>**billy</code>，但是这样就并不太妥。</p>
<p>下面是具体的示例：</p>
<pre><code>def <span class="function">f</span>(*args,**kwargs)<span class="value">: print args, kwargs

l = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]
t = (<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)
d = {<span class="string">'a'</span>:<span class="number">7</span>,<span class="string">'b'</span>:<span class="number">8</span>,<span class="string">'c'</span>:<span class="number">9</span>}

<span class="function">f</span>()
<span class="function">f</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)                    # (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) {}
<span class="function">f</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">"groovy"</span>)           # (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'groovy'</span>) {}
<span class="function">f</span>(a=<span class="number">1</span>,b=<span class="number">2</span>,c=<span class="number">3</span>)              # () {<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'b'</span>: <span class="number">2</span>}
<span class="function">f</span>(a=<span class="number">1</span>,b=<span class="number">2</span>,c=<span class="number">3</span>,zzz=<span class="string">"hi"</span>)     # () {<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'b'</span>: <span class="number">2</span>, <span class="string">'zzz'</span>: <span class="string">'hi'</span>}
<span class="function">f</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,a=<span class="number">1</span>,b=<span class="number">2</span>,c=<span class="number">3</span>)        # (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) {<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'b'</span>: <span class="number">2</span>}

<span class="function">f</span>(*l,**d)                   # (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) {<span class="string">'a'</span>: <span class="number">7</span>, <span class="string">'c'</span>: <span class="number">9</span>, <span class="string">'b'</span>: <span class="number">8</span>}
<span class="function">f</span>(*t,**d)                   # (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>) {<span class="string">'a'</span>: <span class="number">7</span>, <span class="string">'c'</span>: <span class="number">9</span>, <span class="string">'b'</span>: <span class="number">8</span>}
<span class="function">f</span>(<span class="number">1</span>,<span class="number">2</span>,*t)                   # (<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>) {}
<span class="function">f</span>(q=<span class="string">"winning"</span>,**d)          # () {<span class="string">'a'</span>: <span class="number">7</span>, <span class="string">'q'</span>: <span class="string">'winning'</span>, <span class="string">'c'</span>: <span class="number">9</span>, <span class="string">'b'</span>: <span class="number">8</span>}
<span class="function">f</span>(<span class="number">1</span>,<span class="number">2</span>,*t,q=<span class="string">"winning"</span>,**d)   # (<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>) {<span class="string">'a'</span>: <span class="number">7</span>, <span class="string">'q'</span>: <span class="string">'winning'</span>, <span class="string">'c'</span>: <span class="number">9</span>, <span class="string">'b'</span>: <span class="number">8</span>}

def <span class="function">f2</span>(arg1,arg2,*args,**kwargs): print arg1,arg2, args, kwargs

<span class="function">f2</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)                       # <span class="number">1</span> <span class="number">2</span> (<span class="number">3</span>,) {}
<span class="function">f2</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">"groovy"</span>)              # <span class="number">1</span> <span class="number">2</span> (<span class="number">3</span>, <span class="string">'groovy'</span>) {}
<span class="function">f2</span>(arg1=<span class="number">1</span>,arg2=<span class="number">2</span>,c=<span class="number">3</span>)           # <span class="number">1</span> <span class="number">2</span> () {<span class="string">'c'</span>: <span class="number">3</span>}
<span class="function">f2</span>(arg1=<span class="number">1</span>,arg2=<span class="number">2</span>,c=<span class="number">3</span>,zzz=<span class="string">"hi"</span>)  # <span class="number">1</span> <span class="number">2</span> () {<span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'zzz'</span>: <span class="string">'hi'</span>}
<span class="function">f2</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,a=<span class="number">1</span>,b=<span class="number">2</span>,c=<span class="number">3</span>)           # <span class="number">1</span> <span class="number">2</span> (<span class="number">3</span>,) {<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'c'</span>: <span class="number">3</span>, <span class="string">'b'</span>: <span class="number">2</span>}

<span class="function">f2</span>(*l,**d)                   # <span class="number">1</span> <span class="number">2</span> (<span class="number">3</span>,) {<span class="string">'a'</span>: <span class="number">7</span>, <span class="string">'c'</span>: <span class="number">9</span>, <span class="string">'b'</span>: <span class="number">8</span>}
<span class="function">f2</span>(*t,**d)                   # <span class="number">4</span> <span class="number">5</span> (<span class="number">6</span>,) {<span class="string">'a'</span>: <span class="number">7</span>, <span class="string">'c'</span>: <span class="number">9</span>, <span class="string">'b'</span>: <span class="number">8</span>}
<span class="function">f2</span>(<span class="number">1</span>,<span class="number">2</span>,*t)                   # <span class="number">1</span> <span class="number">2</span> (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>) {}
<span class="function">f2</span>(<span class="number">1</span>,<span class="number">1</span>,q=<span class="string">"winning"</span>,**d)      # <span class="number">1</span> <span class="number">1</span> () {<span class="string">'a'</span>: <span class="number">7</span>, <span class="string">'q'</span>: <span class="string">'winning'</span>, <span class="string">'c'</span>: <span class="number">9</span>, <span class="string">'b'</span>: <span class="number">8</span>}
<span class="function">f2</span>(<span class="number">1</span>,<span class="number">2</span>,*t,q=<span class="string">"winning"</span>,**d)   # <span class="number">1</span> <span class="number">2</span> (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>) {<span class="string">'a'</span>: <span class="number">7</span>, <span class="string">'q'</span>: <span class="string">'winning'</span>, <span class="string">'c'</span>: <span class="number">9</span>, <span class="string">'b'</span>: <span class="number">8</span>}</span>
</code></pre><h3 id="介绍@classmethod,_@staticmethod,_@property">介绍@classmethod, @staticmethod, @property</h3><p><strong>回答背景知识</strong></p>
<p>这些都是装饰器（decorator）。装饰器是一种特殊的函数，要么接受函数作为输入参数，并返回一个函数，要么接受一个类作为输入参数，并返回一个类。@标记是语法糖（syntactic sugar），可以让你以简单易读得方式装饰目标对象。</p>
<pre><code><span class="decorator">@my_decorator</span>
<span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(stuff)</span>:</span>
    do_things
Is equivalent to

<span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(stuff)</span>:</span>
    do_things

my_func = my_decorator(my_func)
</code></pre><p><strong>真正的答案</strong></p>
<p>@classmethod, @staticmethod和@property这三个装饰器的使用对象是在类中定义的函数。下面的例子展示了它们的用法和行为：</p>
<pre><code><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span><span class="params">(object)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>
        self._some_property = <span class="string">"properties are nice"</span>
        self._some_other_property = <span class="string">"VERY nice"</span>
    <span class="function"><span class="keyword">def</span> <span class="title">normal_method</span><span class="params">(*args,**kwargs)</span>:</span>
        <span class="keyword">print</span> <span class="string">"calling normal_method({0},{1})"</span>.format(args,kwargs)
<span class="decorator">    @classmethod</span>
    <span class="function"><span class="keyword">def</span> <span class="title">class_method</span><span class="params">(*args,**kwargs)</span>:</span>
        <span class="keyword">print</span> <span class="string">"calling class_method({0},{1})"</span>.format(args,kwargs)
<span class="decorator">    @staticmethod</span>
    <span class="function"><span class="keyword">def</span> <span class="title">static_method</span><span class="params">(*args,**kwargs)</span>:</span>
        <span class="keyword">print</span> <span class="string">"calling static_method({0},{1})"</span>.format(args,kwargs)
<span class="decorator">    @property</span>
    <span class="function"><span class="keyword">def</span> <span class="title">some_property</span><span class="params">(self,*args,**kwargs)</span>:</span>
        <span class="keyword">print</span> <span class="string">"calling some_property getter({0},{1},{2})"</span>.format(self,args,kwargs)
        <span class="keyword">return</span> self._some_property
<span class="decorator">    @some_property.setter</span>
    <span class="function"><span class="keyword">def</span> <span class="title">some_property</span><span class="params">(self,*args,**kwargs)</span>:</span>
        <span class="keyword">print</span> <span class="string">"calling some_property setter({0},{1},{2})"</span>.format(self,args,kwargs)
        self._some_property = args[<span class="number">0</span>]
<span class="decorator">    @property</span>
    <span class="function"><span class="keyword">def</span> <span class="title">some_other_property</span><span class="params">(self,*args,**kwargs)</span>:</span>
        <span class="keyword">print</span> <span class="string">"calling some_other_property getter({0},{1},{2})"</span>.format(self,args,kwargs)
        <span class="keyword">return</span> self._some_other_property

o = MyClass()
<span class="comment"># 未装饰的方法还是正常的行为方式，需要当前的类实例（self）作为第一个参数。</span>

o.normal_method
<span class="comment"># &lt;bound method MyClass.normal_method of &lt;__main__.MyClass instance at 0x7fdd2537ea28&gt;&gt;</span>

o.normal_method()
<span class="comment"># normal_method((&lt;__main__.MyClass instance at 0x7fdd2537ea28&gt;,),{})</span>

o.normal_method(<span class="number">1</span>,<span class="number">2</span>,x=<span class="number">3</span>,y=<span class="number">4</span>)
<span class="comment"># normal_method((&lt;__main__.MyClass instance at 0x7fdd2537ea28&gt;, 1, 2),{'y': 4, 'x': 3})</span>

<span class="comment"># 类方法的第一个参数永远是该类</span>

o.class_method
<span class="comment"># &lt;bound method classobj.class_method of &lt;class __main__.MyClass at 0x7fdd2536a390&gt;&gt;</span>

o.class_method()
<span class="comment"># class_method((&lt;class __main__.MyClass at 0x7fdd2536a390&gt;,),{})</span>

o.class_method(<span class="number">1</span>,<span class="number">2</span>,x=<span class="number">3</span>,y=<span class="number">4</span>)
<span class="comment"># class_method((&lt;class __main__.MyClass at 0x7fdd2536a390&gt;, 1, 2),{'y': 4, 'x': 3})</span>

<span class="comment"># 静态方法（static method）中除了你调用时传入的参数以外，没有其他的参数。</span>

o.static_method
<span class="comment"># &lt;function static_method at 0x7fdd25375848&gt;</span>

o.static_method()
<span class="comment"># static_method((),{})</span>

o.static_method(<span class="number">1</span>,<span class="number">2</span>,x=<span class="number">3</span>,y=<span class="number">4</span>)
<span class="comment"># static_method((1, 2),{'y': 4, 'x': 3})</span>

<span class="comment"># @property是实现getter和setter方法的一种方式。直接调用它们是错误的。</span>
<span class="comment"># “只读”属性可以通过只定义getter方法，不定义setter方法实现。</span>

o.some_property
<span class="comment"># 调用some_property的getter(&lt;__main__.MyClass instance at 0x7fb2b70877e8&gt;,(),{})</span>
<span class="comment"># 'properties are nice'</span>
<span class="comment"># “属性”是很好的功能</span>

o.some_property()
<span class="comment"># calling some_property getter(&lt;__main__.MyClass instance at 0x7fb2b70877e8&gt;,(),{})</span>
<span class="comment"># Traceback (most recent call last):</span>
<span class="comment">#   File "&lt;stdin&gt;", line 1, in &lt;module&gt;</span>
<span class="comment"># TypeError: 'str' object is not callable</span>

o.some_other_property
<span class="comment"># calling some_other_property getter(&lt;__main__.MyClass instance at 0x7fb2b70877e8&gt;,(),{})</span>
<span class="comment"># 'VERY nice'</span>

<span class="comment"># o.some_other_property()</span>
<span class="comment"># calling some_other_property getter(&lt;__main__.MyClass instance at 0x7fb2b70877e8&gt;,(),{})</span>
<span class="comment"># Traceback (most recent call last):</span>
<span class="comment">#   File "&lt;stdin&gt;", line 1, in &lt;module&gt;</span>
<span class="comment"># TypeError: 'str' object is not callable</span>

o.some_property = <span class="string">"groovy"</span>
<span class="comment"># calling some_property setter(&lt;__main__.MyClass object at 0x7fb2b7077890&gt;,('groovy',),{})</span>

o.some_property
<span class="comment"># calling some_property getter(&lt;__main__.MyClass object at 0x7fb2b7077890&gt;,(),{})</span>
<span class="comment"># 'groovy'</span>

o.some_other_property = <span class="string">"very groovy"</span>
<span class="comment"># Traceback (most recent call last):</span>
<span class="comment">#   File "&lt;stdin&gt;", line 1, in &lt;module&gt;</span>
<span class="comment"># AttributeError: can't set attribute</span>

o.some_other_property
<span class="comment"># calling some_other_property getter(&lt;__main__.MyClass object at 0x7fb2b7077890&gt;,(),{})</span>
</code></pre><h3 id="说明下列代码的输出结果">说明下列代码的输出结果</h3><pre><code><span class="class"><span class="keyword">class</span> <span class="title">D</span><span class="params">(B,C)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">go</span><span class="params">(self)</span>:</span>
        super(D, self).go()
        <span class="keyword">print</span> <span class="string">"go D go!"</span>
    <span class="function"><span class="keyword">def</span> <span class="title">stop</span><span class="params">(self)</span>:</span>
        super(D, self).stop()
        <span class="keyword">print</span> <span class="string">"stop D stop!"</span>
    <span class="function"><span class="keyword">def</span> <span class="title">pause</span><span class="params">(self)</span>:</span>
        <span class="keyword">print</span> <span class="string">"wait D wait!"</span>

<span class="class"><span class="keyword">class</span> <span class="title">E</span><span class="params">(B,C)</span>:</span> <span class="keyword">pass</span>

a = A()
b = B()
c = C()
d = D()
e = E()

<span class="comment"># 说明下列代码的输出结果</span>

a.go()
b.go()
c.go()
d.go()
e.go()

a.stop()
</code></pre><p><strong>为什么提这个问题？</strong></p>
<p>因为面向对象的编程真的真的很重要。不骗你。答对这道问题说明你理解了继承和Python中super函数的用法。</p>
<p><strong>答案</strong></p>
<pre><code>a.go()
<span class="preprocessor"># go A go!</span>

b.go()
<span class="preprocessor"># go A go!</span>
<span class="preprocessor"># go B go!</span>

c.go()
<span class="preprocessor"># go A go!</span>
<span class="preprocessor"># go C go!</span>

d.go()
<span class="preprocessor"># go A go!</span>
<span class="preprocessor"># go C go!</span>
<span class="preprocessor"># go B go!</span>
<span class="preprocessor"># go D go!</span>

e.go()
<span class="preprocessor"># go A go!</span>
<span class="preprocessor"># go C go!</span>
<span class="preprocessor"># go B go!</span>

a.stop()
<span class="preprocessor"># stop A stop!</span>

b.stop()
<span class="preprocessor"># stop A stop!</span>

c.stop()
<span class="preprocessor"># stop A stop!</span>
<span class="preprocessor"># stop C stop!</span>

d.stop()
<span class="preprocessor"># stop A stop!</span>
<span class="preprocessor"># stop C stop!</span>
<span class="preprocessor"># stop D stop!</span>

e.stop()
<span class="preprocessor"># stop A stop!</span>

a.pause()
<span class="preprocessor"># ... Exception: Not Implemented</span>

b.pause()
<span class="preprocessor"># ... Exception: Not Implemented</span>

c.pause()
<span class="preprocessor"># ... Exception: Not Implemented</span>

d.pause()
<span class="preprocessor"># wait D wait!</span>

e.pause()
<span class="preprocessor"># ...Exception: Not Implemented</span>
</code></pre><h3 id="说明下面代码的输出结果">说明下面代码的输出结果</h3><pre><code><span class="class"><span class="keyword">class</span> <span class="title">Node</span><span class="params">(object)</span>:</span>
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,sName)</span>:</span>
        self._lChildren = []
        self.sName = sName
    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span>
        <span class="keyword">return</span> <span class="string">"&lt;Node '{}'&gt;"</span>.format(self.sName)
    <span class="function"><span class="keyword">def</span> <span class="title">append</span><span class="params">(self,*args,**kwargs)</span>:</span>
        self._lChildren.append(*args,**kwargs)
    <span class="function"><span class="keyword">def</span> <span class="title">print_all_1</span><span class="params">(self)</span>:</span>
        <span class="keyword">print</span> self
        <span class="keyword">for</span> oChild <span class="keyword">in</span> self._lChildren:
            oChild.print_all_1()
    <span class="function"><span class="keyword">def</span> <span class="title">print_all_2</span><span class="params">(self)</span>:</span>
        <span class="function"><span class="keyword">def</span> <span class="title">gen</span><span class="params">(o)</span>:</span>
            lAll = [o,]
            <span class="keyword">while</span> lAll:
                oNext = lAll.pop(<span class="number">0</span>)
                lAll.extend(oNext._lChildren)
                <span class="keyword">yield</span> oNext
        <span class="keyword">for</span> oNode <span class="keyword">in</span> gen(self):
            <span class="keyword">print</span> oNode

oRoot = Node(<span class="string">"root"</span>)
oChild1 = Node(<span class="string">"child1"</span>)
oChild2 = Node(<span class="string">"child2"</span>)
oChild3 = Node(<span class="string">"child3"</span>)
oChild4 = Node(<span class="string">"child4"</span>)
oChild5 = Node(<span class="string">"child5"</span>)
oChild6 = Node(<span class="string">"child6"</span>)
oChild7 = Node(<span class="string">"child7"</span>)
oChild8 = Node(<span class="string">"child8"</span>)
oChild9 = Node(<span class="string">"child9"</span>)
oChild10 = Node(<span class="string">"child10"</span>)

oRoot.append(oChild1)
oRoot.append(oChild2)
oRoot.append(oChild3)
oChild1.append(oChild4)
oChild1.append(oChild5)
oChild2.append(oChild6)
oChild4.append(oChild7)
oChild3.append(oChild8)
oChild3.append(oChild9)
oChild6.append(oChild10)

<span class="comment"># 说明下面代码的输出结果</span>

oRoot.print_all_1()
oRoot.print_all_2()
</code></pre><p><strong>为什么提这个问题？</strong></p>
<p>因为对象的精髓就在于组合（composition）与对象构造（object construction）。对象需要有组合成分构成，而且得以某种方式初始化。这里也涉及到递归和生成器（generator）的使用。</p>
<p>生成器是很棒的数据类型。你可以只通过构造一个很长的列表，然后打印列表的内容，就可以取得与print_all_2类似的功能。生成器还有一个好处，就是不用占据很多内存。</p>
<p>有一点还值得指出，就是print_all_1会以深度优先（depth-first）的方式遍历树(tree),而print_all_2则是宽度优先（width-first）。有时候，一种遍历方式比另一种更合适。但这要看你的应用的具体情况。</p>
<p><strong>答案</strong></p>
<p><code>oRoot.print_all_1()</code>会打印下面的结果：</p>
<pre><code>&lt;Node <span class="quoted">'root</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child1</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child4</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child7</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child5</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child2</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child6</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child10</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child3</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child8</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child9</span><span class="quoted">'&gt;</span>
</code></pre><p><code>oRoot.print_all_1()</code>会打印下面的结果：</p>
<pre><code>&lt;Node <span class="quoted">'root</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child1</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child2</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child3</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child4</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child5</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child6</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child8</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child9</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child7</span><span class="quoted">'&gt;</span>
&lt;Node <span class="quoted">'child10</span><span class="quoted">'&gt;</span>
</code></pre><h3 id="简要描述Python的垃圾回收机制（garbage_collection）">简要描述Python的垃圾回收机制（garbage collection）</h3><p><strong>答案</strong></p>
<p>这里能说的很多。你应该提到下面几个主要的点：</p>
<ul>
<li>Python在内存中存储了每个对象的引用计数（reference<br>count）。如果计数值变成0，那么相应的对象就会消失，分配给该对象的内存就会释放出来用作他用。</li>
<li>偶尔也会出现引用循环（reference<br>cycle）。垃圾回收器会定时寻找这个循环，并将其回收。举个例子，假设有两个对象o1和o2，而且符合o1.x == o2和o2.x == o1这两个条件。如果o1和o2没有其他代码引用，那么它们就不应该继续存在。但它们的引用计数都是1。</li>
<li>Python中使用了某些启发式算法（heuristics）来加速垃圾回收。例如，越晚创建的对象更有可能被回收。对象被创建之后，垃圾回收器会分配它们所属的代（generation）。每个对象都会被分配一个代，而被分配更年轻代的对象是优先被处理的。</li>
</ul>
<h3 id="将下面的函数按照执行效率高低排序">将下面的函数按照执行效率高低排序</h3><p>它们都接受由0至1之间的数字构成的列表作为输入。这个列表可以很长。一个输入列表的示例如下：[random.random() for i in range(100000)]。你如何证明自己的答案是正确的。</p>
<pre><code>def <span class="function"><span class="title">f1</span><span class="params">(lIn)</span></span>:
    l1 = <span class="function"><span class="title">sorted</span><span class="params">(lIn)</span></span>
    l2 = [<span class="tag">i</span> <span class="keyword">for</span> <span class="tag">i</span> <span class="keyword">in</span> l1 <span class="keyword">if</span> i&lt;<span class="number">0.5</span>]
    return [i*<span class="tag">i</span> <span class="keyword">for</span> <span class="tag">i</span> <span class="keyword">in</span> l2]

def <span class="function"><span class="title">f2</span><span class="params">(lIn)</span></span>:
    l1 = [<span class="tag">i</span> <span class="keyword">for</span> <span class="tag">i</span> <span class="keyword">in</span> lIn <span class="keyword">if</span> i&lt;<span class="number">0.5</span>]
    l2 = <span class="function"><span class="title">sorted</span><span class="params">(l1)</span></span>
    return [i*<span class="tag">i</span> <span class="keyword">for</span> <span class="tag">i</span> <span class="keyword">in</span> l2]

def <span class="function"><span class="title">f3</span><span class="params">(lIn)</span></span>:
    l1 = [i*<span class="tag">i</span> <span class="keyword">for</span> <span class="tag">i</span> <span class="keyword">in</span> lIn]
    l2 = <span class="function"><span class="title">sorted</span><span class="params">(l1)</span></span>
    return [<span class="tag">i</span> <span class="keyword">for</span> <span class="tag">i</span> <span class="keyword">in</span> l1 <span class="keyword">if</span> i&lt;(<span class="number">0.5</span>*<span class="number">0.5</span>)]
</code></pre><p><strong>为什么提这个问题？</strong></p>
<p>定位并避免代码瓶颈是非常有价值的技能。想要编写许多高效的代码，最终都要回答常识上来——在上面的例子中，如果列表较小的话，很明显是先进行排序更快，因此如果你可以在排序前先进行筛选，那通常都是比较好的做法。其他不显而易见的问题仍然可以通过恰当的工具来定位。因此了解这些工具是有好处的。</p>
<p><strong>答案：</strong></p>
<p>按执行效率从高到低排列：f2、f1和f3。要证明这个答案是对的，你应该知道如何分析自己代码的性能。Python中有一个很好的程序分析包，可以满足这个需求。</p>
<pre><code>import cProfile
lIn = [random.<span class="function"><span class="title">random</span><span class="params">()</span></span> <span class="keyword">for</span> <span class="tag">i</span> <span class="keyword">in</span> <span class="function"><span class="title">range</span><span class="params">(<span class="number">100000</span>)</span></span>]
cProfile.<span class="function"><span class="title">run</span><span class="params">(<span class="string">'f1(lIn)'</span>)</span></span>
cProfile.<span class="function"><span class="title">run</span><span class="params">(<span class="string">'f2(lIn)'</span>)</span></span>
cProfile.<span class="function"><span class="title">run</span><span class="params">(<span class="string">'f3(lIn)'</span>)</span></span>
</code></pre><p>为了向大家进行完整地说明，下面给出上述分析代码的输出结果：</p>
<pre><code>&gt;&gt;&gt; <span class="filename">cProfile.run('f1(lIn)')
         4 function calls in 0.045 seconds

   Ordered by</span>: standard name

   <span class="header"><span class="keyword">ncalls</span>  <span class="keyword">tottime</span>  percall  <span class="keyword">cumtime</span>  percall <span class="keyword">filename</span>:lineno(function)</span>
        <span class="number">1</span>    <span class="number">0.009</span>    <span class="number">0.009</span>    <span class="number">0.044</span>    <span class="number">0.044</span> &lt;stdin&gt;:<span class="number">1</span><span class="function">(<span class="title">f1</span>)</span>
        <span class="number">1</span>    <span class="number">0.001</span>    <span class="number">0.001</span>    <span class="number">0.045</span>    <span class="number">0.045</span> &lt;string&gt;:<span class="number">1</span><span class="function">(&lt;<span class="title">module</span>&gt;)</span>
        <span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> {<span class="built_in">method <span class="string">'disable'</span> of <span class="string">'_lsprof.Profiler'</span> objects</span>}
        <span class="number">1</span>    <span class="number">0.035</span>    <span class="number">0.035</span>    <span class="number">0.035</span>    <span class="number">0.035</span> {<span class="built_in">sorted</span>}

&gt;&gt;&gt; <span class="filename">cProfile.run('f2(lIn)')
         4 function calls in 0.024 seconds

   Ordered by</span>: standard name

   <span class="header"><span class="keyword">ncalls</span>  <span class="keyword">tottime</span>  percall  <span class="keyword">cumtime</span>  percall <span class="keyword">filename</span>:lineno(function)</span>
        <span class="number">1</span>    <span class="number">0.008</span>    <span class="number">0.008</span>    <span class="number">0.023</span>    <span class="number">0.023</span> &lt;stdin&gt;:<span class="number">1</span><span class="function">(<span class="title">f2</span>)</span>
        <span class="number">1</span>    <span class="number">0.001</span>    <span class="number">0.001</span>    <span class="number">0.024</span>    <span class="number">0.024</span> &lt;string&gt;:<span class="number">1</span><span class="function">(&lt;<span class="title">module</span>&gt;)</span>
        <span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> {<span class="built_in">method <span class="string">'disable'</span> of <span class="string">'_lsprof.Profiler'</span> objects</span>}
        <span class="number">1</span>    <span class="number">0.016</span>    <span class="number">0.016</span>    <span class="number">0.016</span>    <span class="number">0.016</span> {<span class="built_in">sorted</span>}

&gt;&gt;&gt; <span class="filename">cProfile.run('f3(lIn)')
         4 function calls in 0.055 seconds

   Ordered by</span>: standard name

   <span class="header"><span class="keyword">ncalls</span>  <span class="keyword">tottime</span>  percall  <span class="keyword">cumtime</span>  percall <span class="keyword">filename</span>:lineno(function)</span>
        <span class="number">1</span>    <span class="number">0.016</span>    <span class="number">0.016</span>    <span class="number">0.054</span>    <span class="number">0.054</span> &lt;stdin&gt;:<span class="number">1</span><span class="function">(<span class="title">f3</span>)</span>
        <span class="number">1</span>    <span class="number">0.001</span>    <span class="number">0.001</span>    <span class="number">0.055</span>    <span class="number">0.055</span> &lt;string&gt;:<span class="number">1</span><span class="function">(&lt;<span class="title">module</span>&gt;)</span>
        <span class="number">1</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span>    <span class="number">0.000</span> {<span class="built_in">method <span class="string">'disable'</span> of <span class="string">'_lsprof.Profiler'</span> objects</span>}
        <span class="number">1</span>    <span class="number">0.038</span>    <span class="number">0.038</span>    <span class="number">0.038</span>    <span class="number">0.038</span> {<span class="built_in">sorted</span>}
</code></pre><h3 id="你有过失败的经历吗？">你有过失败的经历吗？</h3><p><strong>为什么提这个问题？</strong></p>
<p>恰当地回答这个问题说明你用于承认错误，为自己的错误负责，并且能够从错误中学习。如果你想变得对别人有帮助的话，所有这些都是特别重要的。如果你真的是个完人，那就太糟了，回答这个问题的时候你可能都有点创意了。</p>
<p><strong>错误的答案</strong></p>
<p>我从来没有失败过！</p>
<h3 id="你有实施过个人项目吗？">你有实施过个人项目吗？</h3><p>如果做过个人项目，这说明从更新自己的技能水平方面来看，你愿意比最低要求付出更多的努力。如果你有维护的个人项目，工作之外也坚持编码，那么你的雇主就更可能把你视作为会增值的资产。即使他们不问这个问题，我也认为谈谈这个话题很有帮助。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Other Notes]]></title>
      <url>http://lovenight.github.io/Notes/index.html</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">常用代码和知识点速查</blockquote>

<h1 id="adb_命令">adb 命令</h1><h2 id="给单个目录添加读写权限">给单个目录添加读写权限</h2><pre><code>adb <span class="keyword">shell</span> <span class="keyword">su</span> -c <span class="string">"chmod 777 /data"</span>
</code></pre><h2 id="给目录下所有文件和子目录加读写权限">给目录下所有文件和子目录加读写权限</h2><pre><code>adb <span class="keyword">shell</span> <span class="keyword">su</span> -c <span class="string">"chmod 777 /data/data/com.example.test/*"</span>
</code></pre><p>Read More:<a href="http://lovenight.github.io/2015/12/08/Android%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E6%97%B6DDMS%E6%97%A0%E6%B3%95%E6%9F%A5%E7%9C%8B-data%E7%9B%AE%E5%BD%95/">Android真机调试时DDMS无法查看/data目录</a></p>
<hr>
<h1 id="七牛图片处理">七牛图片处理</h1><p>限定长边，生成不超过500x500的缩略图，在网址后加：</p>
<pre><code>?imageMogr2/thumbnail/<span class="number">500</span>x500
</code></pre><hr>
<h1 id="命令行">命令行</h1><h2 id="简易Web服务：">简易Web服务：</h2><p>cd 进入指定文件夹，执行</p>
<pre><code>python -m http<span class="class">.server</span> <span class="number">8000</span>
</code></pre><p>其他电脑用浏览器打开<code>本机IP:8000</code>即可当FTP使用</p>
<h2 id="强制删除文件夹">强制删除文件夹</h2><p>可用<code>help 命令名</code>查询相关帮助</p>
<pre><code>rd /s /<span class="tag">q</span> 路径\文件夹名
</code></pre><h2 id="强制删除文件">强制删除文件</h2><pre><code><span class="tag">del</span> /f /<span class="tag">a</span> /<span class="tag">q</span> 路径\文件名
</code></pre><hr>
<h1 id="Hexo博客之NexT主题">Hexo博客之NexT主题</h1><h2 id="独立居中的引用">独立居中的引用</h2><p>带上下分割线的引用，引用内文本将自动居中。代码如下，三选一。效果见本文开头，「常用代码和知识点速查」这几个字。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">blockquote</span> <span class="attribute">class</span>=<span class="value">"blockquote-center"</span>&gt;</span>blah blah blah<span class="tag">&lt;/<span class="title">blockquote</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Built-in tag (Require NexT 0.4.5 or above) --&gt;</span></span><br><span class="line">&#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 别名 --&gt;</span></span><br><span class="line">&#123;% cq %&#125; blah blah blah &#123;% endcq %&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="突破容器限制宽度的图片">突破容器限制宽度的图片</h2><p>图片将自动扩展 26%，突破文章宽度。</p>
<p>代码三选一：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"/image-url"</span> <span class="attribute">class</span>=<span class="value">"full-image"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Built-in tag (Require NexT 0.4.5 or above) --&gt;</span></span><br><span class="line">&#123;% fullimage /image-url, alt, title %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 别名 --&gt;</span></span><br><span class="line">&#123;% fi /image-url, alt, title %&#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<h1 id="VBA代码块">VBA代码块</h1><ul>
<li><a href="http://lovenight.github.io/2015/12/10/%E8%87%AA%E5%B7%B1%E5%86%99%E7%9A%84%E5%AE%9E%E7%94%A8VBA%E4%BB%A3%E7%A0%81%E5%90%88%E9%9B%86/">自己写的实用VBA代码合集</a></li>
</ul>
<hr>
<h1 id="正则表达式">正则表达式</h1><h2 id="技术文章">技术文章</h2><ul>
<li><a href="http://www.imkevinyang.com/2009/08/%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%89%BE%E5%87%BA%E4%B8%8D%E5%8C%85%E5%90%AB%E7%89%B9%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9D%A1%E7%9B%AE.html" target="_blank" rel="external">使用正则表达式找出不包含特定字符串的条目</a></li>
</ul>
<h2 id="正则表达式工具">正则表达式工具</h2><p><a href="http://www.codeproject.com/Articles/3669/Expresso-A-Tool-for-Building-and-Testing-Regular-E" target="_blank" rel="external">Expresso</a><br><a href="http://www.regexbuddy.com/" target="_blank" rel="external">RegexBuddy</a></p>
<h2 id="正则表达式知识">正则表达式知识</h2><table>
<thead>
<tr>
<th style="text-align:left">字符</th>
<th style="text-align:left">解释</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">x</td>
<td style="text-align:left">字符x(x可代表任何合法的字符)</td>
</tr>
<tr>
<td style="text-align:left">\0mnn</td>
<td style="text-align:left">八进制数0mnn所表示的字符</td>
</tr>
<tr>
<td style="text-align:left">\xhh</td>
<td style="text-align:left">十六进制值0xhh所表示的字符</td>
</tr>
<tr>
<td style="text-align:left">\uhhhh</td>
<td style="text-align:left">十六进制值0xhhhh所表示的UNICODE字符</td>
</tr>
<tr>
<td style="text-align:left">\t</td>
<td style="text-align:left">制表符(‘\u0009’)</td>
</tr>
<tr>
<td style="text-align:left">\n</td>
<td style="text-align:left">新行(换行)符(‘\u000A’)</td>
</tr>
<tr>
<td style="text-align:left">\r</td>
<td style="text-align:left">回车符(‘\u000D’)</td>
</tr>
<tr>
<td style="text-align:left">\f</td>
<td style="text-align:left">换页符(‘\u000C’)</td>
</tr>
<tr>
<td style="text-align:left">\a</td>
<td style="text-align:left">报警(bell)符(‘\u0007’)</td>
</tr>
<tr>
<td style="text-align:left">\e</td>
<td style="text-align:left">Escape符(‘\u001B’)</td>
</tr>
<tr>
<td style="text-align:left">\cx</td>
<td style="text-align:left">x对应的控制符。例如\cM匹配Ctrl-M。x值必须为A~Z或a~z之一</td>
</tr>
</tbody>
</table>
<table><thead><tr><th align="left">特殊字符</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">$</td><td align="left">匹配一行的结尾</td></tr><tr><td align="left">^</td><td align="left">匹配一行的开头</td></tr><tr><td align="left">()</td><td align="left">标记子表达式的开始和结束位置</td></tr><tr><td align="left">[]</td><td align="left">用于确定中括号表达式的开始和结束位置</td></tr><tr><td align="left">{}</td><td align="left">用于标记前面子表达式的出现频度</td></tr><tr><td align="left">*</td><td align="left">指定前面子表达式可以出现零次或多次</td></tr><tr><td align="left">+</td><td align="left">指定前面子表达式可以出现一次或多次</td></tr><tr><td align="left">?</td><td align="left">指定前面子表达式可以出现零次或一次</td></tr><tr><td align="left">.</td><td align="left">匹配除换行符\n之外的任何单字符</td></tr><tr><td align="left">\</td><td align="left">用于转义下一个字符，或指定八进制、十六进制字符</td></tr><tr><td align="left">|</td><td align="left">指定两项之间任选一项</td></tr></tbody></table>

<table>
<thead>
<tr>
<th style="text-align:left">预定义字符，即通配符</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">.</td>
<td style="text-align:left">可以匹配任何字符</td>
</tr>
<tr>
<td style="text-align:left">\d</td>
<td style="text-align:left">匹配0-9的所有数字</td>
</tr>
<tr>
<td style="text-align:left">\D</td>
<td style="text-align:left">匹配非数字</td>
</tr>
<tr>
<td style="text-align:left">\s</td>
<td style="text-align:left">匹配所有的空白字符，包括空格、制表、回车、换页、换行</td>
</tr>
<tr>
<td style="text-align:left">\S</td>
<td style="text-align:left">匹配所有的非空白字符</td>
</tr>
<tr>
<td style="text-align:left">\w</td>
<td style="text-align:left">匹配所有的单词字符，包括0-9、26个英文字母和下划线</td>
</tr>
<tr>
<td style="text-align:left">\W</td>
<td style="text-align:left">匹配所有的非单词字符</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:left">方括号表达式</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">表示枚举</td>
<td style="text-align:left">如[abc]表示abc中任意一字符</td>
</tr>
<tr>
<td style="text-align:left">表示范围：-</td>
<td style="text-align:left">如[a-f]表示a~f范围内任意字符</td>
</tr>
<tr>
<td style="text-align:left">表示求否：^</td>
<td style="text-align:left">如[^abc]表示非abc的任意字符</td>
</tr>
<tr>
<td style="text-align:left">表示“与”运算：&amp;&amp;</td>
<td style="text-align:left">如[a-z&amp;&amp;[^bc]]表示a-z范围内除bc外的所有字符</td>
</tr>
<tr>
<td style="text-align:left">表示“并”运算</td>
<td style="text-align:left">如[a-d[m-p]]表示[a-dm-p]</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:left">边界匹配符</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">^</td>
<td style="text-align:left">行的开头</td>
</tr>
<tr>
<td style="text-align:left">$</td>
<td style="text-align:left">行的结尾</td>
</tr>
<tr>
<td style="text-align:left">\b</td>
<td style="text-align:left">单词的边界</td>
</tr>
<tr>
<td style="text-align:left">\B</td>
<td style="text-align:left">非单词的边界</td>
</tr>
<tr>
<td style="text-align:left">\A</td>
<td style="text-align:left">输入的开头</td>
</tr>
<tr>
<td style="text-align:left">\G</td>
<td style="text-align:left">前一个匹配的结尾</td>
</tr>
<tr>
<td style="text-align:left">\Z</td>
<td style="text-align:left">输入的结尾，仅用于最后的结束符</td>
</tr>
<tr>
<td style="text-align:left">\z</td>
<td style="text-align:left">输入的结尾</td>
</tr>
</tbody>
</table>
<ul>
<li>Greedy(贪婪模式)：数量表示符默认采用贪婪模式，表达式会一直匹配下去，直到无法匹配为止</li>
<li>Reluctant(勉强模式)：用问号后缀表示，只会匹配最少的字符，也称最小匹配模式</li>
<li>Possessive(占有模式)：用加号后缀表示，目前只有Java支持占有模式，固定从字符串第一个字母开始贪婪匹配。</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">贪婪模式</th>
<th style="text-align:left">勉强模式</th>
<th style="text-align:left">占有模式</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">X?</td>
<td style="text-align:left">X??</td>
<td style="text-align:left">X?+</td>
<td style="text-align:left">X表达式出现零次或一次</td>
</tr>
<tr>
<td style="text-align:left">X*</td>
<td style="text-align:left">X*?</td>
<td style="text-align:left">X*+</td>
<td style="text-align:left">X表达式出现零次或多次</td>
</tr>
<tr>
<td style="text-align:left">X+</td>
<td style="text-align:left">X+?</td>
<td style="text-align:left">X++</td>
<td style="text-align:left">X表达式出现一次或多次</td>
</tr>
<tr>
<td style="text-align:left">X{n}</td>
<td style="text-align:left">X{n}?</td>
<td style="text-align:left">X{n}+</td>
<td style="text-align:left">X表达式出现n次</td>
</tr>
<tr>
<td style="text-align:left">X{n,}</td>
<td style="text-align:left">X{n,}?</td>
<td style="text-align:left">X{n,}+</td>
<td style="text-align:left">X表达式最少出现n次</td>
</tr>
<tr>
<td style="text-align:left">X{n,m}</td>
<td style="text-align:left">X{n,m}?</td>
<td style="text-align:left">X{n,m}+</td>
<td style="text-align:left">X表达式最少出现n次，最多出现m次</td>
</tr>
</tbody>
</table>
<h2 id="捕获组"><strong>捕获组</strong></h2><table>
<thead>
<tr>
<th>字符</th>
<th>描述</th>
<th>示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>(pattern)</td>
<td>匹配pattern并捕获结果，自动设置组号。</td>
<td><code>(abc)+d</code>匹配abcd或者abcabcd</td>
</tr>
<tr>
<td>(?&lt;name&gt;pattern)或<code>(?&#39;name&#39;pattern)</code></td>
<td>匹配pattern并捕获结果，设置name为组名。</td>
<td></td>
</tr>
<tr>
<td>\num</td>
<td>对捕获组的反向引用。其中 num 是一个正整数。</td>
<td><code>(\w)(\w)\2\1</code>匹配abba</td>
</tr>
<tr>
<td>\k&lt;name&gt;或<code>\k&#39;name&#39;</code></td>
<td>对命名捕获组的反向引用。其中 name 是捕获组名。</td>
<td><code>(?&lt;group&gt;\w)abc\k&lt;group&gt;</code>匹配xabcx</td>
</tr>
</tbody>
</table>
<h2 id="非捕获组"><strong>非捕获组</strong></h2><table><thead><tr><th>字符</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>(?:pattern)</td><td>匹配pattern，但不捕获匹配结果。</td><td><code>industr(?:y|ies)</code><br>匹配 “industry”或 “industries”</td></tr><tr><td>(?=pattern)</td><td>零宽度正向预查，不捕获匹配结果。</td><td><code>Windows(?=95|98|NT|2000)</code><br>匹配 “Windows2000” 中的 “Windows”<br>不匹配 “Windows3.1” 中的 “Windows”</td></tr><tr><td>(?!pattern)</td><td>零宽度负向预查，不捕获匹配结果</td><td><code>Windows(?!95|98|NT|2000)</code><br>匹配 “Windows3.1”中的 “Windows”<br>不匹配 “Windows2000”中的 “Windows”</td></tr><tr><td>(?&lt;=pattern)</td><td>零宽度正向回查，不捕获匹配结果。</td><td><code>2000(?&lt;=Office|Word|Excel)</code><br>匹配 “Office2000” 中的 “2000”<br>不匹配 “Windows2000”中的 “2000”</td></tr><tr><td>(?&lt;!pattern)</td><td>零宽度负向回查，不捕获匹配结果。</td><td><code>2000(?&lt;!Office|Word|Excel)</code><br>匹配 “Windows2000”中的 “2000”<br>不匹配 “Office2000”中的 “2000”</td></tr></tbody></table>



<h2 id="注释"><strong>注释</strong></h2><table><thead><tr><th>字符</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>(?#comment)</td><td>comment是注释，不对正则表达式的处理产生任何影响</td><td><code>2[0-4]\d(?#200-249)|25<a href="?#250-255">0-5</a>|1?\d\d?(?#0-199)</code><br>匹配0-255的整数</td></tr></tbody></table>



<h2 id="正则式之python篇">正则式之python篇</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切分字符串</span></span><br><span class="line">re.split(<span class="string">r'[\s\,\;]+'</span>, <span class="string">'a,b;; c  d'</span>) <span class="comment"># ['a', 'b', 'c', 'd']</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># match 匹配成功则返回第一个成功的匹配，否则返回None。从字符串开头开始匹配</span></span><br><span class="line">re.match(<span class="string">r'\d&#123;3&#125;\-\d&#123;3,8&#125;'</span>, <span class="string">'010-12345'</span>)</span><br><span class="line">re.match(<span class="string">r'\d&#123;3&#125;\-\d&#123;3,8&#125;'</span>, <span class="string">'-010-12345'</span>) <span class="comment"># None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># search 与match差不多。唯一的区别是search扫描整个字符串并返回第一个成功的匹配。</span></span><br><span class="line">re.search(<span class="string">r'\d&#123;3&#125;\-\d&#123;3,8&#125;'</span>, <span class="string">'-010-12345'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># match + 分组，如果正则表达式中定义了组，就可以在Match对象上用group()方法提取出子串来</span></span><br><span class="line">m = re.match(<span class="string">r'^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$'</span>, <span class="string">'010-12345'</span>)</span><br><span class="line">m.group(<span class="number">0</span>) <span class="comment"># 永远是匹配的整个字符串，此处为：'010-12345'</span></span><br><span class="line">m.group(<span class="number">1</span>) <span class="comment"># '010'</span></span><br><span class="line">m.group(<span class="number">2</span>) <span class="comment"># '12345'</span></span><br><span class="line">m.groups() <span class="comment"># ('010', '12345')</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 预编译正则表达式</span></span><br><span class="line">re_telephone = re.compile(<span class="string">r'^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$'</span>)</span><br><span class="line"><span class="comment"># 使用：</span></span><br><span class="line">re_telephone.match(<span class="string">'010-12345'</span>).groups() <span class="comment"># ('010', '12345')</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换</span></span><br><span class="line">phone = <span class="string">"2004-959-559 # This is Phone Number"</span></span><br><span class="line">re.sub(<span class="string">r'#.*$'</span>, <span class="string">""</span>, phone)   <span class="comment"># '2004-959-559 '</span></span><br><span class="line">re.sub(<span class="string">r'\D'</span>, <span class="string">""</span>, phone)    <span class="comment"># '2004959559'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 找出所有匹配的对象。有捕获组时仅返回捕获组</span></span><br><span class="line">re.findall(<span class="string">r"\d+"</span>,<span class="string">"12a32bc43jf3"</span>)   <span class="comment"># ['12', '32', '43', '3']</span></span><br><span class="line">re.findall(<span class="string">r"\d([a-z]+?)\d"</span>,<span class="string">"12a32bc43jf3"</span>)   <span class="comment"># ['a', 'bc', 'jf']</span></span><br><span class="line">re.findall(<span class="string">r"\d([a-z]+?)\d+([a-z]+?)"</span>,<span class="string">"12a32bc43jf3adc23"</span>)   <span class="comment"># [('a', 'b'), ('jf', 'a')]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 找出所有匹配的对象。返回迭代器。</span></span><br><span class="line">re.finditer(<span class="string">r"\d+"</span>,<span class="string">"12a32bc43jf3"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清空缓存中的正则表达式</span></span><br><span class="line">re.purge()</span><br></pre></td></tr></table></figure>
<p>编译标志参数</p>
<p>编译标志让你可以修改正则表达式的一些运行方式。在 re 模块中标志可以使用两个名字，一个是全名如 IGNORECASE，一个是缩写，一字母形式如 I。（如果你熟悉 Perl 的模式修改，一字母形式使用同样的字母；例如 re.VERBOSE的缩写形式是 re.X。）多个标志可以通过按位 OR-ing 它们来指定。如 re.I | re.M 被设置成 I 和 M 标志：</p>
<ul>
<li>I –&gt; IGNORECASE<br>使匹配对大小写不敏感；字符类和字符串匹配字母时忽略大小写。举个例子，[A-Z]也可以匹配小写字母，Spam 可以匹配 “Spam”, “spam”, 或 “spAM”。这个小写字母并不考虑当前位置。</li>
<li>L –&gt; LOCALE<br>影响 “w, “W, “b, 和 “B，这取决于当前的本地化设置。<br>locales 是 C 语言库中的一项功能，是用来为需要考虑不同语言的编程提供帮助的。举个例子，如果你正在处理法文文本，你想用 “w+ 来匹配文字，但 “w 只匹配字符类 [A-Za-z]；它并不能匹配 “é” 或 “?”。如果你的系统配置适当且本地化设置为法语，那么内部的 C 函数将告诉程序 “é” 也应该被认为是一个字母。当在编译正则表达式时使用 LOCALE 标志会得到用这些 C 函数来处理 “w 後的编译对象；这会更慢，但也会象你希望的那样可以用 “w+ 来匹配法文文本。</li>
<li>M –&gt; MULTILINE<br>使用 “^” 只匹配字符串的开始，而 $ 则只匹配字符串的结尾和直接在换行前（如果有的话）的字符串结尾。当本标志指定後， “^” 匹配字符串的开始和字符串中每行的开始。同样的， $ 元字符匹配字符串结尾和字符串中每行的结尾（直接在每个换行之前）。</li>
<li>S –&gt; DOTALL<br>使 “.” 特殊字符完全匹配任何字符，包括换行；没有这个标志， “.” 匹配除了换行外的任何字符。</li>
<li>X –&gt; VERBOSE<br>该标志通过给予你更灵活的格式以便你将正则表达式写得更易于理解。当该标志被指定时，在 RE 字符串中的空白符被忽略，除非该空白符在字符类中或在反斜杠之後；这可以让你更清晰地组织和缩进 RE。它也可以允许你将注释写入 RE，这些注释会被引擎忽略；注释用 “#”号 来标识，不过该符号不能在字符串或反斜杠之後。</li>
</ul>
<h2 id="正则式之Java篇">正则式之Java篇</h2><p>Pattern是一个正则表达式编译后在内存中的表现形式，是不可变类，可供多个并发线程安全使用。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.regex.Pattern</span><br><span class="line"></span><br><span class="line"><span class="comment">//将一个字符串编译成Pattern对象</span></span><br><span class="line">Pattern p = Pattern.compile(<span class="string">"a*b"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用Pattern对象创建Matcher对象，可多次使用</span></span><br><span class="line">Matcher m = p.matcher(<span class="string">"aaaaab"</span>);</span><br><span class="line"><span class="keyword">boolean</span> b = m.matches();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 仅使用一次的快捷方法</span></span><br><span class="line"><span class="keyword">boolean</span> b = Pattern.matches(<span class="string">"a*b"</span>, <span class="string">"aaaaab"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个Pattern对象，并用它建立一个Matcher对象</span></span><br><span class="line">Matcher m = Pattern.compile(<span class="string">"\\w+"</span>).matcher(<span class="string">"Java is very easy!"</span>);</span><br><span class="line"><span class="keyword">while</span>(m.find())&#123;</span><br><span class="line">    System.out.println(m.group());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//find()方法可以传入一个int类型的参数，从该int索引处向下搜索</span></span><br><span class="line"><span class="keyword">while</span>(m.find(i))&#123;</span><br><span class="line">    System.out.print(m.group() + <span class="string">"\t"</span>);</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//start()和end()方法主要用于确定子串在目标字符串中的位置</span></span><br><span class="line"><span class="keyword">while</span>(m.find())&#123;</span><br><span class="line">    System.out.println(m.group() + <span class="string">"子串的起始位置："</span></span><br><span class="line">            + m.start() + <span class="string">"，其结束位置"</span> + m.end());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//reset()将现有的Matcher对象应用于新的字符序列</span></span><br><span class="line">Pattern p = Pattern.compile(<span class="string">"\\w+"</span>);</span><br><span class="line">Matcher m = Pattern.matcher(<span class="string">"King"</span>);</span><br><span class="line">m.reset(<span class="string">"Yes"</span>);</span><br></pre></td></tr></table></figure>
<p>String类与正则式相关的方法</p>
<pre><code>boolean <span class="function"><span class="title">matches</span><span class="params">(String regex)</span></span>：是否匹配
String <span class="function"><span class="title">replaceAll</span><span class="params">(String regex, String replacement)</span></span>：全部替换
String <span class="function"><span class="title">replaceFirst</span><span class="params">(String regex, String replacement)</span></span>：替换第一个匹配结果
String[] <span class="function"><span class="title">split</span><span class="params">(String regex)</span></span>：用regex分割字符串
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Links]]></title>
      <url>http://lovenight.github.io/Links/index.html</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">常用链接</blockquote>


<h1 id="奇文共欣赏">奇文共欣赏</h1><ul>
<li><a href="http://lovenight.github.io/2015/11/22/%E8%B6%A3%E5%9B%BE%E6%94%B6%E9%9B%86/">趣图收集</a></li>
<li><a href="http://coolshell.cn/articles/4758.html" target="_blank" rel="external">如何写出无法维护的代码</a></li>
</ul>
<hr>
<h1 id="书籍">书籍</h1><ul>
<li><a href="http://git-scm.com/book/zh/v2" target="_blank" rel="external">《Pro Git》</a>：Git教程</li>
<li><a href="http://gitbook.liuhui998.com/" target="_blank" rel="external">Git Community Book 中文版</a>：汇聚了Git社区的很多精华,</li>
<li><a href="http://www.kancloud.cn/" target="_blank" rel="external">看云</a>：技术文档/书籍在线创作、协作、分享和托管平台</li>
<li><a href="http://ctext.org/zhs" target="_blank" rel="external">中国哲学书电子化计划</a>：历代中文文献资料库</li>
<li><a href="http://www.guoxuedashi.com/" target="_blank" rel="external">国学大师</a>：古籍、汉字</li>
<li><a href="http://wenxian.fanren8.com/" target="_blank" rel="external">殆知阁</a>：古籍</li>
<li><a href="http://sou-yun.com/poetlife.html" target="_blank" rel="external">唐宋文学编年地图</a>：以地图的形式将135位唐宋著名诗人的作品汇总了起来，除作品外，诗人的行迹也一一列清。从诗人列表中点击诗人名字，还能看到路线图。</li>
<li><a href="http://www.byscrj.com/jmm/index.htm" target="_blank" rel="external">白云深处人家</a>：道经</li>
<li><a href="http://bbs.ddwxw.com/" target="_blank" rel="external">丹道文献网</a></li>
</ul>
<hr>
<h1 id="工具">工具</h1><ul>
<li><a href="http://xmt.cn/" target="_blank" rel="external">新媒体管家</a>：浏览器插件，用于微信公众平台排版、编辑、帐号管理</li>
<li><a href="https://coding.net/u/scaffrey/p/hosts/git/raw/master/hosts" target="_blank" rel="external">hosts定期更新</a></li>
<li>正则表达式工具：<a href="http://www.codeproject.com/Articles/3669/Expresso-A-Tool-for-Building-and-Testing-Regular-E" target="_blank" rel="external">Expresso</a>  or  <a href="http://www.regexbuddy.com/" target="_blank" rel="external">RegexBuddy</a></li>
<li>翻墙：<a href="https://www.anotherhome.net/1376" target="_blank" rel="external">Hosts文件自动配置工具</a>  or  <a href="https://shadowsocks.com/" target="_blank" rel="external">ShadowSocks</a>  or  <a href="https://coding.net/u/scaffrey/p/hosts/git" target="_blank" rel="external">scaffrey</a></li>
<li><a href="http://p.codekk.com/" target="_blank" rel="external">codeKK</a>：开源分享、源码解析、框架设计、好文推荐、Android 内推</li>
<li><a href="https://www.processon.com/" target="_blank" rel="external">ProcessOn</a>：一款用HTML5开发的在线作图工具，包括：思维导图、流程图、UI原型图、Android界面原型图、UML图……等</li>
<li><a href="http://unbug.github.io/codelf/" target="_blank" rel="external">CODELF</a>：编程命名工具。搜索Github, Bitbucket, Google Code, Codeplex, Sourceforge, Fedora Project上的开源项目的源码，匹配出与这些词汇相关的变量名和函数名。关键字可中英混合，如：相互follow</li>
<li><a href="http://tool.chinaz.com/Tools/JsFormat.aspx" target="_blank" rel="external">JavaScript/HTML格式化</a>：站长工具</li>
<li><a href="http://www.lfd.uci.edu/~gohlke/pythonlibs" target="_blank" rel="external">Python Extension Packages for Windows</a>：已经编译成<code>.whl</code>格式的第三方库</li>
<li><a href="http://home.putclub.com/tools/find/" target="_blank" rel="external">文本对比</a></li>
<li><a href="http://libs.useso.com/" target="_blank" rel="external">360网站卫士常用前端公共库CDN服务</a>：取代Google公共库以提升效率</li>
<li><a href="http://www.zdic.net/" target="_blank" rel="external">汉典</a>：在线中文词典</li>
<li><a href="http://sendcloud.sohu.com/" target="_blank" rel="external">SendCloud</a>：触发邮件发送系统</li>
<li><a href="http://www.pgyer.com/" target="_blank" rel="external">蒲公英</a>：应用内测</li>
<li><a href="http://www.testin.cn/portal.action;jsessionid=DDEAB0B54333165500D084A3F16D6F96?op=Portal.index" target="_blank" rel="external">Testin</a>：应用测试</li>
<li><a href="https://www.anotherhome.net/1376" target="_blank" rel="external">Hosts文件自动配置工具</a>：简单的翻墙方法</li>
<li><a href="http://life.httpcn.com/liuyao.asp" target="_blank" rel="external">六爻排盘</a></li>
</ul>
<h2 id="Sublime_Text">Sublime Text</h2><ul>
<li><a href="http://lovenight.github.io/2015/11/30/%E6%88%91%E7%9A%84Sublime-Text-3-%E9%85%8D%E7%BD%AE/">我的Sublime Text 3 配置</a></li>
</ul>
<h2 id="七牛">七牛</h2><ul>
<li><a href="http://www.qiniu.com/" target="_blank" rel="external">七牛云存储</a>：图床</li>
<li><a href="http://developer.qiniu.com/docs/v6/api/reference/fop/image/imagemogr2.html#imagemogr2-samples" target="_blank" rel="external">七牛图片高级处理</a>：通过修改网址缩放图片</li>
</ul>
<hr>
<h1 id="Chrome_插件">Chrome 插件</h1><ul>
<li><a href="https://chrome.google.com/webstore/detail/iahnhfdhidomcpggpaimmmahffihkfnj" target="_blank" rel="external">Json-handle</a>：对JSON格式的内容进行浏览和编辑，以树形图样式展现JSON文档，并可实时编辑</li>
<li><a href="https://chrome.google.com/webstore/detail/adblock-plus/cfhdojbkjhnklbpkdaibdccddilifddb?hl=zh-CN" target="_blank" rel="external">Adblock Plus</a>：屏蔽广告插件</li>
<li><a href="https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm/related" target="_blank" rel="external">Postman</a>：模拟POST请求</li>
<li><a href="https://chrome.google.com/webstore/detail/rss-feed-reader/pnjaodmkngahhkoihejjehlcdlnohgmp?hl=zh-CN" target="_blank" rel="external">RSS Feed Reader</a>：RSS订阅</li>
<li><a href="https://github.com/buunguyen/octotree" target="_blank" rel="external">Octotree</a>：Github仓库页面自动在左侧生成目录树。</li>
<li><a href="https://chrome.google.com/webstore/detail/%E7%99%BE%E5%BA%A6%E8%AF%86%E5%9B%BE/ckphchjljlekndhjifdfpmmnlaijimcd/related?utm_source=chrome-app-launcher-info-dialog" target="_blank" rel="external">百度识图</a>：百度识图插件</li>
</ul>
<hr>
<h1 id="综合型技术博客">综合型技术博客</h1><ul>
<li><a href="http://www.liaoxuefeng.com/category/0013738748415562fee26e070fa4664ad926c8e30146c67000" target="_blank" rel="external">廖雪峰</a></li>
<li><a href="http://blog.csdn.net/yanzi1225627" target="_blank" rel="external">yanzi1225627</a>：android、java、opencv、图像处理</li>
<li><a href="http://coolshell.cn/" target="_blank" rel="external">陈皓-酷壳</a>：C/C++/Java和Unix/Linux/Windows</li>
<li><a href="http://gank.io/" target="_blank" rel="external">干货集中营</a></li>
</ul>
<hr>
<h1 id="论坛">论坛</h1><ul>
<li><a href="http://proxy3.zju88.net/agent/index.do" target="_blank" rel="external">浙大88</a></li>
</ul>
<hr>
<h1 id="美景">美景</h1><ul>
<li><a href="http://www.douban.com/people/songlet/photos" target="_blank" rel="external">宋乐天的豆瓣相册</a></li>
</ul>
<hr>
<h1 id="API">API</h1><h2 id="综合型API">综合型API</h2><ul>
<li><a href="http://www.devstore.cn/" target="_blank" rel="external">DEV Store</a>：开发者服务商店</li>
<li><a href="http://apistore.baidu.com/" target="_blank" rel="external">API Store</a>：百度出品，但是搜不到下面几个百度API，真是奇怪。</li>
<li><a href="http://developer.baidu.com/map/index.php?title=car" target="_blank" rel="external">车联网API</a>：功能丰富，可用于手机</li>
<li><a href="http://developer.baidu.com/map/index.php?title=webapi" target="_blank" rel="external">Web服务API</a>：包含IP定位、公交驾车路线、坐标转换等API</li>
<li><a href="http://www.k780.com/api" target="_blank" rel="external">k780数据</a></li>
<li><a href="http://www.apix.cn/" target="_blank" rel="external">apix.cn</a>：粗略浏览了一下，较有用的有汉字转拼音接口</li>
<li><a href="http://www.91cha.com/" target="_blank" rel="external">91查</a></li>
<li><a href="https://www.juhe.cn/" target="_blank" rel="external">聚合数据</a></li>
</ul>
<h2 id="天气API">天气API</h2><ul>
<li><p><a href="http://openweather.weather.com.cn/" target="_blank" rel="external">气象局开放平台</a><br>说明：<br>需要注册认证才能使用。<br>未注册可以考虑解析网页：<a href="http://m.weather.com.cn/mweather/101210101.shtml" target="_blank" rel="external">http://m.weather.com.cn/mweather/101210101.shtml</a><br>XML接口根节点： <a href="http://flash.weather.com.cn/wmaps/xml/china.xml" target="_blank" rel="external">http://flash.weather.com.cn/wmaps/xml/china.xml</a><br>XML接口主要作用是递归获取全国几千个县以上单位的城市代码，如：<br>浙江的XML地址为：<a href="http://flash.weather.com.cn/wmaps/xml/zhejiang.xml" target="_blank" rel="external">http://flash.weather.com.cn/wmaps/xml/zhejiang.xml</a><br>杭州的XML地址为：<a href="http://flash.weather.com.cn/wmaps/xml/hangzhou.xml" target="_blank" rel="external">http://flash.weather.com.cn/wmaps/xml/hangzhou.xml</a><br>一次性获取全国+国外主要城市，8763个城市列表信息：<a href="http://mobile.weather.com.cn/js/citylist.xml" target="_blank" rel="external">http://mobile.weather.com.cn/js/citylist.xml</a><br>未来几天天气：<a href="http://m.weather.com.cn/atad/101010100.html" target="_blank" rel="external">http://m.weather.com.cn/atad/101010100.html</a> 若把城市代码换成杭州101210101就变成网页</p>
</li>
<li><p>新浪天气：<code>http://php.weather.sina.com.cn/iframe/index/w_cl.php?day=3&amp;city=杭州</code><br>返回如下：</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>() &#123;</span><br><span class="line">    var w = [];</span><br><span class="line">    w[<span class="string">'杭州'</span>] = [&#123;</span><br><span class="line">        s1: <span class="string">'阵雨'</span>,</span><br><span class="line">        s2: <span class="string">'小雨'</span>,</span><br><span class="line">        f1: <span class="string">'zhenyu'</span>,</span><br><span class="line">        f2: <span class="string">'xiaoyu'</span>,</span><br><span class="line">        t1: <span class="string">'16'</span>,</span><br><span class="line">        t2: <span class="string">'12'</span>,</span><br><span class="line">        p1: <span class="string">'≤3'</span>,</span><br><span class="line">        p2: <span class="string">'≤3'</span>,</span><br><span class="line">        d1: <span class="string">'无持续风向'</span>,</span><br><span class="line">        d2: <span class="string">'东北风'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        s1: <span class="string">'小雨'</span>,</span><br><span class="line">        s2: <span class="string">'阴'</span>,</span><br><span class="line">        f1: <span class="string">'xiaoyu'</span>,</span><br><span class="line">        f2: <span class="string">'yin'</span>,</span><br><span class="line">        t1: <span class="string">'16'</span>,</span><br><span class="line">        t2: <span class="string">'14'</span>,</span><br><span class="line">        p1: <span class="string">'≤3'</span>,</span><br><span class="line">        p2: <span class="string">'≤3'</span>,</span><br><span class="line">        d1: <span class="string">'东北风'</span>,</span><br><span class="line">        d2: <span class="string">'北风'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        s1: <span class="string">'阴'</span>,</span><br><span class="line">        s2: <span class="string">'阴'</span>,</span><br><span class="line">        f1: <span class="string">'yin'</span>,</span><br><span class="line">        f2: <span class="string">'yin'</span>,</span><br><span class="line">        t1: <span class="string">'18'</span>,</span><br><span class="line">        t2: <span class="string">'12'</span>,</span><br><span class="line">        p1: <span class="string">'≤3'</span>,</span><br><span class="line">        p2: <span class="string">'≤3'</span>,</span><br><span class="line">        d1: <span class="string">'北风'</span>,</span><br><span class="line">        d2: <span class="string">'北风'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        s1: <span class="string">'多云'</span>,</span><br><span class="line">        s2: <span class="string">'阴'</span>,</span><br><span class="line">        f1: <span class="string">'duoyun'</span>,</span><br><span class="line">        f2: <span class="string">'yin'</span>,</span><br><span class="line">        t1: <span class="string">'20'</span>,</span><br><span class="line">        t2: <span class="string">'14'</span>,</span><br><span class="line">        p1: <span class="string">'≤3'</span>,</span><br><span class="line">        p2: <span class="string">'≤3'</span>,</span><br><span class="line">        d1: <span class="string">'东南风'</span>,</span><br><span class="line">        d2: <span class="string">'东南风'</span></span><br><span class="line">    &#125;];</span><br><span class="line">    var add = &#123;</span><br><span class="line">        now: <span class="string">'2015-11-12 20:53:01'</span>,</span><br><span class="line">        time: <span class="string">'1447332781'</span>,</span><br><span class="line">        update: <span class="string">'北京时间11月12日17:40更新'</span>,</span><br><span class="line">        error: <span class="string">'0'</span>,</span><br><span class="line">        total: <span class="string">'1'</span></span><br><span class="line">    &#125;;</span><br><span class="line">    window.SWther = &#123;</span><br><span class="line">        w: w,</span><br><span class="line">        add: add</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)(); //<span class="number">0</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>说明：</p>
<blockquote>
<ul>
<li>s1:白天天气</li>
<li>s2:夜间天气</li>
<li>f1:白天天气拼音</li>
<li>f2:夜间天气拼音</li>
<li>t1:最高温度</li>
<li>t2:最低温度</li>
<li>p1:白天风力</li>
<li>p2:夜间风力</li>
<li>d1:白天风向</li>
<li>d2:夜间风向</li>
<li>now:现在时间</li>
<li>time:时间戳</li>
<li>update:更新时间</li>
</ul>
</blockquote>
<p>天气图片：把天气API获取到的天气标志转换为拼音，比如“多云”，转换为拼音“duoyun“，然后根据下面的规则转换为图片地址</p>
<blockquote>
<p>小图（78<em>78）：<br>白天： <a href="http://php.weather.sina.com.cn/images/yb3/78_78/duoyun_0.png" target="_blank" rel="external">http://php.weather.sina.com.cn/images/yb3/78_78/duoyun_0.png</a><br>夜间： <a href="http://php.weather.sina.com.cn/images/yb3/78_78/duoyun_1.png" target="_blank" rel="external">http://php.weather.sina.com.cn/images/yb3/78_78/duoyun_1.png</a><br>大图180</em>180<br>白天：<a href="http://php.weather.sina.com.cn/images/yb3/180_180/duoyun_0.png" target="_blank" rel="external">http://php.weather.sina.com.cn/images/yb3/180_180/duoyun_0.png</a><br> 夜间：<a href="http://php.weather.sina.com.cn/images/yb3/180_180/duoyun_1.png" target="_blank" rel="external">http://php.weather.sina.com.cn/images/yb3/180_180/duoyun_1.png</a></p>
</blockquote>
<ul>
<li><p>随身云天气API：简化版 <a href="http://wthrcdn.etouch.cn/weather_mini?citykey=101210101" target="_blank" rel="external">http://wthrcdn.etouch.cn/weather_mini?citykey=101210101</a><br>详细版 <a href="http://wthrcdn.etouch.cn/WeatherApi?citykey=101210101" target="_blank" rel="external">http://wthrcdn.etouch.cn/WeatherApi?citykey=101210101</a></p>
</li>
<li><p><a href="http://pm25.in/" target="_blank" rel="external">PM25.in</a> PM2.5指数，第三方提供pm2.5/pm10环境数据的网站，数据来源于中国国家环境监测中心，其接口使用需要申请KEY</p>
</li>
<li><p><a href="http://www.haoservice.com/docs/6" target="_blank" rel="external">Hao Service</a> 天气</p>
</li>
</ul>
<h2 id="其他API">其他API</h2><ul>
<li>[搜狐IP地址查询]<a href="http://pv.sohu.com/cityjson?ie=utf-8" target="_blank" rel="external">http://pv.sohu.com/cityjson?ie=utf-8</a><br>详细版：<a href="http://txt.go.sohu.com/ip/soip" target="_blank" rel="external">http://txt.go.sohu.com/ip/soip</a></li>
<li><a href="http://open.weibo.com/wiki/%E5%BE%AE%E5%8D%9AAPI" target="_blank" rel="external">新浪微博</a></li>
<li><a href="https://github.com/izzyleung/ZhihuDailyPurify/wiki/%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5-API-%E5%88%86%E6%9E%90" target="_blank" rel="external">知乎日报</a> 知乎日报</li>
<li><a href="https://www.anotherhome.net/api/zhihu/" target="_blank" rel="external">另一个知乎日报</a> 返回 XML</li>
<li><a href="http://developers.douban.com/wiki/?title=tutorial" target="_blank" rel="external">豆瓣</a> 附<a href="http://www.douban.com/service/apidoc/reference/" target="_blank" rel="external">豆瓣API参考手册</a></li>
<li><a href="http://string2pinyin.sinaapp.com/doc.html" target="_blank" rel="external">中文转拼音</a></li>
<li><a href="https://msdn.microsoft.com/zh-cn/library/office/dn575425.aspx" target="_blank" rel="external">OneNote API 入门</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android Notes]]></title>
      <url>http://lovenight.github.io/Android/index.html</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">Android 和 Java 资源汇总</blockquote>


<h1 id="API_等级">API 等级</h1><pre><code>API等级<span class="number">1</span>：Android <span class="number">1.0</span>
API等级<span class="number">2</span>：Android <span class="number">1.1</span> Petit Four
API等级<span class="number">3</span>：Android <span class="number">1.5</span> Cupcake
API等级<span class="number">4</span>：Android <span class="number">1.6</span> Donut
API等级<span class="number">5</span>：Android <span class="number">2.0</span> Éclair
API等级<span class="number">6</span>：Android <span class="number">2.0</span><span class="number">.1</span> Éclair
API等级<span class="number">7</span>：Android <span class="number">2.1</span> Éclair
API等级<span class="number">8</span>：Android <span class="number">2.2</span> - <span class="number">2.2</span><span class="number">.3</span> Froyo
API等级<span class="number">9</span>：Android <span class="number">2.3</span> - <span class="number">2.3</span><span class="number">.2</span> Gingerbread
API等级<span class="number">10</span>：Android <span class="number">2.3</span><span class="number">.3</span>-<span class="number">2.3</span><span class="number">.7</span> Gingerbread
API等级<span class="number">11</span>：Android <span class="number">3.0</span> Honeycomb
API等级<span class="number">12</span>：Android <span class="number">3.1</span> Honeycomb
API等级<span class="number">13</span>：Android <span class="number">3.2</span> Honeycomb
API等级<span class="number">14</span>：Android <span class="number">4.0</span> - <span class="number">4.0</span><span class="number">.2</span> Ice Cream Sandwich
API等级<span class="number">15</span>：Android <span class="number">4.0</span><span class="number">.3</span> - <span class="number">4.0</span><span class="number">.4</span> Ice Cream Sandwich
API等级<span class="number">16</span>：Android <span class="number">4.1</span> Jelly Bean
API等级<span class="number">17</span>：Android <span class="number">4.2</span> Jelly Bean
API等级<span class="number">18</span>：Android <span class="number">4.3</span> Jelly Bean
API等级<span class="number">19</span>：Android <span class="number">4.4</span> KitKat
API等级<span class="number">20</span>：Android <span class="number">4.4</span>W
API等级<span class="number">21</span>：Android <span class="number">5.0</span> Lollipop
API等级<span class="number">22</span>：Android <span class="number">5.1</span> Lollipop
API等级<span class="number">23</span>：Android <span class="number">6.0</span> Marshmallow
</code></pre><hr>
<h1 id="恶补编程基础">恶补编程基础</h1><ul>
<li><a href="http://zhuanlan.zhihu.com/xiao-jing-mo/19959253" target="_blank" rel="external">编程入门指南</a></li>
</ul>
<hr>
<h1 id="Docs">Docs</h1><ul>
<li><a href="http://developer.android.com/reference/packages.html" target="_blank" rel="external">官方API docs</a>：英文</li>
<li><a href="http://www.android-doc.com/reference/packages.html" target="_blank" rel="external">Android API</a>：有些是中文，API Level最高只有19</li>
</ul>
<hr>
<h1 id="工具网站">工具网站</h1><ul>
<li><a href="http://www.androiddevtools.cn/" target="_blank" rel="external">AndroidDevTools</a></li>
<li><a href="http://www.androidchina.net/" target="_blank" rel="external">Android 开发中文站</a></li>
</ul>
<hr>
<h1 id="重点推荐">重点推荐</h1><ul>
<li><p><a href="http://www.csdn.net/article/2015-10-05/2825847" target="_blank" rel="external">Android开发最佳实践</a><br><strong>摘要</strong>：前段时间，Google公布了Android开发最佳实践的一系列课程，涉及到一些平时开发过程中应该保持的良好习惯以及如何使用最新的Android Design Support Library来快速实现官方推荐的Material Design样式的应用。</p>
</li>
<li><p><a href="http://wuchong.me/blog/2014/08/28/how-to-correctly-write-singleton-pattern/" target="_blank" rel="external">如何正确地写出单例模式</a><br><strong>摘要</strong>：单例模式算是设计模式中最容易理解，也是最容易手写代码的模式了吧。但是其中的坑却不少，所以也常作为面试题来考。本文主要对几种单例写法的整理，并分析其优缺点。很多都是一些老生常谈的问题，但如果你不知道如何创建一个线程安全的单例，不知道什么是双检锁，那这篇文章可能会帮助到你。</p>
</li>
<li><p><a href="http://www.infoq.com/cn/articles/android-in-depth-dalvik" target="_blank" rel="external">深入理解Android（二）：Java虚拟机Dalvik</a></p>
</li>
<li><a href="http://www.codeceo.com/article/133-java-interview-5-years.html" target="_blank" rel="external">近5年133个Java面试问题列表</a></li>
</ul>
<hr>
<h1 id="技术博客">技术博客</h1><ul>
<li><a href="https://github.com/android-cn/android-dev-cn" target="_blank" rel="external">中国部分 Android 开发者</a></li>
<li><a href="https://github.com/android-cn/android-dev-com" target="_blank" rel="external">国外部分 Android 开发者</a></li>
<li><a href="http://zmywly8866.github.io" target="_blank" rel="external">张明云</a></li>
<li><a href="http://blog.csdn.net/guolin_blog" target="_blank" rel="external">郭霖</a>：《第一行代码》作者</li>
<li><a href="http://www.trinea.cn/" target="_blank" rel="external">Trinea</a>：阿里巴巴 Java 开发工程师 <a href="https://github.com/trinea" target="_blank" rel="external">Github</a></li>
<li><a href="http://stormzhang.com/" target="_blank" rel="external">stormzhang</a></li>
<li><a href="https://github.com/mariotaku" target="_blank" rel="external">mariotaku</a></li>
<li><a href="http://blog.csdn.net/eclipsexys" target="_blank" rel="external">eclipse_xu</a>：《Android群英会》作者徐宜生</li>
<li><a href="http://blog.csdn.net/xiaanming" target="_blank" rel="external">xiaanming</a>：大量深入的Android技术文章</li>
<li><a href="http://blog.csdn.net/dxw2015" target="_blank" rel="external">沧笙踏歌</a>：某 android 新手</li>
<li><a href="http://blog.csdn.net/lzyzsd" target="_blank" rel="external">大头鬼Bruce</a>：中国 RxJava 教父级人物</li>
<li><a href="https://www.gitbook.com/@yongjhih" target="_blank" rel="external">yongjhih的Gitbook</a>：RxJava 相关</li>
<li><a href="http://thinkwyp.github.io/" target="_blank" rel="external">DaKa</a>：某Android</li>
<li><a href="http://blog.csdn.net/liuhe688" target="_blank" rel="external">liuhe688</a></li>
<li><a href="http://tengj.top/" target="_blank" rel="external">嘟嘟独立博客</a> Java相关</li>
</ul>
<h2 id="性能优化">性能优化</h2><ul>
<li><a href="http://zhuanlan.zhihu.com/zmywly8866/20416881" target="_blank" rel="external">值得推荐的Android应用性能检测工具列表</a></li>
<li><a href="http://wuche.info/archive.html" target="_blank" rel="external">行者无疆</a></li>
<li><a href="http://developer.android.com/intl/zh-cn/training/best-performance.html" target="_blank" rel="external">Best Practices for Performance</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLWz5rJ2EKKc9CBxr3BVjPTPoDPLdPIFCE" target="_blank" rel="external">Android Performance Patterns</a>:YouTube视频</li>
<li><a href="http://hukai.me/blog/archives/" target="_blank" rel="external">胡凯</a>：腾讯Android</li>
<li><a href="http://android-performance.com/" target="_blank" rel="external">Android-Performance.com</a>：一个只关注安卓性能优化以及最佳实践的Blog</li>
</ul>
<hr>
<h1 id="第三方库">第三方库</h1><h2 id="MaterialEditText">MaterialEditText</h2><ul>
<li><a href="https://github.com/rengwuxian/MaterialEditText" target="_blank" rel="external">MaterialEditText</a>：顾名思义，增加Material Design 特性的EditText</li>
</ul>
<h2 id="RxJava">RxJava</h2><ul>
<li><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">RxJava</a></li>
</ul>
<p>资料除了上面的技术博客之外，还有：</p>
<ul>
<li><a href="https://github.com/lzyzsd/Awesome-RxJava" target="_blank" rel="external">Awesome-RxJava</a><br><strong>摘要</strong>：RxJava resources</li>
<li><a href="http://www.devtf.cn/?s=RxJava" target="_blank" rel="external">开发技术前线中的RxJava资料</a></li>
<li><a href="https://github.com/GDG-Korea/HelloRx" target="_blank" rel="external">韩国 GDG 的 RxJava 实例</a></li>
<li><a href="https://github.com/kaushikgopal/RxJava-Android-Samples" target="_blank" rel="external">一些 RxJava Examples</a></li>
<li><a href="https://github.com/mcxiaoke/RxDocs" target="_blank" rel="external">中文 RxDocs</a></li>
<li>[The RxJava show with Dan Lew (Part 1)(<a href="http://fragmentedpodcast.com/episodes/3/" target="_blank" rel="external">http://fragmentedpodcast.com/episodes/3/</a>) <a href="http://fragmentedpodcast.com/episodes/4/" target="_blank" rel="external">(Part 2)</a>：两篇Fragmented Podcast的RxJava专题，第一篇入门介绍，第二篇讨论了很多RxJava的坑和很多Operators的用法</li>
<li><a href="http://blog.danlew.net/2014/09/15/grokking-rxjava-part-1/" target="_blank" rel="external">Dan Lews RxJava Series</a></li>
<li><a href="http://nerds.weddingpartyapp.com/tech/2014/09/15/learning-rxjava-with-android-by-example/" target="_blank" rel="external">Learning RxJava With Android by Example</a></li>
<li><a href="https://gist.github.com/staltz/868e7e9bc2a7b8c1f754" target="_blank" rel="external">Intro to Rx you’ve been missing</a></li>
</ul>
<hr>
<h1 id="开源项目">开源项目</h1><ul>
<li><a href="https://github.com/Trinea/android-open-project%20Android%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%88%86%E7%B1%BB%E6%B1%87%E6%80%BB" target="_blank" rel="external">Android开源项目分类汇总</a></li>
<li><a href="http://www.verydemo.com/one_c55.html" target="_blank" rel="external">Demo大全</a></li>
<li><a href="http://project.codefrom.com/" target="_blank" rel="external">开源项目集</a> 每天更新最新，最热，最有意思的开源项目</li>
<li><a href="https://github.com/google" target="_blank" rel="external">Google项目合集</a> 供初学者学习代码和规范</li>
<li><a href="https://github.com/googlesamples" target="_blank" rel="external">GoogleSamples</a></li>
<li><a href="http://git.oschina.net/oschina/android-app" target="_blank" rel="external">开源中国客户端代码</a> 值得学习</li>
<li><a href="https://github.com/MiCode" target="_blank" rel="external">小米开源项目</a></li>
<li><a href="https://github.com/googlesamples?utf8=%25E2%259C%2593&amp;query=android" target="_blank" rel="external">Search Android - Google Samples</a>：谷歌官方会经常推出一些Android 新技术的Demo，比如每年的IO App 等等</li>
<li>Android Api demos：下载SDK 之后，会在<code>&lt;sdk-insall-folder&gt;/samples/</code>中查看系统自带的好多Demo。</li>
<li><a href="http://www.zhihu.com/question/26687642" target="_blank" rel="external">有没有适合 Android 开发初学者的 App 源码推荐？</a>：知乎问题</li>
<li><a href="http://www.apkbus.com/android-1108-1-1.html" target="_blank" rel="external">Android小项目合集</a></li>
</ul>
<hr>
<h1 id="学习资料">学习资料</h1><h2 id="基础">基础</h2><ul>
<li><a href="http://hukai.me/android-training-course-in-chinese/index.html" target="_blank" rel="external">Android官方培训课程中文版</a></li>
<li><a href="http://stormzhang.com/android/2014/07/07/learn-android-from-rookie/" target="_blank" rel="external">Android学习之路</a>：stormzhang的经验之谈</li>
<li><a href="http://www.imooc.com/course/list?c=android" target="_blank" rel="external">慕课网</a></li>
<li><a href="https://www.udacity.com/course/viewer#!/c-ud853/l-1395568821/m-1643858568" target="_blank" rel="external">Developing Android Apps</a> Google和Udacity合作提供</li>
<li><a href="https://github.com/GDGNanyang/studyjam" target="_blank" rel="external">Developing Android Apps 中文 SRT 发布区</a></li>
<li><a href="http://studyjamscn.com/11-developing-android-apps" target="_blank" rel="external">Developing Android Apps 第一课中文版发布</a></li>
<li><a href="http://ifeve.com/google-guava/" target="_blank" rel="external">Google Guava官方教程（中文版）</a></li>
</ul>
<h2 id="提高">提高</h2><ul>
<li><a href="http://v.qq.com/vplus/bugly" target="_blank" rel="external">腾讯Bugly</a></li>
<li><a href="http://www.infoq.com/cn/presentations" target="_blank" rel="external">Info演讲</a>部分与Android相关</li>
<li><a href="http://club.alibabatech.org/" target="_blank" rel="external">阿里技术沙龙</a></li>
<li><a href="http://jcodecraeer.com/" target="_blank" rel="external">泡在网上的日子</a></li>
</ul>
<h2 id="常用图片">常用图片</h2><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/Activity%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png" alt="Activity生命周期.png"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/fragment_lifecycle.png" alt="fragment_lifecycle.png"><br><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/activity_fragment_lifecycle.png" alt="activity_fragment_lifecycle.png"></p>
<hr>
<h1 id="开发工具">开发工具</h1><ul>
<li>AndroidStudio<br><a href="http://www.android-studio.org/" target="_blank" rel="external">AndroidStudio社区</a><br><a href="http://www.codeceo.com/article/android-studio-skills.html" target="_blank" rel="external">提高效率的 Android Studio 技巧汇总</a></li>
</ul>
<hr>
<h1 id="UI">UI</h1><h2 id="配色">配色</h2><p><a href="http://appui.mobi/" target="_blank" rel="external">APP UI</a></p>
<h2 id="素材">素材</h2><p><a href="http://www.sketchappsources.com/all-free-sources.html" target="_blank" rel="external">SketchAppSources</a> Sketch资源<br><a href="http://www.easyicon.net/" target="_blank" rel="external">EasyIcon</a> 图标搜索<br><a href="http://www.toicon.com/" target="_blank" rel="external">ToIcon</a> 图标搜索<br><a href="https://thenounproject.com/" target="_blank" rel="external">Noun Project</a> 图标搜索<br><a href="http://www.uisdc.com/material-design-freebie" target="_blank" rel="external">新鲜热辣！一组实用的MATERIAL DESIGN风格素材！</a><br><a href="http://www.uisdc.com/high-quality-material-design-resource" target="_blank" rel="external">该跟上潮流了！一大波优质的MATERIAL DESIGN资源免费下载</a></p>
<h2 id="Material_Design">Material Design</h2><p><a href="http://wiki.jikexueyuan.com/project/material-design/material-design-intro/introduction.html" target="_blank" rel="external">MaterialDesign中文版</a> 极客学院<br><a href="http://www.materialpalette.com/" target="_blank" rel="external">Materialpalette</a> Material配色工具<br><a href="http://www.materialup.com/" target="_blank" rel="external">Materialup</a> Material设计灵感<br><a href="http://www.uisdc.com/tag/material-design" target="_blank" rel="external">Material</a> 优设MaterialDesign版<br><a href="http://www.uisdc.com/material-design-google-io-app" target="_blank" rel="external">超赞！谷歌设计师的MATERIAL DESIGN实践心得</a><br><a href="http://www.uisdc.com/material-design-learning-experience" target="_blank" rel="external">学霸的自学笔记！MATERIAL DESIGN设计规范学习心得</a><br><a href="http://www.uisdc.com/material-design-trends" target="_blank" rel="external">超全面总结！深聊MATERIAL DESIGN引领的设计趋势</a></p>
<h2 id="Google_Material资源">Google Material资源</h2><p><a href="http://material-design.storage.googleapis.com/publish/v_2/material_ext_publish/0B08MbvYZK1iNT0dFWFBjdTNKaXM/color_swatches.zip" target="_blank" rel="external">配色方案</a><br><a href="http://material-design.storage.googleapis.com/publish/v_2/material_ext_publish/0Bx4BSt6jniD7V2s1ay1rTmM0dG8/Layout_Mobile_Whiteframe.ai" target="_blank" rel="external">界面模板：手机</a><br><a href="http://material-design.storage.googleapis.com/publish/v_2/material_ext_publish/0Bx4BSt6jniD7U2hHWS1kS1JjT0k/Layout_Tablet_Whiteframe.ai" target="_blank" rel="external">界面模板：平板</a><br><a href="http://material-design.storage.googleapis.com/publish/v_2/material_ext_publish/0Bx4BSt6jniD7UHpjdlh5bUd6Z2c/Layout_Desktop_Whiteframe.ai" target="_blank" rel="external">界面模板：桌面</a><br><a href="http://material-design.storage.googleapis.com/publish/v_2/material_ext_publish/0Bx4BSt6jniD7SUJUS0dQVktmSXc/whiteframes.ai" target="_blank" rel="external">界面模板：线框图</a><br><a href="http://material-design.storage.googleapis.com/publish/v_2/material_ext_publish/0B08MbvYZK1iNZGNoWmJqVEhQYTQ/RobotoTTF.zip" target="_blank" rel="external">英文字体Roboto</a><br><a href="http://material-design.storage.googleapis.com/publish/v_2/material_ext_publish/0B6VCDMjD5_VAbXZ5WWxPRDhSVUU/RobotoSpecimenBooklet.pdf" target="_blank" rel="external">Roboto介绍</a><br><a href="http://www.google.com/get/noto/pkgs/NotoSansCJKSC-hinted.zip" target="_blank" rel="external">中文字体Noto</a><br><a href="http://material-design.storage.googleapis.com/publish/v_2/material_ext_publish/0Bx4BSt6jniD7MGtzS0lpeFZUYmc/stickersheet_general.psd" target="_blank" rel="external">组件集psd</a><br><a href="http://material-design.storage.googleapis.com/publish/v_2/material_ext_publish/0Bx4BSt6jniD7WDR5Q25OcXVuU28/stickersheet_general.ai" target="_blank" rel="external">组件集ai</a><br><a href="http://material-design.storage.googleapis.com/publish/v_2/material_ext_publish/0Bx4BSt6jniD7Q3FVZ0FnM18yTHM/stickersheet_general.sketch" target="_blank" rel="external">组件集sketch</a><br><a href="http://material-design.storage.googleapis.com/publish/v_2/material_ext_publish/0B08MbvYZK1iNUzJ4c1VXWDYzbTA/material-design-icons-1.0.1.zip" target="_blank" rel="external">系统图标</a></p>
<hr>
<h1 id="Material标准">Material标准</h1><p><strong>完整版见<a href="http://www.uisdc.com/comprehensive-material-design-note" target="_blank" rel="external">MaterialDesign学习笔记</a></strong></p>
<h2 id="颜色">颜色</h2><p><img src="http://7xo8t2.com1.z0.glb.clouddn.com/img/a-10.png" alt="a-10.png"><br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-11.png" alt=""><br>黑色：[87% 普通文字] [54% 减淡文字] [26% 禁用状态/提示文字] [12% 分隔线]<br>白色：[100% 普通文字] [70% 减淡文字] [30% 禁用状态/提示文字] [12% 分隔线]</p>
<h2 id="图标">图标</h2><ul>
<li><p>桌面图标尺寸：48dp x 48dp</p>
</li>
<li><p>小图标尺寸：24dp X 24dp，图形限制在中央20dp X 20dp区域内。<br>栅格系统。线条、空隙尽量保持2dp宽，圆角半径2dp。特殊情况相应调整。<br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-22.png" alt=""><br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-23.png" alt=""><br>小图标的颜色使用纯黑与纯白，通过透明度调整：<br>黑色：[54% 正常状态] [26% 禁用状态]<br>白色：[100% 正常状态] [30% 禁用状态]</p>
</li>
</ul>
<h2 id="图片">图片</h2><ul>
<li><p>图片上的文字，需要淡淡的遮罩确保其可读性。深色的遮罩透明度在20%-40%之间，浅色的遮罩透明度在40%-60%之间。</p>
</li>
<li><p>Android L可以从图片中提取主色，运用在其他UI元素上</p>
</li>
<li><p>图片的加载过程非常讲究，透明度、曝光度、饱和度3个指标依次变化，效果相当细腻。<br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-30.png" alt=""></p>
</li>
</ul>
<h2 id="文字">文字</h2><ul>
<li><p>英文字体使用Roboto，中文字体使用Noto。<br>Roboto有6种字重：Thin、Light、Regular、Medium、Bold 和 Black<br>Noto有7种字重：Thin, Light、DemiLight、Regular、Medium、Bold 和 Black。</p>
</li>
<li><p>常用字号</p>
<blockquote>
<p>12sp 小字提示<br>14sp（桌面端13sp） 正文/按钮文字<br>16sp（桌面端15sp） 小标题<br>20sp Appbar文字<br>24sp 大标题<br>34sp/45sp/56sp/112sp 超大号文字</p>
</blockquote>
</li>
</ul>
<h2 id="布局">布局</h2><ul>
<li><p>所有可操作元素最小点击区域尺寸：48dp X 48dp</p>
</li>
<li><p>栅格系统的最小单位是8dp，一切距离、尺寸都应该是8dp的整数倍。</p>
</li>
<li><p>常见尺寸与距离</p>
<blockquote>
<p>顶部状态栏高度：24dp<br>Appbar最小高度：56dp<br>底部导航栏高度：48dp<br>悬浮按钮尺寸：56x56dp/40x40dp<br>用户头像尺寸：64x64dp/40x40dp<br>小图标点击区域：48x48dp<br>侧边抽屉到屏幕右边的距离：56dp<br>卡片间距：8dp<br>分隔线上下留白：8dp<br>大多元素的留白距离：16dp<br>屏幕左右对齐基线：16dp<br>文字左侧对齐基线：72dp</p>
</blockquote>
</li>
</ul>
<p><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-33.png" alt=""></p>
<h2 id="组件">组件</h2><ul>
<li><p>Bottom Sheets，列表或网格式<br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-36.png" alt=""><br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-39.png" alt=""></p>
</li>
<li><p>Cards，统一2dp圆角<br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-48.png" alt=""><br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-49.png" alt="这里写图片描述"></p>
</li>
<li><p>Dialogs<br>取消类操作项放在左边，引起变化的操作项放在右边。<br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-59.png" alt=""></p>
</li>
<li><p>Grids，网格中的单元格间距是2dp或8dp</p>
</li>
<li><p>Lists<br>如果列表项内容文字超过3行，请改用卡片。如果列表项的主要区别在于图片，请改用网格。</p>
</li>
<li><p>Menus<br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-82.png" alt=""></p>
</li>
<li><p>SnackBars &amp; Toasts<br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-91.png" alt=""></p>
</li>
<li><p>Tabs，选中项的下划线高度是2dp。</p>
</li>
<li><p>Text fields，激活状态和错误状态，横线的宽度变为2dp<br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-104.png" alt=""><br>输入框提示文字，可以在输入内容后，缩小停留在输入框左上角<br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-106.png" alt=""><br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-113.png" alt="这里写图片描述"></p>
</li>
<li><p>ToolTips<br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-119.png" alt=""></p>
</li>
<li><p>Navigation Drawer<br><img src="http://image.uisdc.com/wp-content/uploads/2014/12/a-121.png" alt=""></p>
</li>
</ul>
<hr>
<h1 id="经验教训">经验教训</h1><ol>
<li>小米4真机调试，除了开启开发者选项和USB调试外，必须用买手机时附带的数据线。就算小米2的数据线也不行，虽然一样能用来传输文件，但是调试时显示Unknown</li>
<li>还是小米，写了个收短信的APP，在模拟器上测试通过。但是在小米4上却无法收到。最后发现权限管理里该APP的默认短信权限是<code>询问</code>，把它改成<code>允许</code>才成功。不知道有没有更好的解决办法，在配置文件里申请了权限还不够。</li>
<li>电脑上的文件，在安卓上用自己写的APP打开是乱码。百度了原来安卓上使用的是utf-8编码，在IO流中指定即可。</li>
<li>这个实际上是Java写Java工具时遇到过的坑，现在写安卓用到Calendar又想了起来。一定要加上这一句<code>calendar.setTimeZone(TimeZone.getTimeZone(&quot;GMT+8&quot;));</code>免得出现奇怪的时间问题。</li>
<li>如果XML中注册的组件没有写<code>layout-width</code>或<code>layout-height</code>属性，则APP启动时会报错退出。</li>
<li>Android 重写了 toString()方法，如果需要用Java默认的toString()来识别是否同一对象，需要自己实现一次。</li>
<li>使用adb命令安装APK时，就算文件在当前目录下，也必须加一个<code>/</code>，如：<code>adb install /xxx.apk</code></li>
</ol>
<p>To Be Continued …</p>
<hr>
<h1 id="最佳实践">最佳实践</h1><h2 id="App中再按一次退出">App中再按一次退出</h2><p>法一：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">long</span> exitTime = <span class="number">0</span>;</span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBackPressed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((System.currentTimeMillis() - exitTime) &gt; <span class="number">2000</span>) &#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>,R.string.press_again_exit_app,Toast.LENGTH_SHORT).show();</span><br><span class="line">        exitTime = System.currentTimeMillis();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>法二：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Toast toast;</span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    toast = Toast.makeText(<span class="keyword">this</span>, <span class="string">"再按一次退出"</span>, Toast.LENGTH_LONG);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBackPressed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">null</span> == toast.getView.getParent())&#123;</span><br><span class="line">        toast.show();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.exit(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[About]]></title>
      <url>http://lovenight.github.io/About/index.html</url>
      <content type="html"><![CDATA[<p>Android、Python新手。热爱古文化，喜欢道家，习惯安静独处。</p>
<h2 id="About_Me">About Me</h2><ul>
<li>性别：男</li>
<li>生年：88</li>
<li>现居：杭州</li>
<li>学历：本科</li>
<li>学校：浙江大学</li>
<li>专业：材料科学与工程</li>
<li>Github：<a href="https://github.com/loveNight" target="_blank" rel="external">loveNight</a></li>
<li>Email：jwgmail@126.com</li>
</ul>
<h2 id="Technical_List">Technical List</h2><ul>
<li>了解语言: Python, Java</li>
<li>数据库: SQLite</li>
<li>版本管理: Git</li>
<li>单元测试: unittest</li>
<li>开发工具: Sublime Text 3, Eclipse</li>
</ul>
<p><em>自古求真皆寂寞，惟挑心灯伴夜霭。</em></p>
]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>http://lovenight.github.io/404.html</url>
      <content type="html"><![CDATA[<!DOCTYPE HTML>
<html>
<head>
  <meta http-equiv="content-type" content="text/html;charset=utf-8;">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="robots" content="all">
  <meta name="robots" content="index,follow">
</head>
<body>

<script type="text/javascript" src="http://www.qq.com/404/search_children.js" charset="utf-8" homepageurl="your site url " homepagename="回到我的主页">
</script>

</body>
</html>
]]></content>
    </entry>
    
  
</search>
